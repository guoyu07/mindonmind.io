<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Mind on Mind</title>
 <link href="http://mindonmind.github.io/atom.xml" rel="self"/>
 <link href="http://mindonmind.github.io"/>
 <updated>2015-10-31T03:34:36-04:00</updated>
 <id>http://mindonmind.github.io</id>
 <author>
   <name>mindonmind</name>
   <email></email>
 </author>

 
 <entry>
   <title>新生</title>
   <link href="http://mindonmind.github.io/2015/10/31/stay-tuned"/>
   <updated>2015-10-31T03:30:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2015/10/31/stay-tuned</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;这个 blog 还活着，近期会有大动作。&lt;/p&gt;
&lt;p&gt;Stay tuned!&lt;/p&gt;
&lt;p&gt;p.s. 重新写字的感觉真好。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>从写好文章说起</title>
   <link href="http://mindonmind.github.io/2014/10/21/personal-and-other-essays"/>
   <updated>2014-10-21T22:00:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2014/10/21/personal-and-other-essays</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;最近阅读了几本有关英文写作的书，恍然意识到，十几年的语文课，除了教我识字外没教会其他任何有用的东西。&lt;/p&gt;
&lt;p&gt;因为对写作的无知，从小到大我都是凭直觉在写，也是凭直觉在读。虽然直觉的引领有助于摸索出正确的方向，但进一步的提高必须依赖有意识的训练。最近我就恶补了很多有关写作的知识。&lt;/p&gt;
&lt;p&gt;首先谈文体。文章可以分为两类，一类重观点，多用论述、说理、推断等手法表达作者的看法或介绍某种理论，可统称为论述类；另一类重情感，多用记叙、描写、抒情等手段再现作者的心理活动，可称为情感类。&lt;/p&gt;
&lt;p&gt;论述类的文章，强调主题突出。每段要有一个服务于主题的话题，段内所有内容都要围绕这个话题展开，决不能分散。对于此类文章，逻辑至关重要。句子与句子之间，段落与段落之间都要讲逻辑，逻辑一乱，文章的说服力和档次立即被拉低。为了增强逻辑性，此类文章往往会采用固定的布局。&lt;/p&gt;
&lt;p&gt;情感类的文章则没有格式上的约束，只要行文流畅自然，作者可以想怎么写就怎么写，所以也常被称为散文&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;。与论述类文章比，散文侧重传递情绪，主题和逻辑则被隐到了幕后。尝试过便知道，散文更难写，对语感和语言的掌控要求更高。这种难度并不在于句式的复杂或词汇的华丽，却在于用最平易的语汇，创造性地编排出恰当的节奏与韵律，以营造特定的氛围。&lt;/p&gt;
&lt;p&gt;我喜欢的散文，光滑圆润，起伏有律，安静且冷静，读来如在广阔的水域随波逐流，读后留下一点淡淡的印象，如似有似无的香味。对作者来说，这种体验很难把控，一不小心就暴露出矫情与自怜。读散文，读的还是作者的情趣、品位、创造力，及内心的丰富与深刻程度。&lt;/p&gt;
&lt;p&gt;推广开来，文章、音乐、设计，体现的不过都是创造者的素养。想成为一个好的创作者，必定需要经历一个痛苦的过程。而作为读者、听者或消费者，有时也会很痛苦，因为动人的文章、动人的音乐、动人的产品，实在是太难遇到了。这样一想，还是争取做好的创作者吧。&lt;/p&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;从专业术语角度，散文是一个非常宽泛的概念，不仅可以指朱自清常写的那种散文，还可以包括杂文、随笔等任何非诗歌、韵文类的无严格韵脚限制的文章，对应英文中的 Essay。在这里特指记叙抒情性的散文，或英文中的 Personal Essay。&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>从 B 到 C：半自觉</title>
   <link href="http://mindonmind.github.io/2013/12/28/semi-awareness"/>
   <updated>2013-12-28T23:49:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/12/28/semi-awareness</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;十二月份，读了两本好书：《文学回忆录》和《禅与摩托车维修技术》。&lt;br/&gt; 这两本书是一起读的，所以才更有收获。&lt;br/&gt; 木心说，青春是不自觉的，浪漫的，浅薄的，空洞的。&lt;br/&gt; 由丑小鸭到天鹅，就是一个从不自觉，到半自觉，再到全然自觉的过程——自觉到自己原来是只天鹅，不是鸡鸭狗，也不是孔雀，是天鹅。&lt;br/&gt; 想要出东西，自觉很重要，要自己做自己的老师，不断地自我教育。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;确立观点，摸索方法。&lt;br/&gt; 有些东西，不去想，不去碰，不是好办法。&lt;br/&gt; 想要不断追求更高的境界，或者想要活得清楚明白，逃不过，躲不过的。&lt;br/&gt; 难得糊涂难得糊涂，说这句话的人，心里比谁都清楚哩！&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;人活着为了什么？&lt;br/&gt; 想清楚了，看清路了，走去吧，要有耐性、虚心，等彻悟后还要再任点性。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;由误解开始，由理解结束，当作诀别。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Real Number 1.1] Basic Definitions: Set, Group, Ring and Field</title>
   <link href="http://mindonmind.github.io/2013/11/12/notes-real-number-basic-definitions"/>
   <updated>2013-11-12T01:37:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/12/notes-real-number-basic-definitions</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://www.math.nus.edu.sg/~urops/Projects/RealNumbers.pdf&quot;&gt;&lt;em&gt;Construction of the Real Number System&lt;/em&gt;&lt;/a&gt; p7-p16&lt;/p&gt;
&lt;p&gt;There are some basic definitions for the construction of the real number system. In fact, they are also very useful and fundamental mathematical concepts when dealing with many math subjects. These are &lt;strong&gt;set&lt;/strong&gt;, &lt;strong&gt;relation&lt;/strong&gt;, &lt;strong&gt;equivalance relation&lt;/strong&gt;, &lt;strong&gt;partial order&lt;/strong&gt;, &lt;strong&gt;total order&lt;/strong&gt;, &lt;strong&gt;infimum&lt;/strong&gt;, &lt;strong&gt;supremum&lt;/strong&gt;, &lt;strong&gt;maximum&lt;/strong&gt;, &lt;strong&gt;minimum&lt;/strong&gt;, &lt;strong&gt;well-ordered set&lt;/strong&gt;, &lt;strong&gt;order completeness&lt;/strong&gt;, &lt;strong&gt;function&lt;/strong&gt; and its classification, &lt;strong&gt;infinite set&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img  src=&quot;/assets/images/relation.svg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/function.svg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Then based on these basic concepts, we can get some familiar definitions in algebra and analysis, such as: &lt;strong&gt;binary operation&lt;/strong&gt; and its classification, &lt;strong&gt;semi-groups&lt;/strong&gt;, &lt;strong&gt;groups&lt;/strong&gt;, &lt;strong&gt;rings&lt;/strong&gt;, &lt;strong&gt;integral domain&lt;/strong&gt;, &lt;strong&gt;ordered integral domain&lt;/strong&gt;, &lt;strong&gt;fileds&lt;/strong&gt;, &lt;strong&gt;isomorphism&lt;/strong&gt;, &lt;strong&gt;sequences&lt;/strong&gt;, &lt;strong&gt;limit&lt;/strong&gt;, &lt;strong&gt;Cauchy sequecne&lt;/strong&gt; and &lt;strong&gt;Cauchy complete&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/group_ring_field.svg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/sequence.svg&quot;&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Analysis 2.10] 极值与条件极值</title>
   <link href="http://mindonmind.github.io/2013/11/10/notes-analysis-extrema-and-conditional-extrema"/>
   <updated>2013-11-10T22:47:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/10/notes-analysis-extrema-and-conditional-extrema</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/1237679/&quot;&gt;&lt;em&gt;数学分析教程 下&lt;/em&gt;&lt;/a&gt; p.158 - p.175&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;极值&lt;/strong&gt;点和&lt;strong&gt;绝对极值&lt;/strong&gt;点分别指函数在某点邻域内大于（小于）等于或严格大于（小于）等于其周围点值的点。关于任意极值，如果 &lt;span class=&quot;math inline&quot;&gt;\(Jf({\boldsymbol{p}}_0)\)&lt;/span&gt; 存在，那么 &lt;span class=&quot;math inline&quot;&gt;\(Jf({\boldsymbol{p}}_0) = {\boldsymbol{0}}\)&lt;/span&gt;，反之则不一定成立。所有 &lt;span class=&quot;math inline&quot;&gt;\(Jf({\boldsymbol{p}})=0\)&lt;/span&gt; 的点称为&lt;strong&gt;驻点&lt;/strong&gt;。判断驻点是否为极值点，有如下定理：设 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 是函数 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 的一个驻点，函数 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 的某一邻域有连续的二阶偏导数，那么如果 &lt;span class=&quot;math inline&quot;&gt;\(Hf({\boldsymbol{x}}_0)\)&lt;/span&gt; 正（负）定，那么 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 是 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 的一个严格极小（大）值点；如果 &lt;span class=&quot;math inline&quot;&gt;\(Hf({\boldsymbol{x}}_0)\)&lt;/span&gt; 不定，那么 &lt;span class=&quot;math inline&quot;&gt;\(x_0\)&lt;/span&gt; 不是 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 的极值点；如果 &lt;span class=&quot;math inline&quot;&gt;\(Hf({\boldsymbol{x}}_0)\)&lt;/span&gt; 半正（负）定，那么不能确定 &lt;span class=&quot;math inline&quot;&gt;\(x_0\)&lt;/span&gt; 是否是 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 的一个极值点。&lt;/p&gt;
&lt;p&gt;如果在求解极值的同时要求变量之间满足一定的关系，比如 &lt;span class=&quot;math inline&quot;&gt;\(f(x_1, \dots, x_n, y_1, \dots, y_m)\)&lt;/span&gt; 是一个多元函数，且变量 &lt;span class=&quot;math inline&quot;&gt;\(x_1, \dots, x_n, y_1, \dots, y_m\)&lt;/span&gt; 间满足下面的约束： &lt;span class=&quot;math display&quot;&gt;\[\begin{equation}
\begin{array}{rl}
        &amp;amp;\Phi_1(x1,\dots,x_n, y_1,\dots,y_n) =0,\\
        &amp;amp;\Phi_2(x_1,\dots,x_n, y_1, \dots, y_n) = 0,\\
        &amp;amp;\ldots \\
        &amp;amp;\Phi_n(x_1, \dots, x_n, y_1, \dots, y_n) = 0
    \end{array}
\end{equation}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;那么这样求得的极值便称为&lt;strong&gt;条件极值&lt;/strong&gt;。如果把上式中的约束看作 &lt;span class=&quot;math inline&quot;&gt;\(R^{n+m}\)&lt;/span&gt; 维空间中的某个曲面（曲线），那么条件极值便是在这个曲面（曲线）上求 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 的极值点。&lt;/p&gt;
&lt;p&gt;关于条件极值，有如下定理，它是 &lt;strong&gt;Lagrange 数乘法&lt;/strong&gt; 的理论基础。设 &lt;span class=&quot;math inline&quot;&gt;\(D\subset {\boldsymbol{R}}^{n+m}\)&lt;/span&gt;，函数 &lt;span class=&quot;math inline&quot;&gt;\(f: D\to {\boldsymbol{R}}\)&lt;/span&gt;，映射 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{\Phi}} D\to {\boldsymbol{R}}^m\)&lt;/span&gt;，它们满足如下条件：&lt;br/&gt; 1) &lt;span class=&quot;math inline&quot;&gt;\(f, {\boldsymbol{\Phi}}\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 上连续可微&lt;br/&gt; 2) 存在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{z}} \in D\)&lt;/span&gt; 使得 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{\Phi}}({\boldsymbol{z}})={\boldsymbol{0}}\)&lt;/span&gt;&lt;br/&gt; 3) &lt;span class=&quot;math inline&quot;&gt;\(\mathrm{det} J_y\Phi(z_0) \neq 0\)&lt;/span&gt;&lt;br/&gt; 那么如果 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{z}}_0\)&lt;/span&gt; 是满足 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{\Phi}}(z) = 0\)&lt;/span&gt; 条件下的极值点，那么存在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{\lambda}} \in {\boldsymbol{R}}^{1\times m}\)&lt;/span&gt;，使得： &lt;span class=&quot;math display&quot;&gt;\[Jf({\boldsymbol{z}}_0) + {\boldsymbol{\lambda}} J{\boldsymbol{\Phi}}({\boldsymbol{z}}_0) = {\boldsymbol{0}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;此外还有判断条件极值的充分条件：如果 &lt;span class=&quot;math inline&quot;&gt;\(z_0\)&lt;/span&gt; 是辅助函数： &lt;span class=&quot;math display&quot;&gt;\[F({\boldsymbol{z}}) = f({\boldsymbol{z}}) + \sum_{i=1}^{m}\lambda_i\Phi_i({\boldsymbol{z}})\]&lt;/span&gt; 的驻点，&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{z}} = (x_1, \dots, x_n, y_1, \dots, y_m)\)&lt;/span&gt;，记： &lt;span class=&quot;math display&quot;&gt;\[HF({\boldsymbol{z}}_0) = \bigg(\frac{\partial^2 F}{\partial z_j \partial z_k}({\boldsymbol{z}}_0)\bigg)_{1 \leq j,k \leq m+n}\]&lt;/span&gt; 那么，如果 &lt;span class=&quot;math inline&quot;&gt;\(HF({\boldsymbol{z}}_0)\)&lt;/span&gt; 正定，那么 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{z}}_0\)&lt;/span&gt; 取严格的条件极小值，如果&lt;span class=&quot;math inline&quot;&gt;\(HF({\boldsymbol{z}}_0)\)&lt;/span&gt; 负定，那么 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{z}}_0\)&lt;/span&gt; 取严格的条件极大值，如果&lt;span class=&quot;math inline&quot;&gt;\(HF({\boldsymbol{z}}_0)\)&lt;/span&gt; 不定或者半定，均无法确定 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{z}}_0\)&lt;/span&gt; 是否为条件极值。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes Analysis 2.9] 高阶偏导数与泰勒定理</title>
   <link href="http://mindonmind.github.io/2013/11/10/notes-analysis-high-order-derivative-and-taylor-theorem"/>
   <updated>2013-11-10T19:06:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/10/notes-analysis-high-order-derivative-and-taylor-theorem</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/1237679/&quot;&gt;&lt;em&gt;数学分析教程 下&lt;/em&gt;&lt;/a&gt; p.148 - p.158&lt;/p&gt;
&lt;h2 id=&quot;高阶偏导数&quot;&gt;高阶偏导数&lt;/h2&gt;
&lt;p&gt;对于一个多元函数，它的任意一个偏导数 &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial f}{\partial x_i}\)&lt;/span&gt; 仍是一个多元函数，因此假设对这个多元函数继续求偏，便可以得到二阶的偏导数。对于一个 &lt;span class=&quot;math inline&quot;&gt;\(n\)&lt;/span&gt; 元函数，它有 &lt;span class=&quot;math inline&quot;&gt;\(n^k\)&lt;/span&gt; 个 &lt;span class=&quot;math inline&quot;&gt;\(k\)&lt;/span&gt; 阶偏导，对于这些同阶的偏导，如果它们求导的各变元次数相同，且这些偏导都在 &lt;span class=&quot;math inline&quot;&gt;\(x_0\)&lt;/span&gt; 处存在并连续，那么这些偏导便全部相等。&lt;/p&gt;
&lt;h2 id=&quot;泰勒定理&quot;&gt;泰勒定理&lt;/h2&gt;
&lt;p&gt;为了介绍泰勒定理在多元函数上的推广，首先有： &lt;span class=&quot;math display&quot;&gt;\[(x_1 + \dots + x_n)^k = \sum_{a_1+\dots+a_n=k} \frac{k!}{a_1!\cdots a_n!} x_1^{a_1}\cdots x_n^{a_n}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而多元函数的泰勒定理讲得是，在凸域 &lt;span class=&quot;math inline&quot;&gt;\(D \subset {\boldsymbol{R}}^n\)&lt;/span&gt; 上的 &lt;span class=&quot;math inline&quot;&gt;\(m+1\)&lt;/span&gt; 阶连续可微函数 &lt;span class=&quot;math inline&quot;&gt;\(f: D\to R\)&lt;/span&gt;， &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}} = (a_1, a_2, \dots, a_n)\)&lt;/span&gt; 和 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}+{\boldsymbol{h}}\)&lt;/span&gt;，那么存在 &lt;span class=&quot;math inline&quot;&gt;\(\theta \in (0,1)\)&lt;/span&gt;，使得： &lt;span class=&quot;math display&quot;&gt;\[f({\boldsymbol{a}}+{\boldsymbol{h}}) = f({\boldsymbol{a}}) + \sum_{k=1}^{m}\sum_{|a|=k}\frac{D^\alpha f({\boldsymbol{a}})}{\alpha !}{\boldsymbol{h}}^\alpha + R_m \\
R_m = \sum_{|\alpha| = m+1} \frac{D^{\alpha}f({\boldsymbol{a}} + \theta {\boldsymbol{h}})}{\alpha !}{\boldsymbol{h}}^\alpha\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;或者写成： &lt;span class=&quot;math display&quot;&gt;\[f({\boldsymbol{a}}+{\boldsymbol{h}}) = f({\boldsymbol{a}}) + \frac{1}{k!}\sum_{k=1}^{m} (\frac{\partial f}{\partial x_1}h_1+ \frac{\partial f}{\partial x_2}h_2+ \dots+ \frac{\partial f}{\partial x_n}h_n)^k({\boldsymbol{a}}) + R_m \\
R_m = \frac{1}{(k+1)!}(\frac{\partial f}{\partial x_1}h_1+ \frac{\partial f}{\partial x_2}h_2+ \dots+\frac{\partial f}{\partial x_n}h_n)^{k+1}({\boldsymbol{a}}+\theta {\boldsymbol{h}})\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上面这个式子用算子运算的形式来表达泰勒公式。在应用中我们最常用到的其实是多元函数的一阶或二阶泰勒展开，记： &lt;span class=&quot;math display&quot;&gt;\[{\boldsymbol{H}} = \begin{pmatrix}
\frac{\partial^2 f}{\partial x_1^2}  &amp;amp; \frac{\partial^2 f}{\partial x_1x_2}  &amp;amp; \cdots  &amp;amp; \frac{\partial^2 f}{\partial x_1x_n}\\
\vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp;\vdots \\
\frac{\partial^2 f}{\partial x_nx_1} &amp;amp; \frac{\partial^2 f}{\partial x_nx_2} &amp;amp; \cdots &amp;amp; \frac{\partial^2 f}{\partial x_n^2}\end{pmatrix}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;称为 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 的&lt;strong&gt;Heissen 阵&lt;/strong&gt;，那么如果将泰勒公式展开到二阶项，便有： &lt;span class=&quot;math display&quot;&gt;\[f({\boldsymbol{a}}+{\boldsymbol{h}}) = f({\boldsymbol{a}}) + \sum_{i=1}^{n}\frac{\partial f}{\partial x_i}({\boldsymbol{a}}) + \frac{1}{2} {\boldsymbol{h}}^{T} {\boldsymbol{H}}({\boldsymbol{a}}) {\boldsymbol{h}} + \frac{1}{3!}(\frac{\partial f}{\partial x_1}h_1+\dots+\frac{\partial f}{\partial x_n}h_n)^3({\boldsymbol{a}}+ \theta {\boldsymbol{h}})\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&quot;math inline&quot;&gt;\(\theta \in (0,1)\)&lt;/span&gt;。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Analysis 2.8] 隐映射与逆映射定理</title>
   <link href="http://mindonmind.github.io/2013/11/09/notes-analysis-theorem-implicit"/>
   <updated>2013-11-09T19:58:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/09/notes-analysis-theorem-implicit</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/1237679/&quot;&gt;&lt;em&gt;数学分析教程 下&lt;/em&gt;&lt;/a&gt; p.127 - p.147&lt;/p&gt;
&lt;h2 id=&quot;隐函数定理&quot;&gt;隐函数定理&lt;/h2&gt;
&lt;p&gt;我们常常会遇到通过隐式表达 &lt;span class=&quot;math inline&quot;&gt;\(F(x,y) = 0\)&lt;/span&gt; 这种方式来表达曲线/曲面的情形，在何种情况下存在着这样方程的唯一解 &lt;span class=&quot;math inline&quot;&gt;\(y=f(x)\)&lt;/span&gt; 或 &lt;span class=&quot;math inline&quot;&gt;\(x=g(y)\)&lt;/span&gt;？&lt;strong&gt;隐函数定理&lt;/strong&gt;可以用于解答这个问题。如果二元函数 &lt;span class=&quot;math inline&quot;&gt;\(F:D\to R, D\subset R^2\)&lt;/span&gt; 满足：&lt;br/&gt; 1) &lt;span class=&quot;math inline&quot;&gt;\(F\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 上连续可微；&lt;br/&gt; 2) &lt;span class=&quot;math inline&quot;&gt;\(F(x_0, y_0)=0\)&lt;/span&gt;；&lt;br/&gt; 3) &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial F(x_0,y_0)}{\partial y} \neq 0\)&lt;/span&gt;，&lt;br/&gt; 那么存在一个包含 &lt;span class=&quot;math inline&quot;&gt;\((x_0, y_0)\)&lt;/span&gt; 的开矩形 &lt;span class=&quot;math inline&quot;&gt;\(I\times J\subset D\)&lt;/span&gt; 使得：&lt;br/&gt; 1) 对任意 &lt;span class=&quot;math inline&quot;&gt;\(x \in I\)&lt;/span&gt;，存在唯一的 &lt;span class=&quot;math inline&quot;&gt;\(y\in J\)&lt;/span&gt;，记为 &lt;span class=&quot;math inline&quot;&gt;\(f(x)\)&lt;/span&gt; 使得 &lt;span class=&quot;math inline&quot;&gt;\(F(x,y) = 0\)&lt;/span&gt; 成立；&lt;br/&gt; 2) &lt;span class=&quot;math inline&quot;&gt;\(y_0 = f(x_0)\)&lt;/span&gt;；&lt;br/&gt; 3) &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(I\)&lt;/span&gt; 上连续可微；&lt;br/&gt; 4) &lt;span class=&quot;math inline&quot;&gt;\(f&amp;#39;(x) = \frac{\frac{\partial F}{\partial x}(x,y)}{\frac{\partial F}{\partial y}(x,y)}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;从直观上讲，这个定理讲述的是 &lt;span class=&quot;math inline&quot;&gt;\(F\)&lt;/span&gt; 在三维空间中的图形与 &lt;span class=&quot;math inline&quot;&gt;\(z\)&lt;/span&gt; 平面相交所得到的曲线，在什么养的条件下能表达成 &lt;span class=&quot;math inline&quot;&gt;\(y=f(x)\)&lt;/span&gt; 的形式。它的证明思路是利用导数和函数的连续性，构造出一个长方体使得在该体内 &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial F(x,y)}{\partial y} \neq 0\)&lt;/span&gt;，长方体横轴上每一点 &lt;span class=&quot;math inline&quot;&gt;\(x_m\)&lt;/span&gt; 在纵轴上两端点出的函数值 &lt;span class=&quot;math inline&quot;&gt;\(F(x_m,a)\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(F(x_m,b)\)&lt;/span&gt; 异号，那么由 &lt;span class=&quot;math inline&quot;&gt;\(\varphi(y) = F(x_m,y)\)&lt;/span&gt; 的单调性及连续性可知在 &lt;span class=&quot;math inline&quot;&gt;\((a,b)\)&lt;/span&gt; 中存在唯一一点使得 &lt;span class=&quot;math inline&quot;&gt;\(F(x_m, y_m)=0\)&lt;/span&gt;。所有这些点对 &lt;span class=&quot;math inline&quot;&gt;\((x_m, y_m)\)&lt;/span&gt; 即构成了我们的函数 &lt;span class=&quot;math inline&quot;&gt;\(y_m = f(x_m)\)&lt;/span&gt;。由&lt;span class=&quot;math inline&quot;&gt;\(y_m\)&lt;/span&gt;的唯一性，可知 &lt;span class=&quot;math inline&quot;&gt;\(y_0 = f(x_0)\)&lt;/span&gt;，再由于长方体可以取道任意小，知 &lt;span class=&quot;math inline&quot;&gt;\(f(x)\)&lt;/span&gt; 连续。&lt;/p&gt;
&lt;p&gt;再证明 &lt;span class=&quot;math inline&quot;&gt;\(f(x)\)&lt;/span&gt; 可导，由 &lt;span class=&quot;math inline&quot;&gt;\(F(x+h, f(x+h)) - F(x,f(x)) = 0\)&lt;/span&gt; 得 &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial F(x,f(x))}{\partial x}h + \frac{\partial F(x, f(x))}{\partial y}(f(x+h) - f(x)) + \epsilon(1)h + \epsilon(1)&amp;#39;(f(x+h) - f(x))\)&lt;/span&gt;，故： &lt;span class=&quot;math display&quot;&gt;\[\lim\limits_{h\to 0} \frac{f(x+h) - f(x)}{h} = -\frac{\frac{\partial F}{\partial x}(x,y)}{\frac{\partial F}{\partial y}(x,y)}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;根据这个方程在某一点范围内确定的函数（即 &lt;span class=&quot;math inline&quot;&gt;\((x,y)\)&lt;/span&gt; 的对应关系），称为&lt;strong&gt;隐函数&lt;/strong&gt;，我们往往只知道它的存在，却很难解析的表达出来。&lt;/p&gt;
&lt;p&gt;隐函数定理还可以推广到更多元的函数 &lt;span class=&quot;math inline&quot;&gt;\(F: D\to R, D\subset R^{n+1}\)&lt;/span&gt; 上。这时，定理的条件和结论变为如果 &lt;span class=&quot;math inline&quot;&gt;\(F\)&lt;/span&gt; 满足: &lt;br/&gt; 1) &lt;span class=&quot;math inline&quot;&gt;\(F\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 上连续可微 &lt;br/&gt; 2) &lt;span class=&quot;math inline&quot;&gt;\(F({\boldsymbol{x}}_0, y_0) = 0, {\boldsymbol{x}}_0 \in {\boldsymbol{R}}^n, y_0 \in {\boldsymbol{R}}\)&lt;/span&gt; 3) &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial F({\boldsymbol{x}}_0, y)}{\partial y} \neq 0\)&lt;/span&gt; 那么，存在 &lt;span class=&quot;math inline&quot;&gt;\(({\boldsymbol{x}}_0, y_0)\)&lt;/span&gt; 的一个邻域 &lt;span class=&quot;math inline&quot;&gt;\(G\times J\)&lt;/span&gt; 其中 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0 \in G, y_0\in J\)&lt;/span&gt; 使得：&lt;br/&gt; 1) 对于每一个 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}\in G\)&lt;/span&gt;，存在唯一的 &lt;span class=&quot;math inline&quot;&gt;\(f({\boldsymbol{x}}) \in J\)&lt;/span&gt;，使得 &lt;span class=&quot;math inline&quot;&gt;\(F({\boldsymbol{x}}, f({\boldsymbol{x}})) = 0\)&lt;/span&gt; 成立。 &lt;br/&gt; 2) y_0 = f(x_0) &lt;br/&gt; 3) &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 上连续可微 &lt;br/&gt; 4) &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial f({\boldsymbol{x}})}{\partial x_i} = \frac{\frac{\partial F({\boldsymbol{x}}, y)}{\partial x_i}}{\frac{\partial F({\boldsymbol{x}}, y)}{\partial y}}\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;隐映射定理&quot;&gt;隐映射定理&lt;/h2&gt;
&lt;p&gt;隐函数定理讲的是由一个隐方程来得到某一个变量与其他所有剩余变量的函数关系，并得到这个函数的一些性质（连续可导），而对于受到一组隐式方程组约束的变量组间的关系，我们有&lt;strong&gt;隐映射定理&lt;/strong&gt;：设 &lt;span class=&quot;math inline&quot;&gt;\(D \subset {\boldsymbol{R}}^{n+m}\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(F: D\to R^m\)&lt;/span&gt; 满足 &lt;br/&gt; 1) &lt;span class=&quot;math inline&quot;&gt;\(F\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 上连续可微 &lt;br/&gt; 2) &lt;span class=&quot;math inline&quot;&gt;\(F({\boldsymbol{x}}_0, {\boldsymbol{y}}_0) = {\boldsymbol{0}}\)&lt;/span&gt; &lt;br/&gt; 3) &lt;span class=&quot;math inline&quot;&gt;\(\mathrm{det} {\boldsymbol{J}}{\boldsymbol{F}}_{{\boldsymbol{y}}} ({\boldsymbol{x}}_0, {\boldsymbol{y}}_0) \neq 0\)&lt;/span&gt; &lt;br/&gt; 则存在 &lt;span class=&quot;math inline&quot;&gt;\(({\boldsymbol{x}}_0, {\boldsymbol{y}}_0)\)&lt;/span&gt; 的一个邻域 &lt;span class=&quot;math inline&quot;&gt;\(G \times H\)&lt;/span&gt;，使得 1) 对每一个 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}} \in G\)&lt;/span&gt;，存在唯一的 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{y}} \in H\)&lt;/span&gt;，记为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}({\boldsymbol{x}})\)&lt;/span&gt;，使得 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{F}}({\boldsymbol{x}}, {\boldsymbol{y}}) = {\boldsymbol{0}}\)&lt;/span&gt; &lt;br/&gt; 2) y_0 = f(x_0)&lt;br/&gt; 3) &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}\)&lt;/span&gt; 连续可微 &lt;br/&gt; 4) &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{J}}{\boldsymbol{f}}({\boldsymbol{x}}) = -({\boldsymbol{J}}_{{\boldsymbol{y}}}{\boldsymbol{F}}({\boldsymbol{x}}, {\boldsymbol{y}}))^{-1}{\boldsymbol{J}}_{{\boldsymbol{x}}}{\boldsymbol{F}}({\boldsymbol{x}}, {\boldsymbol{y}})\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;逆映射定理&quot;&gt;逆映射定理&lt;/h2&gt;
&lt;p&gt;利用隐映射定理，我们可以得到如下&lt;strong&gt;逆映射定理&lt;/strong&gt;：设开集 &lt;span class=&quot;math inline&quot;&gt;\(D\subset {\boldsymbol{R}}^n\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}: D\to {\boldsymbol{R}}^n\)&lt;/span&gt;，如果：&lt;br/&gt; 1) &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}\)&lt;/span&gt; 连续可微&lt;br/&gt; 2) 对每一 &lt;span class=&quot;math inline&quot;&gt;\(x\in D\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(\mathrm{det} {\boldsymbol{J}} {\boldsymbol{f}}(x) \neq 0\)&lt;/span&gt; &lt;br/&gt; 3) &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}\)&lt;/span&gt; 是单射那么 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 有逆映射 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}^{-1}\)&lt;/span&gt;，且 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{J}}{\boldsymbol{f}}^{-1} = ({\boldsymbol{J}}{\boldsymbol{f}}({\boldsymbol{x}}))^{-1}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上面的这种映射也被成为是&lt;strong&gt;正则映射&lt;/strong&gt;，如果记： &lt;span class=&quot;math display&quot;&gt;\[\frac{\partial (y_1, \dots, y_n)}{\partial (x_1, \dots, x_n)} = \mathrm{det} {\boldsymbol{J}}{\boldsymbol{f}}({\boldsymbol{x}})\]&lt;/span&gt; 那么，由逆映射定理便得： &lt;span class=&quot;math display&quot;&gt;\[\frac{\partial (y_1, \dots, y_n)}{\partial (x_1, \dots, x_n)} = \frac{1}{\frac{\partial (x_1, \dots, x_n)}{\partial (y_1, \dots, y_n)}}\]&lt;/span&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Analysis 2.7] 复合求导与拟微分平均值定理</title>
   <link href="http://mindonmind.github.io/2013/11/08/notes-analysis-chain-rule-and-mean-mean-value-theomrem"/>
   <updated>2013-11-08T00:05:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/08/notes-analysis-chain-rule-and-mean-mean-value-theomrem</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h2 id=&quot;复合求导&quot;&gt;复合求导&lt;/h2&gt;
&lt;p&gt;与一元函数类似，多元映射也存在这复合求导法则，即设 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}:D\to {\boldsymbol{R}}^m\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 上可微，再设 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{g}}: {\boldsymbol{R}}^m \to {\boldsymbol{R}}^l\)&lt;/span&gt; 且 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{g}}\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}({\boldsymbol{x}}_0)\)&lt;/span&gt; 处可微，那么 &lt;span class=&quot;math inline&quot;&gt;\(J({\boldsymbol{g}} \circ {\boldsymbol{f}})({\boldsymbol{x}}_0) = J{\boldsymbol{g}}({\boldsymbol{f}}({\boldsymbol{x}}_0))J{\boldsymbol{f}}({\boldsymbol{x}}_0)\)&lt;/span&gt; 。下面我们来证明这个定理，首先，记 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{y}}_0 = {\boldsymbol{f}}({\boldsymbol{x}}_0), {\boldsymbol{A}}_{m, n} = {\boldsymbol{J}}{\boldsymbol{f}}({\boldsymbol{x}}_0), {\boldsymbol{B}}_{l,m} = {\boldsymbol{J}}{\boldsymbol{g}}({\boldsymbol{y}}_0) = {\boldsymbol{J}}{\boldsymbol{g}}({\boldsymbol{f}}({\boldsymbol{x}}_0))\)&lt;/span&gt;，那么我们有： &lt;span class=&quot;math display&quot;&gt;\[ {\boldsymbol{f}}({\boldsymbol{x}}_0 + {\boldsymbol{h}}) - f({\boldsymbol{x}}_0) = {\boldsymbol{A}}{\boldsymbol{h}} + {\boldsymbol{r}}({\boldsymbol{h}}) \\
{\boldsymbol{g}}({\boldsymbol{y}}_0 + {\boldsymbol{k}}) - g({\boldsymbol{y}}_0 + {\boldsymbol{k}}) = {\boldsymbol{B}}{\boldsymbol{k}} + {\boldsymbol{v}}({\boldsymbol{k}})\]&lt;/span&gt; 故: &lt;span class=&quot;math display&quot;&gt;\[\begin{align*}
{\boldsymbol{g}}({\boldsymbol{f}}({\boldsymbol{x}}_0 + {\boldsymbol{h}})) - {\boldsymbol{g}}({\boldsymbol{f}}({\boldsymbol{x}}_0)) - {\boldsymbol{B}}{\boldsymbol{A}}{\boldsymbol{h}} &amp;amp;= {\boldsymbol{g}}({\boldsymbol{y}}_0 + {\boldsymbol{k}}) - {\boldsymbol{g}}({\boldsymbol{y}}_0) - {\boldsymbol{B}}{\boldsymbol{A}}{\boldsymbol{h}}\\
&amp;amp;= {\boldsymbol{B}}{\boldsymbol{k}} + {\boldsymbol{v}}({\boldsymbol{k}}) - {\boldsymbol{B}} {\boldsymbol{A}}{\boldsymbol{h}}\\
&amp;amp;= {\boldsymbol{B}}({\boldsymbol{f}}({\boldsymbol{x}}_0+{\boldsymbol{h}}) - {\boldsymbol{f}}({\boldsymbol{x}}_0)) +{\boldsymbol{v}}({\boldsymbol{k}}) - {\boldsymbol{B}} {\boldsymbol{A}}{\boldsymbol{h}}\\
&amp;amp;= {\boldsymbol{B}}({\boldsymbol{A}}{\boldsymbol{h}}+{\boldsymbol{r}}({\boldsymbol{h}})) +{\boldsymbol{v}}({\boldsymbol{k}}) - {\boldsymbol{B}}{\boldsymbol{A}}{\boldsymbol{h}}\\
&amp;amp;= {\boldsymbol{B}}{\boldsymbol{A}}{\boldsymbol{h}} + {\boldsymbol{B}}{\boldsymbol{r}}({\boldsymbol{h}}) +{\boldsymbol{v}}({\boldsymbol{k}}) - {\boldsymbol{B}}{\boldsymbol{A}}{\boldsymbol{h}}\\
\end{align*}\]&lt;/span&gt; 而： &lt;span class=&quot;math display&quot;&gt;\[\begin{align*}
{\boldsymbol{v}}({\boldsymbol{k}}) &amp;amp;= \varepsilon({\boldsymbol{k}}){\boldsymbol{k}} \\
&amp;amp;= \varepsilon({\boldsymbol{k}})({\boldsymbol{A}}{\boldsymbol{h}} + {\boldsymbol{r}}({\boldsymbol{h}})) \\
&amp;amp;= \varepsilon({\boldsymbol{k}})({\boldsymbol{A}}{\boldsymbol{h}} + \varepsilon({\boldsymbol{h}}){\boldsymbol{h}}) \\
&amp;amp;= \varepsilon({\boldsymbol{k}})({\boldsymbol{A}}+\varepsilon({\boldsymbol{h}})){\boldsymbol{h}}
\end{align*}\]&lt;/span&gt; 所以： &lt;span class=&quot;math display&quot;&gt;\[\begin{align*}
\|{\boldsymbol{g}}({\boldsymbol{f}}({\boldsymbol{x}}_0 + {\boldsymbol{h}})) - {\boldsymbol{g}}({\boldsymbol{f}}({\boldsymbol{x}}_0)) - {\boldsymbol{B}}{\boldsymbol{A}}{\boldsymbol{h}}\| &amp;amp;= {\boldsymbol{B}}{\boldsymbol{r}}({\boldsymbol{h}}) + {\boldsymbol{v}}{\boldsymbol{(}}k) \\
&amp;amp;=\|{\boldsymbol{B}}(\varepsilon({\boldsymbol{h}}) {\boldsymbol{h}}) + \varepsilon({\boldsymbol{k}})({\boldsymbol{A}}{\boldsymbol{h}}+\varepsilon({\boldsymbol{h}}){\boldsymbol{h}})\| \\
&amp;amp;\leq \|{\boldsymbol{B}}\|\varepsilon({\boldsymbol{h}})\|{\boldsymbol{h}}\| + \varepsilon({\boldsymbol{k}})(\|{\boldsymbol{A}}\|\|{\boldsymbol{h}}\| + \varepsilon({\boldsymbol{h}})\|{\boldsymbol{h}}\|)\end{align*}\]&lt;/span&gt; 即 &lt;span class=&quot;math inline&quot;&gt;\(\|{\boldsymbol{g}}({\boldsymbol{f}}({\boldsymbol{x}}_0 + {\boldsymbol{h}})) - {\boldsymbol{g}}({\boldsymbol{f}}({\boldsymbol{x}}_0)) - {\boldsymbol{B}}{\boldsymbol{A}}{\boldsymbol{h}}\|\)&lt;/span&gt; 的范数是 &lt;span class=&quot;math inline&quot;&gt;\(\|{\boldsymbol{h}}\|\)&lt;/span&gt; 的高阶无穷小，因此 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{g}}\circ{\boldsymbol{f}}\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 处可微。&lt;/p&gt;
&lt;p&gt;由这个公式，我们可以很容易地得到下面一个非常有用的结论：设 &lt;span class=&quot;math inline&quot;&gt;\(f(x_1,x_2,\dots,x_n)\)&lt;/span&gt; 连续可微，其中每个 $x_i(t) $ 是 &lt;span class=&quot;math inline&quot;&gt;\(t\)&lt;/span&gt; 的连续可导函数，那么便有： &lt;span class=&quot;math display&quot;&gt;\[\frac{\mathrm{d}f}{\rm d t} = (\frac{\partial f}{\partial x_1}, \frac{\partial f}{\partial x_2}, \dots, \frac{\partial f}{\partial x_n})
\begin{pmatrix}
\frac{\mathrm{d} x_1}{\mathrm{d} t}\\
\frac{\mathrm{d} x_2}{\mathrm{d} t} \\
\vdots\\
\frac{\mathrm{d} x_n}{\mathrm{d} t}
\end{pmatrix}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;由此，我们可以得到上一个笔记中关于方向导数与偏导数关系的公式。在三维空间中，任意一个方向可以用方向余弦 &lt;span class=&quot;math inline&quot;&gt;\((\cos \alpha, \cos \beta, \cos \gamma)\)&lt;/span&gt; 来表示，其中 $^2 + ^2 + ^2 = 1 $，那么这个方向的方向导数即为： &lt;span class=&quot;math display&quot;&gt;\[\frac{\partial f}{\partial {\boldsymbol{u}}} = \frac{\partial f}{\partial x_1}\cos \alpha + \frac{\partial f}{\partial x_2}\cos \beta + \frac{\partial f}{\partial x_3}\cos \gamma\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而通过 Cauchy-Schwarz 不等式可以证明，上式的范数当且仅当&lt;span class=&quot;math inline&quot;&gt;\((\cos \alpha \cos \beta \cos \gamma) = \lambda(\frac{\partial f}{\partial x_1}, \frac{\partial f}{\partial x_2}, \frac{\partial f}{\partial x_3})\)&lt;/span&gt; 时取到最大值，也就是说梯度指向的方向是函数方向导数范数最大，或者说，函数变化最为剧烈的方向。&lt;/p&gt;
&lt;h2 id=&quot;拟微分平均值定理&quot;&gt;拟微分平均值定理&lt;/h2&gt;
&lt;p&gt;对应一元函数的微分中值定理，多元函数一样有类似的定理，即 &lt;span class=&quot;math inline&quot;&gt;\(f:D\to {\boldsymbol{R}}^n\)&lt;/span&gt; 可微，如果 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}, {\boldsymbol{b}} \in D\)&lt;/span&gt;，那么在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 与 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{b}}\)&lt;/span&gt; 之间的线段上必存在一点 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{\xi}}\)&lt;/span&gt;，使得 &lt;span class=&quot;math inline&quot;&gt;\(f({\boldsymbol{b}}) - f({\boldsymbol{a}}) = {\boldsymbol{J}}{\boldsymbol{f}}({\boldsymbol{\xi}})({\boldsymbol{b}} - {\boldsymbol{a}})\)&lt;/span&gt;。由于涉及两点间线段，这里要求 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 必须是&lt;strong&gt;凸域&lt;/strong&gt;。证明思路是构造一元函数，并利用一元函数的微分中值定理以及复合求导法则。&lt;/p&gt;
&lt;p&gt;而对于多元映射，存在拟微分平均值定理，它主要是将函数值差的范数限定在线段上某点的 Jaccobian 范数同自变量变化差范数的乘积之内，即在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 与 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{b}}\)&lt;/span&gt; 之间的线段上存在一点 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{\xi}}\)&lt;/span&gt;，使得 &lt;span class=&quot;math inline&quot;&gt;\(\|{\boldsymbol{f}}({\boldsymbol{b}}) - {\boldsymbol{f}}({\boldsymbol{a}})\| = \|{\boldsymbol{J}}{\boldsymbol{f}}({\boldsymbol{\xi}})\|\|({\boldsymbol{b}} - {\boldsymbol{a}})\|\)&lt;/span&gt;。证明思路仍是转化为一元映射问题。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Analysis 2.6] 多元导数与微分</title>
   <link href="http://mindonmind.github.io/2013/11/05/notes-analysis-multivariate-derivative-and-differential"/>
   <updated>2013-11-05T23:50:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/05/notes-analysis-multivariate-derivative-and-differential</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/1237679/&quot;&gt;&lt;em&gt;数学分析教程 下&lt;/em&gt;&lt;/a&gt; p.107 - p.119&lt;/p&gt;
&lt;p&gt;在引入多元函数的导数时会遇到几个概念，分别为方向导数，偏导数与微分。它们之间有所区别但也相互存在着内在的联系。&lt;/p&gt;
&lt;h2 id=&quot;方向导数与偏导数&quot;&gt;方向导数与偏导数&lt;/h2&gt;
&lt;p&gt;首先多元函数的&lt;strong&gt;方向导数&lt;/strong&gt;是指，函数按着某个方向趋向与某一点时的变化率，定义为 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{t\to 0} \frac{f({\boldsymbol{x}}_0 +t {\boldsymbol{u}}) - f({\boldsymbol{x}}_0)}{t}\)&lt;/span&gt;，其中 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{u}}\)&lt;/span&gt; 是一个单位向量，它代表了函数趋向于某点的方向。称这个极限为 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 处沿方向 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{u}}\)&lt;/span&gt; 的方向导数，记为 &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial f}{\partial {\boldsymbol{u}}}({\boldsymbol{x}}_0)\)&lt;/span&gt;。这其实是一个一元导数，如果我们定义 &lt;span class=&quot;math inline&quot;&gt;\(\varphi(t) = f({\boldsymbol{x}}_0+ t{\boldsymbol{u}})\)&lt;/span&gt;，那么有 &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial f}{\partial {\boldsymbol{u}}}({\boldsymbol{x}}_0) = \varphi^{&amp;#39;}(0)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在方向导数中如果我们取单位坐标向量 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{e}}_i = (0,\dots, 1,\dots,0)\)&lt;/span&gt;，那么称 &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial f}{\partial {\boldsymbol{e}}_i}\)&lt;/span&gt; 为 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 的一个&lt;strong&gt;偏导数 (partial derivative)&lt;/strong&gt;，记为 &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial f}{\partial x_i}({\boldsymbol{x}}_0)\)&lt;/span&gt; 或 &lt;span class=&quot;math inline&quot;&gt;\(D_i f({\boldsymbol{x}}_0)\)&lt;/span&gt;。根据方向导数的公式我们可以发现，每一个方向上的偏导数其实都是将其他变量看作常量后所得到的一元函数导数。从几何上讲，每个方向上的偏导数都可以看成函数图像平面上将所有其他变量值固定后所得到的一条曲线在某点处的切线斜率。&lt;/p&gt;
&lt;p&gt;直接计算偏导数十分容易，方向导数却有困难，但我们有如下定理： &lt;span class=&quot;math display&quot;&gt;\[\frac{\partial f}{\partial {\boldsymbol{u}}}({\boldsymbol{x}}) = \frac{\mathrm{d} f({\boldsymbol{x}}+t{\boldsymbol{u}})}{\mathrm{d} t} = \frac{\partial f}{\partial x_1}({\boldsymbol{x}})u_1 + \cdots + \frac{\partial f}{\partial x_n}({\boldsymbol{x}})u_n\]&lt;/span&gt; 这其实是复合映射微分的一个应用。&lt;/p&gt;
&lt;h2 id=&quot;多元函数微分&quot;&gt;多元函数微分&lt;/h2&gt;
&lt;p&gt;下一个重要的概念是多元函数&lt;strong&gt;微分 (differential)&lt;/strong&gt;，与一元函数一样，多元函数微分仍是自变量变化量的一个线性函数。函数可微的意思便是说 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在某点 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 附近的变化量可以写成它的微分 &lt;span class=&quot;math inline&quot;&gt;\(\mathrm{d}f({\boldsymbol{x}}_0)\)&lt;/span&gt; 加上一个自变量变化量范数的一阶无穷小。即: &lt;span class=&quot;math display&quot;&gt;\[f({\boldsymbol{x}}_0+{\boldsymbol{h}}) - f({\boldsymbol{x}}_0) = {\mathrm{d}}f({\boldsymbol{x}}_0) + o(\|{\boldsymbol{h}}\|)\]&lt;/span&gt; 其中 &lt;span class=&quot;math inline&quot;&gt;\({\mathrm{d}}f({\boldsymbol{x}}_0) = \sum\limits_{i=1}^{n}\lambda_i h_i\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(\lambda_i\)&lt;/span&gt; 为与 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{h}}\)&lt;/span&gt; 无关的常数。&lt;/p&gt;
&lt;p&gt;如果函数可微，那么由偏导数的定义便可以得到 &lt;span class=&quot;math display&quot;&gt;\[\begin{align*}\frac{\partial f}{\partial x_i}({\boldsymbol{x}}_0) &amp;amp; = \lim\limits_{h_i\to 0} \frac{f(x_1, \dots, x_i+h_i, \dots, x_n) - f(x_1,\dots,x_i, \dots, x_n)}{h_i} \\
&amp;amp; = \lim\limits_{h_i\to 0} \lambda_i + o(1) \\
&amp;amp; = \lambda_i\end{align*}\]&lt;/span&gt; 因此如果函数可微，那么有 &lt;span class=&quot;math inline&quot;&gt;\(\mathrm{d}f({\boldsymbol{x}}_0) = \sum\limits_{i=1}^{n} \frac{\partial f}{\partial x_i}({\boldsymbol{x}}_0)h_i = {\boldsymbol{J}}f({\boldsymbol{x}}_0){\boldsymbol{h}}\)&lt;/span&gt;，其中 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{J}}f({\boldsymbol{x}}_0) = (\frac{\partial f}{\partial x_1}({\boldsymbol{x}}_0), \frac{\partial f}{\partial x_2}({\boldsymbol{x}}_0),\dots,\frac{\partial f}{\partial x_n}({\boldsymbol{x}}_0))\)&lt;/span&gt; 称为 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 处的&lt;strong&gt;Jacobian&lt;/strong&gt;，或称 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 处的梯度 &lt;span class=&quot;math inline&quot;&gt;\(\mathrm{grad} f\)&lt;/span&gt; 或 &lt;span class=&quot;math inline&quot;&gt;\(\bigtriangledown f\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;如果函数可微，那么它必连续，因为 &lt;span class=&quot;math inline&quot;&gt;\(\mathrm{d}f\)&lt;/span&gt; 和 &lt;span class=&quot;math inline&quot;&gt;\(o(\|{\boldsymbol{h}}\|)\)&lt;/span&gt; 都可以随着 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{h}}\)&lt;/span&gt; 的变小而任意趋向 &lt;span class=&quot;math inline&quot;&gt;\(0\)&lt;/span&gt;。此外，我们也知道函数可微说明它的各偏导数存在，相反，各偏导数的存在并不说明函数可微。但是如果各偏导数连续，那么函数必可微。具体来说，设包含 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 的任意开集为 &lt;span class=&quot;math inline&quot;&gt;\(x_0\)&lt;/span&gt; 的一个&lt;strong&gt;邻域&lt;/strong&gt;。如果 &lt;span class=&quot;math inline&quot;&gt;\(\frac{\partial f}{\partial x_i}({\boldsymbol{x}}_0)\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 的某个邻域内连续，那么 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 处可微。该定理证明的思路是固定所有其他变量而只变动一个变量，并利用一元函数的微分中值定理，计算这一变量上变化所引起的函数值变化，根据偏导数连续，可以确定这个函数值的变化和多元微分项中对应分量的变化之间误差可以任意小，故证明函数可微。&lt;/p&gt;
&lt;p&gt;综上，我们有如下关系，函数可微说明它各个偏导数存在，因而各方向导数存在，并且函数连续，但是函数各偏（方向）导存在不能说明函数可微，甚至不能说明函数连续，当函数各方向偏导连续时，函数可微。&lt;/p&gt;
&lt;p&gt;最后，记 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中的区域（连通开集），如果 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 上各偏导数连续，那么称 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; &lt;strong&gt;连续可微&lt;/strong&gt;，记 &lt;span class=&quot;math inline&quot;&gt;\(f\in C^1(D)\)&lt;/span&gt;，如果 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 上连续，记 &lt;span class=&quot;math inline&quot;&gt;\(f \in C^0(D)\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&quot;映射的微分&quot;&gt;映射的微分&lt;/h2&gt;
&lt;p&gt;映射可微的定义与函数可微类似，不过 &lt;span class=&quot;math inline&quot;&gt;\(d{\boldsymbol{f}}(x_0) = {\boldsymbol{A}}{\boldsymbol{h}}\)&lt;/span&gt;，其中 &lt;span class=&quot;math inline&quot;&gt;\(A_{m,n}\)&lt;/span&gt; 是一个与 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{h}}\)&lt;/span&gt; 无关的常数矩阵。也就是说，映射可微表示映射向量的变化量等于自变量变化量的线性映射加上一个向量余量，且该余量的范数是自变量变化量范数的高阶无穷小，即: &lt;span class=&quot;math display&quot;&gt;\[{\boldsymbol{f}}({\boldsymbol{x}}_0+{\boldsymbol{h}}) - {\boldsymbol{f}}({\boldsymbol{x}}_0) = \mathrm{d}{\boldsymbol{f}}({\boldsymbol{x}}_0) + {\boldsymbol{r}}({\boldsymbol{h}})\]&lt;/span&gt; 其中，&lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{{\boldsymbol{h}} \to {\boldsymbol{0}}} \frac{\|{\boldsymbol{r}}({\boldsymbol{h}})\|}{\|{\boldsymbol{h}}\|} = 0\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;我们可以通过简单的运算得知，映射可微当且仅当它的各分量函数可微，且有 &lt;span class=&quot;math display&quot;&gt;\[ {\boldsymbol{A}} =  \begin{pmatrix}
  \frac{\partial f_1}{\partial x_1}({\boldsymbol{x}}_0) &amp;amp; \cdots &amp;amp; \frac{\partial f_1}{\partial x_n}({\boldsymbol{x}}_0) \\
  \vdots  &amp;amp; \ddots &amp;amp; \vdots  \\
  \frac{\partial f_m}{\partial x_1}({\boldsymbol{x}}_0) &amp;amp; \cdots &amp;amp; \frac{\partial f_m}{\partial x_n}({\boldsymbol{x}}_0)
 \end{pmatrix} 
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;记 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{J}}{\boldsymbol{f}}({\boldsymbol{x}}_0) = A\)&lt;/span&gt;，称为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 处的&lt;strong&gt;Jacobian&lt;/strong&gt;。而 &lt;span class=&quot;math inline&quot;&gt;\(\mathrm(d){\boldsymbol{f}}({\boldsymbol{x}}_0) = {\boldsymbol{J}}{\boldsymbol{f}}(x_0){\boldsymbol{h}}\)&lt;/span&gt; 是改变量 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{h}}\)&lt;/span&gt; 的一个线性映射。&lt;/p&gt;
&lt;p&gt;与函数可微一样，映射可微也有一个充分条件，及 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{J}}{\boldsymbol{f}}\)&lt;/span&gt; 的各元素在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_0\)&lt;/span&gt; 处连续。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Analysis 2.5] 多元函数极限与连续性</title>
   <link href="http://mindonmind.github.io/2013/11/04/notes-analysis-multivariate-funciton-limit-continuity"/>
   <updated>2013-11-04T23:50:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/04/notes-analysis-multivariate-funciton-limit-continuity</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/1237679/&quot;&gt;&lt;em&gt;数学分析教程 下&lt;/em&gt;&lt;/a&gt; p.91 - p.106&lt;/p&gt;
&lt;h2 id=&quot;多元函数极限&quot;&gt;多元函数极限&lt;/h2&gt;
&lt;p&gt;由于我们已经在欧几里得空间中定义了两点的距离，因此可以十分容易地将函数极限的概念推广到多元函数上，不同的地方只是将对单自变量的约束改为对多自变量约束即可。在多元函数上，极限仍是刻画自变量趋向某一点时函数值能随之无限接近某个数值，它刻画的是函数在某个点附近的属性。具体的，多元函数极限的定义如下：设 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 是 &lt;span class=&quot;math inline&quot;&gt;\(f: D\to {\boldsymbol{R}}\)&lt;/span&gt; 的凝聚点，&lt;span class=&quot;math inline&quot;&gt;\(\forall \epsilon &amp;gt; 0\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(\exists \delta &amp;gt; 0\)&lt;/span&gt;，使得 &lt;span class=&quot;math inline&quot;&gt;\(\forall {\boldsymbol{x}} \in {\boldsymbol{D}}\)&lt;/span&gt;，且 &lt;span class=&quot;math inline&quot;&gt;\(0 &amp;lt; \|{\boldsymbol{x}} - {\boldsymbol{a}}\| &amp;lt; \delta\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(|f({\boldsymbol{x}}) - l| &amp;lt; \epsilon\)&lt;/span&gt;，那么称 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 有极限 &lt;span class=&quot;math inline&quot;&gt;\(l\)&lt;/span&gt; ，记为 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{{\boldsymbol{x}} \to {\boldsymbol{a}}}=l\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这个定义有两点需要注意，一个是 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 必为 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 的凝聚点，这是因为凝聚点在其周围的空心球内具有稠密性，因而保证了函数在该点附近的无穷多点上有定义。第二是函数不一定需要在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 上有定义，因为凝聚点不一定属于集合本身，此外在 &lt;span class=&quot;math inline&quot;&gt;\(0 &amp;lt; \|{\boldsymbol{x}} - {\boldsymbol{a}}\| &amp;lt; \delta\)&lt;/span&gt; 上也能看出这点。&lt;/p&gt;
&lt;p&gt;多元函数在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}} \in D&amp;#39;\)&lt;/span&gt; 极限为 &lt;span class=&quot;math inline&quot;&gt;\(l\)&lt;/span&gt; 有一个必要充分条件，即对所有趋向于 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 的点列 &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i:x_i \neq {\boldsymbol{a}}\}\)&lt;/span&gt;，有 &lt;span class=&quot;math inline&quot;&gt;\(f({\boldsymbol{x}}_i) \to l\)&lt;/span&gt;。必要性十分显然，而充分性可以通过反正法构造一个趋向于 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 的点列 &lt;span class=&quot;math inline&quot;&gt;\(\{x_i\}\)&lt;/span&gt;，但 &lt;span class=&quot;math inline&quot;&gt;\(f({\boldsymbol{x}}_i) \not\to l\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;与一元函数极限一样，多元函数的极限也具有加减乘除及复合函数极限存在且等于各函数极限的加减乘除与复合的性质。四则运算存在的证明比较简单，我们详细得看一下复合极限。复合极限讲得是一个多元函数 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在某个空心球 &lt;span class=&quot;math inline&quot;&gt;\(B_r(\check{{\boldsymbol{a}}})\)&lt;/span&gt; 中有定义且 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{{\boldsymbol{x}}\to {\boldsymbol{a}}}f({\boldsymbol{x}})=l\)&lt;/span&gt;，再有一元函数 &lt;span class=&quot;math inline&quot;&gt;\(\varphi\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(l\)&lt;/span&gt; 附近的空心球 &lt;span class=&quot;math inline&quot;&gt;\(U = \{x: 0&amp;lt;|x-l| &amp;lt; \delta\}\)&lt;/span&gt; 上有定义，且 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{x\to l} \varphi(x) = m\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(f(B-r(\check{{\boldsymbol{a}}}) \subset U\)&lt;/span&gt;。那么 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{{\boldsymbol{x}} \to {\boldsymbol{a}}} \varphi(f({\boldsymbol{x}}) = m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这段定义看似复杂，但其实说的就是如果一个多元函数在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 点有极限值，而另一个一元函数在该极限值附近又有极限值 &lt;span class=&quot;math inline&quot;&gt;\(m\)&lt;/span&gt;，那么这两个函数的复合函数在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 处也有极限值 &lt;span class=&quot;math inline&quot;&gt;\(m\)&lt;/span&gt; 。对这条性质的证明方法是在 &lt;span class=&quot;math inline&quot;&gt;\(B_r(\check{{\boldsymbol{a}}})\)&lt;/span&gt; 内任意取一个趋向于 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 的点列 &lt;span class=&quot;math inline&quot;&gt;\({{\boldsymbol{x}}_i}\)&lt;/span&gt;，那么 &lt;span class=&quot;math inline&quot;&gt;\(f({\boldsymbol{x}}_i) \in B_r(\check{{\boldsymbol{a}}}) \subset U\)&lt;/span&gt; 且 &lt;span class=&quot;math inline&quot;&gt;\(f({\boldsymbol{x}}_i) \to l\)&lt;/span&gt;。由 &lt;span class=&quot;math inline&quot;&gt;\(\varphi\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\(l\)&lt;/span&gt; 处极限存在可知，&lt;span class=&quot;math inline&quot;&gt;\(\varphi(f({\boldsymbol{x}}_i)) \to m\)&lt;/span&gt;。因此，对任意 &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\} \to {\boldsymbol{a}}\)&lt;/span&gt;，我们有&lt;span class=&quot;math inline&quot;&gt;\(\varphi(f({\boldsymbol{x}}_i)) \to m\)&lt;/span&gt;，因此 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{{\boldsymbol{x}} \to {\boldsymbol{a}}} \varphi(f({\boldsymbol{x}})) = m\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;除了任意函数值点列收敛这个充要条件，对于函数极限存在还有 Cauchy 收敛原理这个充要条件，它说的是函数极限存在，当且仅当对任意小的 &lt;span class=&quot;math inline&quot;&gt;\(\epsilon\)&lt;/span&gt;，都能找到一个 &lt;span class=&quot;math inline&quot;&gt;\(\delta &amp;gt; 0\)&lt;/span&gt;，使得任意在空心球 &lt;span class=&quot;math inline&quot;&gt;\(B_r(\check{{\boldsymbol{a}}})\)&lt;/span&gt; 内的两点 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_1, {\boldsymbol{x}}_2\)&lt;/span&gt; 都有 &lt;span class=&quot;math inline&quot;&gt;\(|f({\boldsymbol{x}}_1) - f({\boldsymbol{x}}_2)| &amp;lt; \epsilon\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;此外，除了可以定义函数在某点的极限，也可以定义函数趋向于无穷的极限 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{{\boldsymbol{x}} \to \infty}f({\boldsymbol{x}})\)&lt;/span&gt;，它说的是对于任意小的 &lt;span class=&quot;math inline&quot;&gt;\(\epsilon\)&lt;/span&gt;，都能找到某个 &lt;span class=&quot;math inline&quot;&gt;\(K&amp;gt;0\)&lt;/span&gt;，使得所有 &lt;span class=&quot;math inline&quot;&gt;\(\|{\boldsymbol{x}}\|&amp;gt;K\)&lt;/span&gt;，都有 &lt;span class=&quot;math inline&quot;&gt;\(|f({\boldsymbol{x}}) - l|&amp;lt; \epsilon\)&lt;/span&gt;。对于这类极限，上面提到的四则运算与复合性质也都成立。&lt;/p&gt;
&lt;h2 id=&quot;多元函数连续性&quot;&gt;多元函数连续性&lt;/h2&gt;
&lt;p&gt;函数连续的定义与函数极限的定义十分类似，但有几处不同，第一个是函数在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 处连续首先要求函数在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 处有定义，第二个是不要求 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 为定义域的凝聚点，最后，对于 &lt;span class=&quot;math inline&quot;&gt;\(|f({\boldsymbol{x}}) - f({\boldsymbol{a}})| &amp;lt; \epsilon\)&lt;/span&gt; 的约束是加在以 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 为球心的某个闭球上的，而不是函数极限中的开球。&lt;/p&gt;
&lt;p&gt;与一元函数连续一样，多元函数连续强调的其实仍是随着自变量接近某点，函数也可以无限接近这点的函数值。根据定义，多元函数在其定义域中的每个孤立点处均连续，而对于其定义域中的凝聚点 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}} \in D\cap D&amp;#39;\)&lt;/span&gt;，函数连续当且仅当 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{{\boldsymbol{x}} \to {\boldsymbol{a}}} f({\boldsymbol{x}}) = f({\boldsymbol{a}})\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;函数连续性也具有加减乘除，复合函数仍连续的性质。此外，与一元函数相同，多元函数也有一致连续的概念。如果我们把函数的定义域限制在紧致集（列紧集/有界闭集）上，我们有：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;有界闭集/紧致集上的连续函数一致连续。&lt;/li&gt;
&lt;li&gt;有界闭集/紧致集上的连续函数的值域仍为有界闭集/紧致集。&lt;/li&gt;
&lt;li&gt;有界闭集/紧致集上的连续函数能在该紧致集上取到最大值与最小值。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而如果我们限制函数的定义域为连通集，那么有：&lt;/p&gt;
&lt;ol start=&quot;4&quot; type=&quot;1&quot;&gt;
&lt;li&gt;连通集上的连续函数的值域仍为连通集。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有了上面这个定理，就能很容易地证明多元函数的&lt;strong&gt;介值定理&lt;/strong&gt;：如果 &lt;span class=&quot;math inline&quot;&gt;\(f\)&lt;/span&gt; 在连通集 &lt;span class=&quot;math inline&quot;&gt;\(D \subset {\boldsymbol{R}}^n\)&lt;/span&gt; 上连续，且 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}, {\boldsymbol{b}} \in D\)&lt;/span&gt;，那么如果 &lt;span class=&quot;math inline&quot;&gt;\(f({\boldsymbol{a}}) &amp;lt; r &amp;lt; f({\boldsymbol{b}})\)&lt;/span&gt;，那么存在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{c}}\in D\)&lt;/span&gt; 使得 &lt;span class=&quot;math inline&quot;&gt;\(f({\boldsymbol{c}}) =r\)&lt;/span&gt;。因为 &lt;span class=&quot;math inline&quot;&gt;\(f(D)\)&lt;/span&gt; 连通，所以它必定为区间，故 &lt;span class=&quot;math inline&quot;&gt;\(r \in f(D)\)&lt;/span&gt;，即存在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{c}}\)&lt;/span&gt; 使得 &lt;span class=&quot;math inline&quot;&gt;\(f({\boldsymbol{c}}) = r\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2 id=&quot;映射的连续性&quot;&gt;映射的连续性&lt;/h2&gt;
&lt;p&gt;前面的函数都是考察一个多维向量空间中的点与实数值的对应关系，我们也可以考察不同维欧式空间中点的关系，为了与函数相区别，称这种关系为映射 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}: {\boldsymbol{R}}^n \to {\boldsymbol{R}}^m\)&lt;/span&gt; ，它的每个分量都是一个多元函数 &lt;span class=&quot;math inline&quot;&gt;\(f: {\boldsymbol{R}}^n \to {\boldsymbol{R}}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;映射的极限、连续、一致连续概念与函数的完全类似，只需要将计算函数值距离的地方由绝对值换成对应的向量范数即可。&lt;/p&gt;
&lt;p&gt;与点列极限类似，映射在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 处极限为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{p}}\)&lt;/span&gt;，当且仅当映射的每一个分量函数 &lt;span class=&quot;math inline&quot;&gt;\(f_i\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 极限为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{p}}_i\)&lt;/span&gt;，而映射在某点连续，也当且仅当它的各个分量在该点处连续。&lt;/p&gt;
&lt;p&gt;关于映射连续性，有一个重要的定理：设开集 &lt;span class=&quot;math inline&quot;&gt;\(D\subset {\boldsymbol{R}}^n\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}:D\to {\boldsymbol{R}}^m\)&lt;/span&gt; 连续的充要条件是，对于任意 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^m\)&lt;/span&gt; 中的开集 &lt;span class=&quot;math inline&quot;&gt;\(G\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}^{-1}(G)\)&lt;/span&gt; 也是开集。也就是说，开集上的连续映射值空间内的任意开集的原像集也是开集。对于必要性，只需考虑 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}^{-1}(G)\)&lt;/span&gt; 是非空集的情形。如果 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}({\boldsymbol{a}}) \in G\)&lt;/span&gt; 那么必然可以找到一个以 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}({\boldsymbol{a}})\)&lt;/span&gt; 为球心的球仍属于 &lt;span class=&quot;math inline&quot;&gt;\(G\)&lt;/span&gt;。那么由于 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}\)&lt;/span&gt; 连续，所以可以在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 附近找到一个球，使得这个球上的所有函数值在 &lt;span class=&quot;math inline&quot;&gt;\(G\)&lt;/span&gt; 中，故 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}^{-1}\)&lt;/span&gt; 为开集。相反，取 &lt;span class=&quot;math inline&quot;&gt;\(D\)&lt;/span&gt; 中的任意一点 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt;，构造 &lt;span class=&quot;math inline&quot;&gt;\(B_\epsilon({\boldsymbol{a}})\)&lt;/span&gt;，它是开集，&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}^{-1}(B_\epsilon({\boldsymbol{a}}))\)&lt;/span&gt; 也是开集，易证 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{f}}\)&lt;/span&gt; 在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 处连续。&lt;/p&gt;
&lt;p&gt;此外连续映射在有界闭集或连通集上也有一些特殊的性质：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;有界闭集上的映射一致连续。&lt;/li&gt;
&lt;li&gt;有界闭集上的映射的值域仍然是有界闭集。&lt;/li&gt;
&lt;li&gt;连通集上的映射的值域仍然是连通集。&lt;/li&gt;
&lt;/ol&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Analysis 2.4] 实数连续性定理及其在欧式空间中的推广</title>
   <link href="http://mindonmind.github.io/2013/11/03/notes-analysis-theorems-of-continuity"/>
   <updated>2013-11-03T23:32:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/03/notes-analysis-theorems-of-continuity</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;关于实数 &lt;span class=&quot;math inline&quot;&gt;\(R\)&lt;/span&gt;，我们有六个与连续相关的定理，分别为：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;单调有界数列必有极限。&lt;/li&gt;
&lt;li&gt;闭区间套定理：闭区间套中有且只有唯一一点。&lt;/li&gt;
&lt;li&gt;Bolzano-Weierstrass （列紧性）定理：任何有界数列中必能选出一收敛子列。&lt;/li&gt;
&lt;li&gt;Cauchy 收敛原理：一个数列收敛的充分必要条件是它是基本列。&lt;/li&gt;
&lt;li&gt;确界原理：非空有上界的集合必有上确界，非空有下界集合必有下确界。&lt;/li&gt;
&lt;li&gt;Heine-Borel （有限覆盖）定理：从有界闭区间的开覆盖中能找出有限个开区间仍构成该闭区间的开覆盖。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上述六个定理中从任意一个出发，都可以证明其他所有定理。它们一起构成了整个微积分的基础，在一元微积分中，所有涉及到连续性的证明，追根溯源都要回到这几个定理当中。&lt;/p&gt;
&lt;p&gt;但到了 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt;，情况有所不同。首先由于无法在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 上定义点与点之间的大小次序，故不存在单调、上下确界的概念，因此定理1和5不再成立。对于剩下的几个定理，我们则都可以在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中找到它们的对应如下：&lt;/p&gt;
&lt;ol start=&quot;2&quot; type=&quot;1&quot;&gt;
&lt;li&gt;闭集套定理：闭集套中有且只有唯一一点。&lt;/li&gt;
&lt;li&gt;Bolzano-Weierstrass 定理：任何有界点列中必能选出一收敛子列。&lt;/li&gt;
&lt;li&gt;Cauchy 收敛原理：&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中收敛点列的充分必要条件是它为基本点列。&lt;/li&gt;
&lt;li&gt;紧致集的充分必要条件是它为有界闭集（有界闭区间）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面我们来看看这些定理在 &lt;span class=&quot;math inline&quot;&gt;\(R\)&lt;/span&gt; 和 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 上的证明思路，来具体考察它们的异同。首先是 Cauchy 收敛原理，一个收敛数列/点列显然满足基本列的条件，但相反一个基本列必定收敛却不是那么显然，其实这是集合的另一个拓扑性质，被称为&lt;strong&gt;完备性 (Completness)&lt;/strong&gt;。由于在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中，点列收敛等价于点列按分量收敛，而基本点列的每一分量都是基本数列，因此利用 &lt;span class=&quot;math inline&quot;&gt;\(R\)&lt;/span&gt; 上的 Cauchy 原理，我们可以证明 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 上的该原理。&lt;/p&gt;
&lt;p&gt;与之类似的是 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 上 Bolzano-Weierastrass 定理的证明，同样由于有界点列的每一分量均是有界数列，故 &lt;span class=&quot;math inline&quot;&gt;\(R\)&lt;/span&gt; 中的 Bolzano-Weierstrass 再次为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 上的拓展提供了方便。&lt;/p&gt;
&lt;p&gt;然后是闭区间套和闭集套定理，这两个定理的证明思路都是希望找到一个收敛的数/点列，它的极限属于所有闭区间/集套。在 &lt;span class=&quot;math inline&quot;&gt;\(R\)&lt;/span&gt; 上，我们可以利用定理1轻易地找到这样的数列，而在&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中，我们则可以利用 Cauchy 收敛原理加上闭集的性质进行证明。&lt;/p&gt;
&lt;p&gt;最后是有限覆盖原理，在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中，有界覆盖成了紧致集的定义，而紧致集与有界闭集等价又说明有界闭集也具有有限覆盖的性质。而有界闭区间/集所具有的紧致性则都是通过反证法构造一个闭区间/集套来证明。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Analysis 2.3] 基础拓扑：列紧、紧致与连通性</title>
   <link href="http://mindonmind.github.io/2013/11/02/notes-analysis-basic-topology-compact"/>
   <updated>2013-11-02T23:01:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/02/notes-analysis-basic-topology-compact</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/1237679/&quot;&gt;&lt;em&gt;数学分析教程 下&lt;/em&gt;&lt;/a&gt; p.84 - p.90&lt;/p&gt;
&lt;p&gt;这部分主要介绍了欧式空间中的另一些拓扑属性及其相互之间的关系。&lt;/p&gt;
&lt;p&gt;首先是&lt;strong&gt;列紧 (sequentially compactness)&lt;/strong&gt;和&lt;strong&gt;紧致 (compactness)&lt;/strong&gt;的概念。如果 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 子集 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中的任一点列都有一子列收敛于 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中的某点，那么称 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 是列紧的。而如果从 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的任意一个开覆盖中能选取出有限个开集，它们仍能构成 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的开覆盖，就称 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 为紧致的。&lt;/p&gt;
&lt;p&gt;关于列紧和紧致，有一个重要的定理，即它们的&lt;strong&gt;充分必要条件均是 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 为有界闭集&lt;/strong&gt;。首先来考察列紧。我们知道闭集有一个重要的判断方法，即它的导集属于自身（或者说它的凝聚点属于自己，它的任意收敛点列收敛至自己的一点）。这样，列紧集显然是闭集，再有它的每个点列中均有收敛子列知道它必须是有界的。相反，由 Bolzano-Weierstrass 定理可知，有界闭集中的任一点列均可找出一收敛子列，所以有界闭集也是列紧的。&lt;/p&gt;
&lt;p&gt;再看紧致性，对于一个紧致集 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; ，构造一系列以 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{0}}\)&lt;/span&gt; 为球心，半径为 &lt;span class=&quot;math inline&quot;&gt;\(1,2,3,\dots\)&lt;/span&gt; 的球它们是 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的开覆盖，从这当中必能选取出有限个球覆盖 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt;。那么这些球中半径最大的那个能包含 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt;，故 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 有界。再考察 &lt;span class=&quot;math inline&quot;&gt;\(E^c\)&lt;/span&gt;，从中选取一点 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{q}}\)&lt;/span&gt;，再以 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中每一点为球心构造半径为 &lt;span class=&quot;math inline&quot;&gt;\(r_1, r_2, \dots, r_q\)&lt;/span&gt; 的球 &lt;span class=&quot;math inline&quot;&gt;\(\{B_i\}\)&lt;/span&gt; ，使每个球都与 &lt;span class=&quot;math inline&quot;&gt;\(B_{r_i}({\boldsymbol{q}})\)&lt;/span&gt; 不相交。&lt;span class=&quot;math inline&quot;&gt;\(\{B_i\}\)&lt;/span&gt; 是开覆盖，从中选取出有限个球覆盖 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt;，并求得最小的半径 &lt;span class=&quot;math inline&quot;&gt;\(r_m\)&lt;/span&gt;，那么 &lt;span class=&quot;math inline&quot;&gt;\(B_{r_m}({\boldsymbol{a}})\)&lt;/span&gt; 不与这些球中的任意一个相交，也因此不与 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 相交，故 &lt;span class=&quot;math inline&quot;&gt;\(B_{r_m}({\boldsymbol{a}}) \subset E^c\)&lt;/span&gt;，即 &lt;span class=&quot;math inline&quot;&gt;\(E^c\)&lt;/span&gt; 是开集。相反，如果 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 是有界闭集可以构造一列直径递减的长方体列 &lt;span class=&quot;math inline&quot;&gt;\(\{K_i\}\)&lt;/span&gt;，使得 &lt;span class=&quot;math inline&quot;&gt;\({\rm diam} K_i = \frac{1}{2} {\rm diam} K_{i-1}\)&lt;/span&gt;，且其中的每一个均无法被某个开覆盖中的有限个覆盖，由闭集套定理，知 &lt;span class=&quot;math inline&quot;&gt;\(\cap B_i\)&lt;/span&gt; 中存在唯一一点，该点必存在于上述开覆盖中的某一个开集，因此该点的某近邻 &lt;span class=&quot;math inline&quot;&gt;\(\xi\)&lt;/span&gt; 也属于该开集，有必定存在某一个 &lt;span class=&quot;math inline&quot;&gt;\(m\)&lt;/span&gt; 使得 &lt;span class=&quot;math inline&quot;&gt;\(K_m \subset \xi\)&lt;/span&gt;，从而 &lt;span class=&quot;math inline&quot;&gt;\(K_m\)&lt;/span&gt; 属于该开集，导致矛盾。&lt;/p&gt;
&lt;p&gt;因此，列紧集、紧致集与有界闭集是相互等价的三个概念。而在证明过程中，Bolzano-Weierstrass 和闭集套定理起到了重要作用。&lt;/p&gt;
&lt;p&gt;下面再看另一个重要的拓扑性质——&lt;strong&gt;连通性 (connectedness)&lt;/strong&gt;。所谓连通，即指将 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 分成两个不相交的非空子集时，至少有一个含有另一个的凝聚点。而我们知道，凝聚点反应了一种稠密性，即在它的周围总有无限多个收敛到它的点。如果一个集合含有另一个的凝聚点，也就是说这两个集合见不存在一段「空隙」，其中不含任一集合的点。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中连通的开集称为&lt;strong&gt;区域&lt;/strong&gt;，而连通的闭集称为&lt;strong&gt;闭区域&lt;/strong&gt;。而在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}\)&lt;/span&gt; 上，我们有：一个集合连通当且仅当它是一个区间(p88 定理 13.16)。所以，区域和区间是相对的概念，它们都是指连通集。&lt;/p&gt;
&lt;p&gt;最后，关于连通集有一个判定定理，即道路连通集必是连通集。这里的道路连通是指，在集合中任意两点 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{p}}\)&lt;/span&gt; 和 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{q}}\)&lt;/span&gt; 之间都存在一条连续的曲线将它们相连。该定理的证明主要是利用连续曲线的参数表达形式，将 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中的连通性转化为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中区间的连通性来证明。&lt;/p&gt;
&lt;p&gt;由上面这条定理可知，任意凸集均是连通集。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Analysis 2.2] 基础拓扑：点列极限与开集闭集</title>
   <link href="http://mindonmind.github.io/2013/11/01/notes-analysis-basic-topology-open-closed"/>
   <updated>2013-11-01T23:31:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/11/01/notes-analysis-basic-topology-open-closed</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/1237679/&quot;&gt;&lt;em&gt;数学分析教程 下&lt;/em&gt;&lt;/a&gt; p.74 - p.83&lt;/p&gt;
&lt;p&gt;如果 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_i \in {\boldsymbol{R}}^n, i=1,2,3,\dots\)&lt;/span&gt; ，称 &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\}\)&lt;/span&gt; 为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中的&lt;strong&gt;点列&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义 2.2.1&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\}\)&lt;/span&gt; 是点列，&lt;span class=&quot;math inline&quot;&gt;\(a\in {\boldsymbol{R}}^n\)&lt;/span&gt; ，如果对 &lt;span class=&quot;math inline&quot;&gt;\(\forall \epsilon &amp;gt; 0, \exists N \in {\boldsymbol{N}}_+\)&lt;/span&gt;, 使得 &lt;span class=&quot;math inline&quot;&gt;\(\forall i &amp;gt; N, \|{\boldsymbol{x}}_i - {\boldsymbol{a}}\| &amp;lt; \epsilon\)&lt;/span&gt;, 那么称 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 为 &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\}\)&lt;/span&gt; 的&lt;strong&gt;极限&lt;/strong&gt;。记作: &lt;span class=&quot;math display&quot;&gt;\[\lim_{i \to \infty} {\boldsymbol{x}}_i = {\boldsymbol{a}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.1&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{i \to \infty}{\boldsymbol{x}}_i = {\boldsymbol{a}}, \lim\limits_{i \to \infty}{\boldsymbol{y}}_i = {\boldsymbol{b}}\)&lt;/span&gt; ，那么: &lt;span class=&quot;math display&quot;&gt;\[\lim_{i\to\infty}{\boldsymbol{x}}_i \pm {\boldsymbol{y}}_i = {\boldsymbol{a}}\pm{\boldsymbol{b}}\\
\forall \lambda \in {\boldsymbol{R}}, \lim_{i\to\infty}\lambda {\boldsymbol{x}}_i = \lambda {\boldsymbol{a}}\\\]&lt;/span&gt; &lt;br/&gt; &lt;em&gt;证明&lt;/em&gt; 利用距离的性质。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义 2.2.2&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}_i = (x_1^{i}, x_2^{i}, \dots, x_n^{i})\)&lt;/span&gt; ，如果 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{i\to\infty}x_k^{i} = a_k\)&lt;/span&gt; 对 &lt;span class=&quot;math inline&quot;&gt;\(k=1,2,\dots,n\)&lt;/span&gt; 成立，称 &lt;span class=&quot;math inline&quot;&gt;\({{\boldsymbol{x}}_i}\)&lt;/span&gt; &lt;strong&gt;按分量收敛&lt;/strong&gt; 至 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}=(a_1,a_2,\dots,a_n)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.2&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{i\to\infty}{\boldsymbol{x}}_i = {\boldsymbol{a}}\)&lt;/span&gt; 当且仅当 &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\}\)&lt;/span&gt; 按分量收敛至 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 。&lt;br/&gt; &lt;em&gt;证明&lt;/em&gt; 利用 &lt;span class=&quot;math inline&quot;&gt;\(|x_k| \leq \|{\boldsymbol{x}}\| \leq |x_1|+|x_2|+\dots+|x_n|\)&lt;/span&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义 2.2.3&lt;/strong&gt; 如果对 &lt;span class=&quot;math inline&quot;&gt;\(\forall \epsilon &amp;gt; 0, \exists N \in {\boldsymbol{N}}_+\)&lt;/span&gt;，使得 &lt;span class=&quot;math inline&quot;&gt;\(\forall i,j &amp;gt; N, \|{\boldsymbol{x}}_i - {\boldsymbol{x}}_j\|&amp;lt;\epsilon\)&lt;/span&gt; ，称 &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\}\)&lt;/span&gt; 为&lt;strong&gt;基本列&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.3&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\}\)&lt;/span&gt; 收敛的充分必要条件是 &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\}\)&lt;/span&gt; 为基本列。&lt;br/&gt; &lt;em&gt;证明&lt;/em&gt; 必要性：距离性质。充分性：每个分量都是基本数列，从而每个分量收敛，因此 &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\}\)&lt;/span&gt; 收敛。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.4 (Bolzano-Weierstrass)&lt;/strong&gt; 从任一有界点列中可以选取出收敛的子列。&lt;br/&gt; &lt;em&gt;证明&lt;/em&gt; 分量数列有界，从第一个分量中取出一个收敛子列，接着从该收敛子列所对应的点列中抽取第二个分量上的收敛子列，以此直至最后一个分量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义 2.2.4&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(E \subset {\boldsymbol{R}}^n\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(a \in E\)&lt;/span&gt;，如果存在 &lt;span class=&quot;math inline&quot;&gt;\(r &amp;gt; 0\)&lt;/span&gt; 使 &lt;span class=&quot;math inline&quot;&gt;\(B_r(a) \subset E\)&lt;/span&gt; ，称 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;内点&lt;/strong&gt;。&lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的全体内点集合记为 &lt;span class=&quot;math inline&quot;&gt;\(E^\circ\)&lt;/span&gt;，称为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;内部&lt;/strong&gt; 。如果 &lt;span class=&quot;math inline&quot;&gt;\(E = E^\circ\)&lt;/span&gt; ，称 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 为&lt;strong&gt;开集&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;空集与 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 均是开集，此外如果 &lt;span class=&quot;math inline&quot;&gt;\(r&amp;gt;0\)&lt;/span&gt; 那么 &lt;span class=&quot;math inline&quot;&gt;\(B_r({\boldsymbol{a}})\)&lt;/span&gt; 也是开集。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.5&lt;/strong&gt; 任意集合 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的内部 &lt;span class=&quot;math inline&quot;&gt;\(E^\circ\)&lt;/span&gt; 是开集。&lt;br/&gt; &lt;em&gt;证明&lt;/em&gt; 只讨论 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 是非空集的情形，&lt;span class=&quot;math inline&quot;&gt;\(E^\circ\)&lt;/span&gt; 中任一点 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 有 &lt;span class=&quot;math inline&quot;&gt;\(B_r({\boldsymbol{a}}) \subset E\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(r&amp;gt;0\)&lt;/span&gt;。&lt;span class=&quot;math inline&quot;&gt;\(B_r({\boldsymbol{a}})\)&lt;/span&gt; 中任一点是 &lt;span class=&quot;math inline&quot;&gt;\(B_r({\boldsymbol{a}})\)&lt;/span&gt; 的内点，所以也是 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的内点，故 &lt;span class=&quot;math inline&quot;&gt;\(B_r({\boldsymbol{a}}) \subset E^\circ\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.6&lt;/strong&gt; 在空间 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 内，有&lt;br /&gt;
1). &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(\varnothing\)&lt;/span&gt; 均是开集。&lt;br /&gt;
2). &lt;span class=&quot;math inline&quot;&gt;\(\{E_a\}\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(a \in I\)&lt;/span&gt; 是一个开集族，&lt;span class=&quot;math inline&quot;&gt;\(\bigcup\limits_{a\in I} E\)&lt;/span&gt; 也是开集。&lt;br /&gt;
3). &lt;span class=&quot;math inline&quot;&gt;\(E_1\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(E_2\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(\dots\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(E_n\)&lt;/span&gt; 是有限个开集，则 &lt;span class=&quot;math inline&quot;&gt;\(\bigcap\limits_{i=1}^m E_i\)&lt;/span&gt; 也是开集。&lt;/p&gt;
&lt;p&gt;上述定理是说，任意个开集的并是开集，有限个开集的交是开集，而由于无限个开集的交有可能只是一点，故可以不是开集。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义 2.2.5&lt;/strong&gt; 称 &lt;span class=&quot;math inline&quot;&gt;\(E^c={\boldsymbol{R}}^n \setminus E\)&lt;/span&gt; 为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;补集&lt;/strong&gt;。如果 &lt;span class=&quot;math inline&quot;&gt;\(E^c\)&lt;/span&gt; 是开集，称 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 为&lt;strong&gt;闭集&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;注意，存在即是开集也是闭集的集合，也存在既不是开集也不是闭集的集合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.7 (de Morgan)&lt;/strong&gt; &lt;span class=&quot;math display&quot;&gt;\[(\bigcup \limits_{a} E_a)^c = \bigcap \limits_{a} E_a^c \\
(\bigcap \limits_{a} E_a)^c = \bigcup \limits_{a} E_a^c\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.8&lt;/strong&gt; 在空间 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中，有&lt;br /&gt;
1). &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(\varnothing\)&lt;/span&gt; 是闭集。&lt;br /&gt;
2). &lt;span class=&quot;math inline&quot;&gt;\(\{E_a\}\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(a \in I\)&lt;/span&gt; 是一个闭集族，&lt;span class=&quot;math inline&quot;&gt;\(\bigcap \limits_{a \in I}E_a\)&lt;/span&gt; 是闭集。&lt;br /&gt;
3). &lt;span class=&quot;math inline&quot;&gt;\(E_1\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(E_2\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(\dots\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(E_n\)&lt;/span&gt; 是开集，则 &lt;span class=&quot;math inline&quot;&gt;\(\bigcup \limits_{i} E_i\)&lt;/span&gt; 是闭集。&lt;/p&gt;
&lt;p&gt;记 &lt;span class=&quot;math inline&quot;&gt;\(B_r(\check{{\boldsymbol{a}}})= \{{\boldsymbol{x}} \in {\boldsymbol{R}}^n: 0&amp;lt;\|{\boldsymbol{x}}-{\boldsymbol{a}}\|&amp;lt;r\}\)&lt;/span&gt;，称为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中的空心球。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义 2.2.6&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}} \in {\boldsymbol{R}}^n\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(E \subset {\boldsymbol{R}}^n\)&lt;/span&gt;，如果对任意 &lt;span class=&quot;math inline&quot;&gt;\(r&amp;gt;0\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(B_r(\check{{\boldsymbol{a}}})\)&lt;/span&gt; 中均有 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中的点，则称 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;凝聚点&lt;/strong&gt;。&lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中除凝聚点之外的点称为&lt;strong&gt;孤立点&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.9&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 是 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的凝聚点，有下面两种充分必要条件：&lt;br /&gt;
1) 以 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 为球心的任意球中都包含 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中的无限多个点。&lt;br /&gt;
2) &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中可以找出一个互不相同的收敛点列 &lt;span class=&quot;math inline&quot;&gt;\(\{{\boldsymbol{x}}_i\}\)&lt;/span&gt; 收敛于 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义 2.2.7&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的全体凝聚点称为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;导集&lt;/strong&gt;，记作 &lt;span class=&quot;math inline&quot;&gt;\(E&amp;#39;\)&lt;/span&gt; 。&lt;span class=&quot;math inline&quot;&gt;\(\overline E = E\cup E&amp;#39;\)&lt;/span&gt; 称为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;闭包&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.10&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 是闭集的充分必要条件是 &lt;span class=&quot;math inline&quot;&gt;\(E&amp;#39; \subset E\)&lt;/span&gt;。&lt;br/&gt; &lt;em&gt;证明&lt;/em&gt; 必要性：&lt;span class=&quot;math inline&quot;&gt;\(E^c\)&lt;/span&gt; 是开集，故 &lt;span class=&quot;math inline&quot;&gt;\(E^c\)&lt;/span&gt; 中的点均不可能是 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的凝聚点。充分性：由&lt;span class=&quot;math inline&quot;&gt;\(E^c\)&lt;/span&gt; 的点均不是凝聚点，&lt;span class=&quot;math inline&quot;&gt;\(E^c\)&lt;/span&gt; 是开集。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推论&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 是闭集的充分必要条件是 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中任何收敛点列的极限均在 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中。&lt;br/&gt; &lt;em&gt;证明&lt;/em&gt; 定理2.2.9 定理2.2.10。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.11&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(E&amp;#39;\)&lt;/span&gt; 和 &lt;span class=&quot;math inline&quot;&gt;\(\overline E\)&lt;/span&gt; 均是闭集。&lt;br/&gt; &lt;em&gt;证明&lt;/em&gt; 1). &lt;span class=&quot;math inline&quot;&gt;\((E&amp;#39;)^c\)&lt;/span&gt; 是开集。2). 考察 &lt;span class=&quot;math inline&quot;&gt;\(E\cup E&amp;#39;\)&lt;/span&gt; 中的收敛点列，如果点列中有有限个点，那么其极限 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 必 &lt;span class=&quot;math inline&quot;&gt;\(\in \overline E\)&lt;/span&gt;。否则，如果点列中有一个子列由 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 中的点构成，则 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}} \in E&amp;#39; \subset \overline E\)&lt;/span&gt;；如果点列中有一个子列由 &lt;span class=&quot;math inline&quot;&gt;\(E&amp;#39;\)&lt;/span&gt; 中点构成，由 &lt;span class=&quot;math inline&quot;&gt;\(E&amp;#39;\)&lt;/span&gt; 是闭集知 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}} \in E&amp;#39;\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.12&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\(E^\circ\)&lt;/span&gt; 是含于 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 内的最大开集，&lt;span class=&quot;math inline&quot;&gt;\(\overline E\)&lt;/span&gt; 是包含着 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的最小闭集。&lt;br/&gt; &lt;em&gt;证明&lt;/em&gt; 开集略，闭集只需证明 &lt;span class=&quot;math inline&quot;&gt;\(E&amp;#39;\subset F\)&lt;/span&gt;，&lt;span class=&quot;math inline&quot;&gt;\(F\)&lt;/span&gt; 是包含 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的任意闭集，利用定理2.2.10的推论可证。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义 2.2.8&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\((E^c)^\circ\)&lt;/span&gt; 称为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;外部&lt;/strong&gt;，其中的点称为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;外点&lt;/strong&gt;。既非 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 外点也非 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 内点的点称为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;边界点&lt;/strong&gt;，全体边界点称为 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 的&lt;strong&gt;边界&lt;/strong&gt;，记为 &lt;span class=&quot;math inline&quot;&gt;\(\partial E\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.2.13 (闭集套定理)&lt;/strong&gt; &lt;span class=&quot;math inline&quot;&gt;\({F_i}\)&lt;/span&gt; 是闭集列，&lt;span class=&quot;math inline&quot;&gt;\(F_i \neq \varnothing\)&lt;/span&gt;，且 &lt;span class=&quot;math inline&quot;&gt;\(F_1 \subset F_2 \subset F_3 \subset \cdots\)&lt;/span&gt;，此外还有 &lt;span class=&quot;math inline&quot;&gt;\(\lim\limits_{i\to\infty}\rm{diam}(F_i) = 0\)&lt;/span&gt;，那么 &lt;span class=&quot;math inline&quot;&gt;\(\bigcap \limits_{i=1}^\infty F_i\)&lt;/span&gt; 只含唯一的点。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>[Notes: Analysis 2.1] 欧几里得空间</title>
   <link href="http://mindonmind.github.io/2013/10/31/notes-analysis-euclid-space"/>
   <updated>2013-10-31T02:03:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/10/31/notes-analysis-euclid-space</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/1237679/&quot;&gt;&lt;em&gt;数学分析教程 下&lt;/em&gt;&lt;/a&gt; p.69 - p74.&lt;/p&gt;
&lt;p&gt;首先，定义在多元分析中最基本的集合： &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n = \{(x_1, x_2,\dots, x_n): x_i \in {\boldsymbol{R}}, i=1,2,\dots,n\}\)&lt;/span&gt; 。 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中的元素 $ = (x_1, x_2, , x_i) $ 称为一个向量，或一个点，其中&lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{0}} = (0, 0, \dots, 0)\)&lt;/span&gt; 称为零向量。可以定义向量的加法与数乘两种运算： &lt;span class=&quot;math display&quot;&gt;\[x + y = (x_1+y_1, x_2+y_2, \dots, x_n+y_n) \\ \lambda \mathbf(x) = (\lambda x_1, \lambda x_2, \dots, \lambda x_n)\]&lt;/span&gt; 定义 &lt;span class=&quot;math inline&quot;&gt;\(- {\boldsymbol{x}} = (-x_1, -x_2, \dots, -x_n)\)&lt;/span&gt;，那么对于任意 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}, {\boldsymbol{y}}, {\boldsymbol{z}}\)&lt;/span&gt; 都有 &lt;span class=&quot;math display&quot;&gt;\[{\boldsymbol{0}} + {\boldsymbol{x}} = {\boldsymbol{x}} + {\boldsymbol{0}} \\ 
- {\boldsymbol{x}} + {\boldsymbol{x}} = {\boldsymbol{0}} \\
{\boldsymbol{x}}+{\boldsymbol{y}} = {\boldsymbol{y}}+{\boldsymbol{x}} \\
{\boldsymbol{x}} + ({\boldsymbol{y}} + {\boldsymbol{z}}) = ({\boldsymbol{x}}+{\boldsymbol{y}}) + {\boldsymbol{z}} \\
\lambda ({\boldsymbol{x}} + {\boldsymbol{y}} ) = \lambda {\boldsymbol{x}} + \lambda {\boldsymbol{y}} \\ 
( \lambda + \mu) {\boldsymbol{x}} = \lambda {\boldsymbol{x}} + \mu {\boldsymbol{y}} \\
\lambda(\mu {\boldsymbol{x}} )=( \lambda\mu) {\boldsymbol{x}} \\
1 \cdot {\boldsymbol{x}} = {\boldsymbol{x}} 
\]&lt;/span&gt; 由此可见，定义了这些运算的 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 是数域 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}\)&lt;/span&gt; 上的线性空间，也称 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{n}}\)&lt;/span&gt; 维向量空间。&lt;/p&gt;
&lt;p&gt;在 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 中引入&lt;strong&gt;内积&lt;/strong&gt;运算 &lt;span class=&quot;math inline&quot;&gt;\(\langle{\boldsymbol{x}} , {\boldsymbol{y}}\rangle = \sum x_iy_i\)&lt;/span&gt;， 该运算满足： &lt;span class=&quot;math display&quot;&gt;\[\begin{aligned}
&amp;amp; \langle{\boldsymbol{x}}, {\boldsymbol{x}} \rangle \geq 0 &amp;amp; \text{(正定性)}\\
&amp;amp; \langle{\boldsymbol{x}} , {\boldsymbol{y}} \rangle = \langle{\boldsymbol{y}} , {\boldsymbol{x}} \rangle &amp;amp; \text{(对称性)})\\ 
&amp;amp; \langle{\boldsymbol{x}} , {\boldsymbol{y}} +{\boldsymbol{z}} \rangle = \langle{\boldsymbol{x}} ,{\boldsymbol{y}} \rangle + \langle{\boldsymbol{x}} , {\boldsymbol{z}} \rangle &amp;amp; \text{(线性1)}\\
&amp;amp; \forall \lambda \in {\boldsymbol{R}}, \; \langle\lambda {\boldsymbol{x}} , {\boldsymbol{y}} \rangle = \lambda\langle{\boldsymbol{x}} ,{\boldsymbol{y}} \rangle &amp;amp; \text{(线性2)}\end{aligned}\]&lt;/span&gt; 故该种定义方式符合线性代数中对于内积运算的要求。此外，根据上述性质可知 &lt;span class=&quot;math display&quot;&gt;\[ \langle\lambda{\boldsymbol{x}} + \mu{\boldsymbol{y}} , {\boldsymbol{z}} \rangle = \lambda\langle{\boldsymbol{x}} , {\boldsymbol{z}} \rangle + \mu\langle{\boldsymbol{y}}, {\boldsymbol{z}}\rangle \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对于内积，有一个非常重要的定理：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定理 2.1.1 (Cauchy-Schwarz)&lt;/strong&gt; &lt;span class=&quot;math display&quot;&gt;\[\langle {\boldsymbol{x}},{\boldsymbol{x}} \rangle ^2 \leq \langle {\boldsymbol{x}},{\boldsymbol{x}} \rangle \langle {\boldsymbol{y}},{\boldsymbol{y}} \rangle \]&lt;/span&gt; &lt;em&gt;证明&lt;/em&gt; 使用 &lt;span class=&quot;math inline&quot;&gt;\(\langle {\boldsymbol{x}}-t{\boldsymbol{y}}, {\boldsymbol{x}}-t{\boldsymbol{y}} \rangle \geq 0\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在定义内积之后的 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{R}}^n\)&lt;/span&gt; 称为 &lt;strong&gt; 维 Euclid 空间&lt;/strong&gt;，或简称&lt;strong&gt;欧式空间&lt;/strong&gt;。在内积的基础之上，可以定义向量的&lt;strong&gt;范数&lt;/strong&gt;，此处定义 &lt;span class=&quot;math inline&quot;&gt;\(\|{\boldsymbol{x}} \|=\sqrt{\langle {\boldsymbol{x}} , {\boldsymbol{x}} \rangle}\)&lt;/span&gt;，它满足范数所要求的三条性质： &lt;span class=&quot;math display&quot;&gt;\[\begin{aligned}
&amp;amp;\|{\boldsymbol{x}} \| \geq {\boldsymbol{0}} \\
&amp;amp;\forall \lambda \in {\boldsymbol{R}},\;  \|\lambda{\boldsymbol{x}} \| = |\lambda|\|{\boldsymbol{x}} \|\\
&amp;amp;\|{\boldsymbol{x}} + {\boldsymbol{y}} \| \leq \|x\| + \|y\| \quad \text{(三角形不等式)}
\end{aligned}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上述三条性质中，第三条常常会被使用到，它的证明可以通过内积运算及定理2.1.1求得。此外其在一维空间上的形式即为 &lt;span class=&quot;math inline&quot;&gt;\(|x+y| \leq |x| + |y|\)&lt;/span&gt;　。&lt;/p&gt;
&lt;p&gt;通过几何运算，我们可以在二维空间中得到两个向量之间夹角与其内积的关系： &lt;span class=&quot;math display&quot;&gt;\[\text{cos}\theta = \frac{\langle {\boldsymbol{x}}, {\boldsymbol{y}} \rangle }{\|{\boldsymbol{x}}\|\|{\boldsymbol{y}}\|}\]&lt;/span&gt; 由定理2.2.1知上式右侧分子的绝对值总小于分母，故可以在 &lt;span class=&quot;math inline&quot;&gt;\(R^n\)&lt;/span&gt; 上定义两个向量的夹角:&lt;span class=&quot;math display&quot;&gt;\[\text{cos}\theta = \frac{|\langle {\boldsymbol{x}}, {\boldsymbol{y}} \rangle|}{\|{\boldsymbol{x}}\|\|{\boldsymbol{y}}\|}\]&lt;/span&gt; 只要 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{x}}, {\boldsymbol{y}}\)&lt;/span&gt; 不同时为 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{0}}\)&lt;/span&gt; 上式就总是有定义的。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;\(R^n\)&lt;/span&gt; 中两个点的距离定义为: &lt;span class=&quot;math inline&quot;&gt;\(\|{\boldsymbol{x}}-{\boldsymbol{y}}\|\)&lt;/span&gt;，根据范数的三角形不等式，有&lt;strong&gt;距离的三角不等式&lt;/strong&gt;: &lt;span class=&quot;math inline&quot;&gt;\(\|{\boldsymbol{x}}-{\boldsymbol{y}}\| \leq \|{\boldsymbol{x}}-{\boldsymbol{z}}\| + \|{\boldsymbol{y}}-{\boldsymbol{z}}\|\)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;对任意 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\in {\boldsymbol{R}}\)&lt;/span&gt; 记 &lt;span class=&quot;math display&quot;&gt;\[B_r(a) = \{{\boldsymbol{x}} \in {\boldsymbol{R}}^n: \|{\boldsymbol{x}}-{\boldsymbol{a}}\| &amp;lt; r\}\\
\overline{B_r}(a) = \{{\boldsymbol{x}} \in {\boldsymbol{R}}^n: \|{\boldsymbol{x}}-{\boldsymbol{a}}\| \leq r\}\]&lt;/span&gt; 分别成为以 &lt;span class=&quot;math inline&quot;&gt;\({\boldsymbol{a}}\)&lt;/span&gt; 为中心， &lt;span class=&quot;math inline&quot;&gt;\(r\)&lt;/span&gt; 为半径的&lt;strong&gt;球&lt;/strong&gt;与&lt;strong&gt;半球&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对 &lt;span class=&quot;math inline&quot;&gt;\(E \in {\boldsymbol{R}}^n\)&lt;/span&gt; 如果存在 &lt;span class=&quot;math inline&quot;&gt;\(r&amp;gt;0\)&lt;/span&gt; ，使得 &lt;span class=&quot;math inline&quot;&gt;\(E \subset B_r({\boldsymbol{0}})\)&lt;/span&gt; ，那么称 &lt;span class=&quot;math inline&quot;&gt;\(E\)&lt;/span&gt; 为&lt;strong&gt;有界集&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;定义&lt;strong&gt;矩阵范数&lt;/strong&gt;: &lt;span class=&quot;math inline&quot;&gt;\(\|{\boldsymbol{A}}_{mn}\| = (\sum{\sum{a_{ij}^2}})^ {1/2}\)&lt;/span&gt; 。该定义将矩阵看作一个拉直的向量，它具有如下性质： &lt;span class=&quot;math display&quot;&gt;\[\|\lambda{\boldsymbol{A}}\| = \lambda\|{\boldsymbol{A}}\|\\
\|{\boldsymbol{A}}+{\boldsymbol{B}}\| \leq \|{\boldsymbol{A}}\| + \|{\boldsymbol{B}}\|\\
\|{\boldsymbol{A}}{\boldsymbol{B}}\| \leq \|{\boldsymbol{A}}\|\|{\boldsymbol{B}}\|\]&lt;/span&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>罪与罚</title>
   <link href="http://mindonmind.github.io/2013/10/13/sin-and-punish"/>
   <updated>2013-10-13T22:51:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/10/13/sin-and-punish</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;blockquote&gt;
&lt;p&gt;They were careless people. Tom and Daisy–they smashed up things and creatures and then retreated back to their money or their vast carelessness, or whatever it was that kept them together, and let other people clean up the mess they had made…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align=&quot;right&quot;&gt;
&lt;em&gt;The Great Gatsby&lt;/em&gt; , F.S. Fitzgerald
&lt;/p&gt;
&lt;p&gt;冷酷&lt;br/&gt; 良知，&lt;br/&gt; 拥有意识的 &lt;br/&gt; 高级动物 &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;堕落 &lt;br/&gt; 救赎， &lt;br/&gt; 被鞭笞的 &lt;br/&gt; 潜意识奴仆&lt;/p&gt;
&lt;p&gt;他追问众神 &lt;br/&gt; 罪的反义， &lt;br/&gt; 用陨落的身体&lt;br/&gt; 换大地一声回响&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;以摆脱斗兽场内&lt;br/&gt; 永不落幕的， &lt;br/&gt; 无声残杀&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;那些 &lt;br/&gt; 被剥夺了权利的&lt;br/&gt; 在继续争抢胜利&lt;/p&gt;
&lt;p&gt;而无罪的受到惩罚&lt;br/&gt; 有罪的逃脱惩罚，&lt;br/&gt; 罪的反义&lt;br/&gt; 便是罚&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;献给太宰治&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>蝴蝶翅膀上的一条轨迹</title>
   <link href="http://mindonmind.github.io/2013/09/25/a-trajectory-on-the-lorenz-butterfly"/>
   <updated>2013-09-25T21:30:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/09/25/a-trajectory-on-the-lorenz-butterfly</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;大概两年前，一个室友去拔了智齿，回来后苦不堪言。当时我庆幸自己的那颗几乎不犯事，但该来的总逃不掉，另颗深藏在牙龈下的智齿还是逼迫我躺上了手术台。拔牙的过程跟我那位舍友描述的差不多，先把牙龈切开，然后便是电锯铁钳的一阵狂轰滥炸。在演奏了大约十五分钟的手术进行曲后，终于以牙龈缝上两针告终。&lt;/p&gt;
&lt;p&gt;手术中除了有些血腥外几乎没有感到不适，可术后却要受一番苦。万幸的是拔牙前没亏待自己，趁着假期去青岛游玩了几天。海风自然是没少吹，海鲜也吃了不少，最重要的是心情完全放松，毫无压力与焦虑地度的这几天，为拔牙做足了身心准备。&lt;/p&gt;
&lt;p&gt;青岛除了风景好，海产多，青岛人也相当热情实诚。此外青岛市似乎也特别强调宣扬中华传统美德，大街小巷各处布满了倡导行善的孔孟名言。但我总觉得这样不太好。假如小孩子从小在这样充满真善美的教育中长大，等有一天他离开了青岛，来到一个不那么实诚的地方，他一定会相当困惑。正如从小在这类教育中长大的我一样。&lt;/p&gt;
&lt;p&gt;我不大欣赏很多人讲道理，喜欢只讲一半，把剩下的藏起来。就像某人说要传你「辟邪剑谱」，却只教你自宫了一样，结果下面就没有了。这是不实诚的表现。我想应该把真相全部告诉孩子们，再好一点可以教他们把辨别真伪作为一种本能刻到脑子里去，最坏也要告诉他们莫轻易自残。假使青岛市在每句「老吾老，以及人之老，幼吾幼，以及人之幼」之后都加上一句「人不为己，天诛地灭」，那我就会觉得非常好了。这样等他们长大，自己面对种种现象时，才不至于心中充满问号。他们也应该能作出更独立的选择与判断，避免诸多不必要的痛苦。&lt;/p&gt;
&lt;div class=&quot;floating-right&quot;&gt;
&lt;p&gt;&lt;img class=&quot;span4 imageborder&quot; src=&quot;/assets/images/lorenzattractor.png&quot;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;昨晚拔牙后痛得无事，便翻出不久前找到的一段科普视频解闷。视频介绍的是动力系统 (Dynamical System) 及其上的混沌现象。当中提到数学家洛伦茨在对大气流动进行建模时建立了三个简化方程，任意一点按这三个方程运动，都会形成一条独特的轨迹。如果我们画出众多点的轨迹，就会得到一个如右图所示的双圆盘形，它被称为洛伦茨吸引子 (Lorenz Attractor)。如果稍稍改变一个点的初始运动状态，那它的轨迹和今后状态就有可能发生翻天覆地的变化，人们称这种对初始条件的敏感性为混沌 (Chaos)。在一次大气科学会议中，洛伦茨迟迟没有给出报告的题目，焦急的组织者根据他的模型提出了一个很酷的概念——蝴蝶效应，报告的题目则拟为「可预测性：一只蝴蝶在巴西振动翅膀是否会引起德州的一场飓风」。蝴蝶效应这个名词从此在世界范围内流行开来。由于洛伦茨吸引子形状酷似一对张开的蝴蝶翅膀，它也被称为洛伦茨蝴蝶。&lt;/p&gt;
&lt;p&gt;人类对于气象的预测愿望似乎全被这只「蝴蝶」的振翅拍死了，因为如果一只蝴蝶就能引起一场飓风，那么成千上万只蝴蝶一起振翅所导致的复杂程度是我们根本无法预测的。一同被拍死的，还有一直烟火不断的决定论，以及人类对未来的预测欲。&lt;/p&gt;
&lt;p&gt;但是洛伦茨并未满足于气象的混沌解释，他进一步发现，尽管吸引子上不同点的轨迹不同，但如果我们确定了一个空间区域，每个点在这个空间区域的路过时间占其总行程时间的比率却是相同的。由于每一个空间区域对应着一种气候现象，这一条论断所说的实际就是：从长远来看，这些气候现象发生的概率不变。也就是说，不论蝴蝶如何振翅，它们都无法改变飓风的发生频率，它们所能改变的，只不过是飓风发生的先后。&lt;/p&gt;
&lt;p&gt;类比我们自己，每个人的人生岂不也是一条「蝴蝶」翅膀上的轨迹。今日发生的事情，就像蝴蝶的一次振翅，难说会给今后的生活造成什么样的巨大影响。但它并不会改变这条轨迹上所要发生事件的比率，它们只不过改变了这些事件发生的先后。纵使秋天总是多事，智齿还有一颗要拔，这些都没什么需要在意。重要的是悄无声息地养育着你的吸引子，最终是它来决定你的命运。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>从 A 到 B</title>
   <link href="http://mindonmind.github.io/2013/09/06/from-a-to-b"/>
   <updated>2013-09-06T02:41:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/09/06/from-a-to-b</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;生活的全部艺术在于平衡。&lt;br/&gt; 凡事均有对立面，所以努力养成思考对立面的习惯。&lt;br/&gt; 那些过于绝对或极端的事物，它们必定存在或会导致问题，注意它们。&lt;br/&gt; 但也要清楚这句话本身便存在问题，所以极端并不太坏。&lt;br/&gt; 比如没有你的极端，便不会有这里的一切。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;常常思考对立面，常常走向对立面。&lt;br/&gt; 东方的需要到西方去寻找，西方的需要在东方实践。&lt;br/&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;工作和追求是两回事，幸运的话也可以是一回事。&lt;br/&gt; 如果工作不能满足或实现追求，没什么需要不满，尽力做好它们，并从中学到知识。&lt;br/&gt; 在努力尝试后，你会发现总有些东西无法改变，学着让自己放松，平静地和它们相处。&lt;br/&gt; 必须在工作时间拼命努力，因为这样你才有更多的时间实现追求。&lt;br/&gt; 如果努力了两年仍发现无法爱上工作，那它不会是你的追求，选择合适的时机换一份。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;要知道给你工作的人也有他们的追求，只是不一定与你相同。&lt;br/&gt; 他们无法太顾及你的追求，因为只有你自己能去寻找和实现追求。&lt;br/&gt; 每个人都有追求，区分好你在做的是为了哪一种追求。&lt;br/&gt; 为别人或为自己工作都没有问题，但用为自己的方式为别人工作，就会遇到麻烦。&lt;br/&gt; 只有少数人会在你的追求之路上全心为你考虑，但你应该对这条路上遇到的每一个人心存感激。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;常常，你会觉得自己没有明确的目标和方向，只有一些模糊的想法和意愿。不要怀疑，努力去做你觉得应该做的事情。只有在这种充满不确定的时空下，而不是没有意外与随机的进程中做出的坚定，才叫信念。而你应该相信自己的内心，那里有你最原始的好奇和最真切的渴望。&lt;/p&gt;
&lt;p&gt;最后你要知道，工作和追求都不是生命的全部。&lt;br/&gt; 你与一只蚊虫或一片树叶并没有区别，一切意念均是空无。&lt;br/&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;不论怎样，你身边的环境和同伴都会影响到你。你会慢慢与他们同化，养成他们的观念和习惯，吸收他们的品味与志趣。你的内心也会发生改变，但要记住最让自己满意时的模样，把那个最好的自己写下录下或者画下，不要让它慢慢消失，不留下一点痕迹。&lt;/p&gt;
&lt;p&gt;如果你与别人不同，别人会开始评价你。&lt;br/&gt; 用智慧辨别它们，不要被没有价值的评价影响。&lt;br/&gt; 学会用心智控制情绪，而不是让情绪控制心智。&lt;br/&gt; 这样你才能好好观察你身外的这个世界，分析和运用它的规律。&lt;br/&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;坚持锻炼，并要像一个精密系统的监控装置那样时刻感知你的身体。&lt;br/&gt; 去承认你的无知，因为那比拒绝要轻松万倍，很多时候自尊是你所有难缠问题的源头。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;你最迫切渴望的，大多是你当前的能力无法所及的。&lt;br/&gt; 明白了这一点，你应该就知道了该如何达成你的渴望。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;心情烦躁的时候，去听巴赫。&lt;br/&gt; 嘴唇干裂的时候，吃维B。&lt;br/&gt; 上火溃疡的时候，吃维C和锌。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;每个月至少读一本和自己专业无关的书，为自己读过的书写下一点什么。&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;br/&gt; 不读书的坏处是容易入世过深，而不写字的坏处是会重犯以前的错误。&lt;br/&gt; 写作会帮你整理思路，提供新的视野，这是激发灵感的最好方式。&lt;br/&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;爱最难在理解需求，&lt;br/&gt; 以及如何去满足这些需求。&lt;br/&gt; 你需要思考怎样去做一个好的后盾。&lt;br/&gt; 还要不断提醒自己爱是无私地和另一个心灵相处。&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;定期给父母外婆还有妹妹打电话。&lt;br/&gt; 珍惜现在和他们的相处时间，&lt;br/&gt; 这个世界上爱你的人只会越来越少。&lt;br/&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;六个月后，记得回来再读这篇文章，把忘记的拾起，把错误的抛弃。&lt;/p&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://livid.v2ex.com/essays/2012/01/24/a-letter-from-26-to-18/&quot;&gt;Livid: 在 26 岁时写给 18 岁的自己&lt;/a&gt;&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>如你所愿</title>
   <link href="http://mindonmind.github.io/2013/07/21/change-as-you-like"/>
   <updated>2013-07-21T22:55:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/07/21/change-as-you-like</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;7月10号，我在北京站，百无聊赖地等待回家的火车。用着车站的无线，我无意间看到 S 对我的一句评论，说我现在意志特别坚定。我很感谢 S 的这句提醒，因为我一直没意识到自己已经发生了这样大的改变。四年前的某天我曾对自己说过类似的话，那时它还是我的小小梦想。&lt;/p&gt;
&lt;p&gt;在火车上，我像一个小心翼翼的淘金者，在车厢里掰手指数起自上大学以来自己的变化。它们中有的驶向了最初设定的目标，比如养成阅读国际资讯的习惯，成为 linux 爱好者，维护一个自己的网络空间等等。剩下的则或无终而返，或驶向了完全相反的方向。我曾以为自己会一直像大学时那样我行我素，实际是现在却乏味三俗，再不会背着个包到处乱跑，也懒得思考学术之外的问题。我曾每月去海淀图书城淘一次碟，现在连老板的名字都不再记得。我曾走在路上不和别人打招呼，现在走在路上，仍然不和别人打招呼。&lt;/p&gt;
&lt;p&gt;下火车后不久便去乡下看望安息在老家的奶奶。六年前奶奶八十四岁去世，而我十六岁，两个岁数加起来正好是一百，两代生命就这样完成了交接。我自小被外婆带大，从来没和奶奶亲密地相处过，最后的日子里，她应允我离开她身边去外地考试。奶奶完全可以要求我留下陪她走过最后一段路程，但她选择了让我不在身边，而这选择最终将我送到了北京。临走前奶奶仍交代将她的财产——一副银手镯和一对耳环，保留给我。可我考完回家，满脑袋想的却全然不是奶奶的去世。我去理发店剪了一个莫西干发型，穿着朋克式的T恤回乡吊唁，现在我真想去扇那个十六岁的傻帽一个耳光。&lt;/p&gt;
&lt;p&gt;扫完墓往回走时，我后脚跟踩到一条青蛇，幸运的是它并没有缠住我的脚踝拼命咬上一口，而是乖乖游回了池塘里。走在后面的爸爸被吓着了，妈妈则说这是吉兆，我想或许是奶奶在庇护我，而我知道，这种庇护还将会以各种不同的方式出现在我的生命里。在这个通讯异常发达的年代，我没有跟奶奶通过一句电话，更别提各种时兴的交流手段。这让我学会去珍惜与亲人们交流的时刻，他们爱你，而这个世界上爱你的人只会越来越少。&lt;/p&gt;
&lt;p&gt;在乡间的路口，过去的老邻居们聊起往事，叙说那个时代的贫穷和艰难。早奶奶十几年去世的爷爷一直患肺病。为了每天能有饭吃，他需要像年轻人们那样跑到河岸，挑挖和运送淤泥到远方。他挑担时的咳嗽声和蹒跚步态从此成了他在村里的标志。在夏天，爷爷会摘好地里的瓜果，徒步用扁担送进城。我想象着他在路上边走边吆喝的样子，这让我恍然醒悟，原来爷爷和那些城市里露宿街头的身影别无二致。&lt;/p&gt;
&lt;p&gt;相比爷爷，奶奶的经历还要更艰险一些。她原本是别村某家的童养媳，年幼时常常被公公家虐待，十四岁的时候出逃，之后便流浪在各个村庄讨饭。爷爷遇见奶奶后，爱情或者其他的什么将他们与对方结合成了神圣的一对。这其间的故事可能再也无法被人知晓，现在我能想象的，只有这桩婚事在当时的村里是多么爆炸的新闻。婚后他们接连生出两男两女，残酷的是男孩们都没能熬过那时候的疾病和贫穷。直到爷爷五十岁，奶奶四十六岁时，他们才又得到了一个男孩。这个孩子在两个老人无止境的担忧中活了下来，他就是我的父亲。&lt;/p&gt;
&lt;p&gt;父亲学习不错，他考到了镇上念高中，后来又去城里读书，再回到了自己的高中教书。某天上班的路中他遇到了留着齐腰长发的年轻母亲，这个姑娘之前曾因不愿意嫁给家长指定的结婚对象而要跳河轻生。那时候父亲身无分文，凭着俊俏的外貌和一手才艺顺利住进了外婆家的阁楼。只是当时镇上还没有像今天这样随处可见的屈臣氏或 711，所以母亲在结婚前就怀上了孩子。两个手足无措的年轻人最终偷偷跑去乡下，让村医帮忙打掉了婴儿。他们当然不敢告诉家长，而事实上，这件事情除了我，他们谁都没告诉。&lt;/p&gt;
&lt;p&gt;我出生的时候，爷爷已经十分病重。得知消息后，他激动地冲出土屋外，大喊了几声『一天之喜！』 这几个字后来被父亲用来给我起名，我也得以一辈子活在爷爷的赐福之中。后来的故事让人有点感伤，在我刚一岁多还无法叫出「爷爷」时，他匆匆地离开了人世。因此，我和爷爷连一句话都没说上过。&lt;/p&gt;
&lt;p&gt;我想有些化学物质注定要流淌在我的血液中，当爷爷挑起每一担淤泥，当奶奶决定出逃，当他们夭折两个男孩后生出父亲，当父亲遇到母亲，当母亲割去自己的骨肉——我的哥哥或姐姐时，这些物质就注定在我的血液里永不停息地涌动。它们见证了种种生活的苛刻，见证了一次次顽强的选择。在这个家族，每一个存活下来的婴儿都将继承这些物质。我带着它们慢慢成长，不停体味着生命中需要去承受的一些苦痛与抉择。我有时会觉得生命并不完全属于自己，因为我活着的每分每刻，都在延续爷爷奶奶未走完的那段旅程。让我高兴的是，自己慢慢具有了选择以及改变的能力，这使得我有信心去走一条这个家族从未有人走过的路。每每想到这些，我便感到自由自在，内心充满了感激和喜悦。&lt;/p&gt;
&lt;p&gt;今年奶奶九十岁，我在北京待了也有五年时间。从抵触到接受，越来越觉得和这个城市的关系就像一场恋爱——待久了觉得烦，分别一会儿却又心生想念。就像情侣们从相识、了解、信任、依赖到最后习惯，我在这座城市里曲折地思索着她向我昭示的或者倾诉的一切。现在我领悟到，没有改变是突然发生的，你与万事万物交织在一起，融成了一个光滑连续的世界。&lt;/p&gt;
&lt;p&gt;这些就是我用五年时间弄明白的一点道理，而下一个五年，或许我需要投入可怕的精力才能学会如何运用它们去做出些有价值的创造。不过有奶奶的庇护和爷爷的赐福，我知道好运终会降临。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>Multiple Regression: Why Exchanging DV with a IV Won't Change the P Value</title>
   <link href="http://mindonmind.github.io/2013/06/22/why-exchanging-dv-and-a-iv-has-no-effect-on-p"/>
   <updated>2013-06-22T01:27:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/06/22/why-exchanging-dv-and-a-iv-has-no-effect-on-p</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;iframe src=&quot;http://nbviewer.ipython.org/gist/mindonmind/8148821&quot; width=&quot;800&quot; height=&quot;10100&quot;&gt;
&lt;/iframe&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>一个 Python 程序员的 Vim 生存手册：移动篇</title>
   <link href="http://mindonmind.github.io/2013/05/05/a-vim-pythoners-survivor-book-plugins"/>
   <updated>2013-05-05T14:31:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/05/05/a-vim-pythoners-survivor-book-plugins</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;Vim, 一个编辑器；Python, 一种程序设计语言。它们是我平常使用最频繁的两个工具。能否熟练高效地使用它们不仅影响到我的工作效率，更影响到工作的心情。&lt;/p&gt;
&lt;p&gt;为了追求一个淡定高效的编程氛围，我花了许多时间与精力，来打造一个基于 Vim 的 Python 数据分析工作平台。现在，它已经能满足我近乎完美的标准，在此系列作一总结。&lt;/p&gt;
&lt;p&gt;需要说明的是，零零总总的插件是提升 Vim 效率和体验的一个主要手段，本系列将以介绍我喜爱的插件及它们的常用方法为主，辅以我自己的一些习惯性键映射介绍我的 Vim 工具集。本篇先来介绍或许是 Vim 使用中最频繁的操作 —— 移动。&lt;/p&gt;
&lt;div class=&quot;toc&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&quot;#vim-中的移动&quot;&gt;Vim 中的移动&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#窗口内移动&quot;&gt;窗口内移动&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#窗口间移动与窗口管理&quot;&gt;窗口间移动与窗口管理&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#标签页间移动&quot;&gt;标签页间移动&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#缓存文件间移动&quot;&gt;缓存/文件间移动&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id=&quot;vim-中的移动&quot;&gt;Vim 中的移动&lt;/h2&gt;
&lt;p&gt;移动或许是使用 Vim 的过程中最让人愉快又抓狂的一项操作了。无论是文件内部的位置移动，quickfix 或 location 列表跳转，还是不同文件、缓冲、标签页的切换等等，都可以归位这一种操作。不要说各种复杂的移动命令与位置标记，光是文件、缓冲、窗口、标签页这些概念就让人头大。&lt;/p&gt;
&lt;p&gt;但是不用害怕，因为本文下面就将从与移动相关的一些基本概念讲起，再分情形介绍各种高效移动的妙招。&lt;/p&gt;
&lt;p&gt;为了掌握高效移动的奥义，首先需要掌握如下基本概念：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;文件缓冲：即被载入内存的文件。&lt;/li&gt;
&lt;li&gt;窗口：缓冲的一个视图。&lt;/li&gt;
&lt;li&gt;标签页：窗口的集合。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总结成一句话即为一个缓存对应一个文件，一个窗口对应一个缓存，多个窗口组成一个标签页。&lt;/p&gt;
&lt;h2 id=&quot;窗口内移动&quot;&gt;窗口内移动&lt;/h2&gt;
&lt;p&gt;下面这些命令是 Vim 自带的，也是最基本的移动命令，一定要熟记：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;w|W|e|E|b|B|ge|gE                            # 字词移动
0|^|$|f|F|t|T                                # 行内移动
;|,                                          # 重复上一次的行内查找
gg|G|H|M|L                                   # 行间移动
[[|]]|{|}                                    # 块移动
&amp;lt;C-Y&amp;gt;|&amp;lt;C-E&amp;gt;|&amp;lt;C-F&amp;gt;|&amp;lt;C-B&amp;gt;|&amp;lt;C-U&amp;gt;|&amp;lt;C-D&amp;gt;|zt|zz|zb # 滚屏
/|?|#|*                                      # 查找
``|&amp;#39;&amp;#39;|&amp;lt;C-O&amp;gt;|&amp;lt;C-I&amp;gt;                            # 跳转
&amp;lt;C-]&amp;gt;|&amp;lt;C-T&amp;gt;                                  # 跳转标签&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;加速文件内移动，可使用 &lt;a href=&quot;https://github.com/Lokaltog/vim-easymotion&quot;&gt;EasyMotion&lt;/a&gt;，它让你一键跳任意至目标位置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt; plus
f|F|t|T|w|W|b|B|e|E|ge|gE|j|k|n|N&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;由于这上面这几个命令会被经常用到，每次都要按两下 &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; 非常不方便，因此我将 EasyMotion 的提示键重设为 &lt;code&gt;;&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:EasyMotion_leader_key = &amp;#39;;&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;虽然这样会与行内重复查找的功能有点冲突，但其实只要在按下 &lt;code&gt;;&lt;/code&gt; 后不做任何操作就可以继续使用 &lt;code&gt;;&lt;/code&gt; 之前的行内查找功能。&lt;/p&gt;
&lt;p&gt;在编辑源码时，可以利用 &lt;a href=&quot;https://github.com/majutsushi/tagbar&quot;&gt;Tagbar&lt;/a&gt; 插件，对源码对象进行快速定位:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;silent&amp;gt;&amp;lt;leader&amp;gt;t :TagbarToggle&amp;lt;CR&amp;gt;
map &amp;lt;silent&amp;gt;&amp;lt;leader&amp;gt;tf :TagbarTogglPause&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上面两句的作用是分别用 &lt;code&gt;&amp;lt;leader&amp;gt;t&lt;/code&gt;, &lt;code&gt;&amp;lt;leader&amp;gt;tf&lt;/code&gt; 来打开／锁定右侧标记边栏。&lt;/p&gt;
&lt;p&gt;此外有时源码中的错误信息会被放至 Quickfix 或 Location 列表中，可以使用 &lt;a href=&quot;https://github.com/Valloric/ListToggle&quot;&gt;ListToggle&lt;/a&gt; 打开／关闭这两栏从而快速对错误信息进行定位：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:lt_location_list_toggle_map = &amp;#39;&amp;lt;leader&amp;gt;w&amp;#39;
let g:lt_quickfix_list_toggle_map = &amp;#39;&amp;lt;leader&amp;gt;q&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上面两句分别使用 ‘&lt;leader&gt;w’ 和 ‘&lt;leader&gt;q’ 对 Location/Quickfix 列表进行开关控制。此外在这些错误之间的跳转可以通过下面将要介绍的 Unimpaired 插件搞定。&lt;/p&gt;
&lt;p&gt;为 Python 增强的 &lt;code&gt;%&lt;/code&gt; 匹配 &lt;a href=&quot;https://github.com/vim-scripts/matchit.zip&quot;&gt;Mathit&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/vim-scripts/python_match.vim&quot;&gt;python_match&lt;/a&gt;，可以在 &lt;code&gt;if/else&lt;/code&gt; 之间跳转：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;%   # 前向跳转
g%  # 后向跳转
[%  # 跳至判断语句块首部
]%  # 跳至判断语句块尾部&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后介绍一个小技巧给有移动强迫症的同学们，可以使用如下映射来加速上下左右的步进范围：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;A-j&amp;gt;   6j
map &amp;lt;A-k&amp;gt;   6k
map &amp;lt;A-h&amp;gt;   6h
map &amp;lt;A-l&amp;gt;   6l&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;窗口间移动与窗口管理&quot;&gt;窗口间移动与窗口管理&lt;/h2&gt;
&lt;p&gt;切分窗口是在编程时非常有用的功能，窗口间的移动和窗口管理也因此成为非常频繁的操作。&lt;/p&gt;
&lt;p&gt;窗口间的移动，使用 &lt;code&gt;Ctrl&lt;/code&gt; 加 &lt;code&gt;hjkl&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;C-J&amp;gt; &amp;lt;C-W&amp;gt;j
map &amp;lt;C-K&amp;gt; &amp;lt;C-W&amp;gt;k
map &amp;lt;C-H&amp;gt; &amp;lt;C-W&amp;gt;h
map &amp;lt;C-L&amp;gt; &amp;lt;C-W&amp;gt;l&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新建与移动窗口，可使用 Vim 自带的命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;C-W&amp;gt;S|V|N|^ # 新建窗口
&amp;lt;C-W&amp;gt;J|K|L|H # 移动窗口
&amp;lt;C-W&amp;gt;o       # 保留当前窗口&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;窗口大小调整：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;C-W&amp;gt;_|=|| # 窗口横向最大／均等／纵向最宽&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;由于 Vim 自带的窗口大小调整键过于复杂，我使用 &lt;a href=&quot;https://github.com/kana/vim-submode&quot;&gt;Submode&lt;/a&gt; 插件来进行代替，添加如下设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let g:submode_keep_leaving_key = &amp;#39;\&amp;#39;
call submode#enter_with(&amp;#39;windows&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;lt;Leader&amp;gt;h&amp;#39;, &amp;#39;:3wincmd &amp;lt;&amp;lt;CR&amp;gt;&amp;#39;)
call submode#enter_with(&amp;#39;windows&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;lt;Leader&amp;gt;l&amp;#39;, &amp;#39;:3wincmd &amp;gt;&amp;lt;CR&amp;gt;&amp;#39;)
call submode#enter_with(&amp;#39;windows&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;lt;Leader&amp;gt;j&amp;#39;, &amp;#39;:3wincmd +&amp;lt;CR&amp;gt;&amp;#39;)
call submode#enter_with(&amp;#39;windows&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;lt;Leader&amp;gt;k&amp;#39;, &amp;#39;:3wincmd -&amp;lt;CR&amp;gt;&amp;#39;)
call submode#leave_with(&amp;#39;windows&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;lt;Esc&amp;gt;&amp;#39;)
call submode#map(&amp;#39;windows&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;:3wincmd &amp;lt;&amp;lt;CR&amp;gt;&amp;#39;)
call submode#map(&amp;#39;windows&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;:3wincmd &amp;gt;&amp;lt;CR&amp;gt;&amp;#39;)
call submode#map(&amp;#39;windows&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;j&amp;#39;, &amp;#39;:3wincmd +&amp;lt;CR&amp;gt;&amp;#39;)
call submode#map(&amp;#39;windows&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;k&amp;#39;, &amp;#39;:3wincmd -&amp;lt;CR&amp;gt;&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上配置的意思是使用 &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; 键加 &lt;code&gt;hjkl&lt;/code&gt; 调整窗口大小。除此之外，下面列出一些经常用到的窗口调整命令：&lt;/p&gt;
&lt;p&gt;最后，使用 &lt;code&gt;Alt-c&lt;/code&gt; 关闭窗口：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;A-c&amp;gt; &amp;lt;C-W&amp;gt;c&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;标签页间移动&quot;&gt;标签页间移动&lt;/h2&gt;
&lt;p&gt;曾看到有人建议不要使用标签页，只用缓存就够了。但是在尝试了一段时间这种方式后，我最后还是选择使用标签页，它有如下几个好处：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;轻快。因为标签页打开的缓存始终处于激活状态，无需从硬盘中载入。加上即将介绍的快捷键，可以看到标签页管理和移动也是很方便的。&lt;/li&gt;
&lt;li&gt;直观。有多少文件被打开，一目了然。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;标签页可以很好的组织打开的文件，但也不宜滥用，建议没次最多不要打开超过三个标签页，最好是将其作为临时文件查看器所用，并及时关闭，以防造成主工作区混乱。&lt;/p&gt;
&lt;p&gt;我主要通过 &lt;code&gt;Alt&lt;/code&gt; 间来实现标签页的管理和移动：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;A-L&amp;gt; gt
map &amp;lt;A-H&amp;gt; gT
map &amp;lt;A-N&amp;gt; :tabnew&amp;lt;Space&amp;gt;&amp;lt;CR&amp;gt;
map &amp;lt;A-C&amp;gt; :tabclose&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上映射分别使用 &lt;code&gt;Alt-L&lt;/code&gt;, &lt;code&gt;Alt-H&lt;/code&gt; 在标签页间移动，用 &lt;code&gt;Alt-N&lt;/code&gt;, &lt;code&gt;Alt-C&lt;/code&gt; 来新建关闭标签页。&lt;/p&gt;
&lt;h2 id=&quot;缓存文件间移动&quot;&gt;缓存/文件间移动&lt;/h2&gt;
&lt;p&gt;缓存保存了文件的内容，标记，设置等属性，它是 Vim 中一个十分重要的概念，可按如下三类对其进行划分：&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 16%&quot; /&gt;
&lt;col style=&quot;width: 43%&quot; /&gt;
&lt;col style=&quot;width: 11%&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;类别&lt;/th&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;特征&lt;/th&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;标记&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;p&gt;活动的&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;p&gt;已载入内存且当前可见&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;p&gt;‘a’&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;p&gt;隐藏的&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;p&gt;已载入内存但当前无窗口指向它&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;p&gt;‘h’&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;p&gt;非活动的&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;p&gt;当前文件并未被载入内存&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;p&gt;’’&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br /&gt; 不缓存相关的命令有很多，但下面我们会看到，其实这些命令很少有用到的机会。下面列举一些，仅做备忘：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:buffers             # 显示所有缓存
:ls                  # 同上
:hide                # 隐藏缓存
:buffer [n] or name  # 打开某缓存
:sbuffer             # 水平分片打开缓存
:bdelete [n] or name # 删除缓存&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后，在缓存列表中可能会出现一些标志，它们的含义如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;u      未列举
 %     当前缓存
 #     切换缓存
  a    激活缓存
  h    隐藏缓存
   =   只读
   -   不可修改
    +  已做修改&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;加速文件与缓存的跳转，可使用 &lt;a href=&quot;https://github.com/tpope/vim-unimpaired&quot;&gt;Unimpaired&lt;/a&gt;，它为这些操作映射了一套方便记忆的快捷键。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; [a   前一个文件
 ]a   后一个文件
 [b   前一个缓存
 ]b   后一个缓存
 [l   前一个地址位置 (location list)
 ]l   后一个地址位置
 [q   前一个错误位置 (quickfix list)
 ]q   后一个错误位置
 [t   前一个标签
 ]t   后一个标签&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;它还有很多强大的功能，比如添加空行，切换「粘帖」、「检查拼写」，交换上下行等。&lt;/p&gt;
&lt;p&gt;为了加速已打开的不同文件间的移动，我使用 &lt;a href=&quot;https://github.com/vim-scripts/bufexplorer.zip&quot;&gt;BufExplorer&lt;/a&gt;。这个插件的主要功能是显示和打开缓存：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;leader&amp;gt;be|bs|bv  # 打开缓存浏览器  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;缓存浏览器内常用的命令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;o     打开
t     标签打开
q     退出
d     将缓存添加至 unlisted 列表中
s|S   切换缓存列表排序方式
r     反转列表
D     删除缓存
p     是否分开显示文件名和路径
T     是否只显示当前标签页的缓存
u     是否现实 unlisted 缓存&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在非隐藏缓冲区间的切换比较耗时，如果是需要频繁查询的文件，建议使用窗口或标签页使其一直处于激活状态。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>收拾 Bashrc</title>
   <link href="http://mindonmind.github.io/2013/04/10/bye-bye-bashrc"/>
   <updated>2013-04-10T05:33:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/04/10/bye-bye-bashrc</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;Bash，大多数 linux 用户接触到的第一个 linux 软件，那象征着财富的提示符早已将它的霸气侧漏无疑。被钦定为 linux 默认登陆 shell 程序的它，借助自身某些还不错的有点，一家独大地垄断着与 linux 用户交互的市场。&lt;/p&gt;
&lt;p&gt;不论是初尝 linux 没多久的欣欣菜鸟还是久经折腾的高端极客，相信不少人都和我一样对 bash 有着复杂的情感。多少次，你被一行行的陌生命令挡在门外，又多少次，你因配置成功欣喜若狂。这些苦痛与欢乐的背后，是 bash 默默地担起扫地僧角色，兢兢业业地跑过一句句命令行。因此，bash 绝对是名至实归，不愧于它在 shell 中头把交椅的地位。&lt;/p&gt;
&lt;p&gt;如果没有那一次误入歧途安装 arch，或许我永远不会离开 bash，毕竟我那时候还不曾知道它让我白白敲击了多少次 &lt;code&gt;cd&lt;/code&gt; 和 &lt;code&gt;Tab&lt;/code&gt; 。可是 arch，这个安装时把 root 用户的 shell 都设为 zsh 的怪才，让我第一次见识了 z 宝宝超级补全的威力。令人费解的是，arch 装好后 shell 竟然还是默认为 bash。我对 arch 的这种做法很不满——谁都知道，在用过 zsh 后，bash 的用户体验几乎让人无法忍受。&lt;/p&gt;
&lt;p&gt;虽然我从此弃暗投明，但由于有很多配置写在了 &lt;code&gt;.bashrc&lt;/code&gt; 中，在未认清 zsh 本真前不敢压上全部老本，所以想先坚守 &lt;code&gt;bashrc&lt;/code&gt; 。既然要继续使用之前的配置，就不能直接将登陆 shell 切换成 zsh。我用了个折中的办法，即在 &lt;code&gt;bashrc&lt;/code&gt; 文件的最后加入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;exec zsh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这句。&lt;/p&gt;
&lt;p&gt;这样原先的设置就可以直接再 zsh 中使用，美好 linux 生活从此开始。&lt;/p&gt;
&lt;p&gt;可是，一个问题看似解决，其实又带来了新的问题，比如：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;在用服务器上 zsh 之后，竟然无法从本机 sftp, scp, rsync 到服务器上了！&lt;/li&gt;
&lt;li&gt;需要新增加某些配置的时候，有些还需写在原本的 &lt;code&gt;bashrc&lt;/code&gt; 中，而有些又顺手写到了 &lt;code&gt;zsh&lt;/code&gt; 中，十分混乱。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面这第一个问题曾困扰了我很久，因为在本地和服务器间传送文件是十分频繁的操作。查了很久，最后发现原来那句 &lt;code&gt;exec zsh&lt;/code&gt; 是罪魁祸首，它貌似替换了登陆进来的远程连接。今天再次需要传文件时，正值艳阳高照心情好，于是决定彻底跟 &lt;code&gt;bashrc&lt;/code&gt; 告别。&lt;/p&gt;
&lt;p&gt;首先，删掉那句 &lt;code&gt;exec zsh&lt;/code&gt;。然后将 &lt;code&gt;.bash_profile&lt;/code&gt;, &lt;code&gt;.bashrc&lt;/code&gt; 中的内容分别移植到 &lt;code&gt;.zprofile&lt;/code&gt;, &lt;code&gt;.zshrc&lt;/code&gt; 中。之后执行修改命令 &lt;code&gt;chsh&lt;/code&gt;，期间需要输用户密码及希望设置的 shell 位置（记住这个位置必须事先就已记录在 &lt;code&gt;/etc/shells&lt;/code&gt; 中）。如果是在使用了 NIS 的服务器上，首先需要在主控机上用 &lt;code&gt;chsh&lt;/code&gt; 修改，之后再在任意客户机上用 &lt;code&gt;ypchsh&lt;/code&gt; 修改。&lt;/p&gt;
&lt;p&gt;这样， bash 就被彻底收拾到抽屉里去了。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>蛇年初记</title>
   <link href="http://mindonmind.github.io/2013/03/26/the-first-of-python-year"/>
   <updated>2013-03-26T00:54:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2013/03/26/the-first-of-python-year</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;这是一篇拖了太久的文章。&lt;/p&gt;
&lt;p&gt;二月放假回家，尽管只待了一周，还是暴露出一些无法逃避的问题。回学校后大病一场，病好后大多数问题也想清楚了。&lt;/p&gt;
&lt;p&gt;借用 My Little Airport 的一句歌词——我已不再是当初的文艺腔/我已不再是每天都觉沮丧——对现在的我来说真是再合适不过。&lt;/p&gt;
&lt;p&gt;在二月末饕餮般读完迪亚兹的两本小说后，似乎任何文艺类的书都不再吸引我的注意。证据一，罗素的文集躺在床边已有大半月，至今仍未翻过十页。证据二，网上组织的各类活动聚会，我都不再有关注的闲心。证据三，我常刷「&lt;span class=&quot;citation&quot; data-cites=&quot;总裁精粹&quot;&gt;@总裁精粹&lt;/span&gt;」的微博，并觉得其写得真是不错。&lt;/p&gt;
&lt;p&gt;有意思的是，几天前一个编辑写信给涵涵，问能不能用她说过的一句话作为某本新书的书名，还寄来他们出过的一本同类样书，书名很文艺。涵涵说她不喜欢心灵鸡汤类的书，也不大愿意把自己的箴言煮成鸡汤。我的想法相反，这类书能畅销，就说明有人需要这样的书，帮助他人的事，何乐而不为。&lt;/p&gt;
&lt;p&gt;大家都要找到一种活下去的方式，度过一辈子。&lt;/p&gt;
&lt;p&gt;我现在的方式，就是每天嘻嘻哈哈笑得前仰后翻，有时候真会怀疑天天笑成这样，会不会出什么问题，比如胃下垂。当然我应该感到庆幸，因为不是每个人都有机会，能每天笑出声来。所以心灵鸡汤么，虽说不是读者自己养的鸡，熬的汤，还是装在罐头盒里的，但只要还能喝出鸡味儿来，就算营养不多，也不错啊。好歹没把时间费在拔鸡毛上，比如成天「文艺腔」、「觉沮丧」。&lt;/p&gt;
&lt;p&gt;当然不文艺也有不文艺的问题，首先就是人变得庸俗。我现在就越来越三俗，但我把这作为自己开始成熟的标志，没见哪个总裁不三俗的，是么。&lt;/p&gt;
&lt;p&gt;余华有本小说叫《活着》，当年在金工实习的场子里曾见到谢兄专注地读过。这真是巧，因为那阵子我也老想着跟这个话题有关的深刻问题。这或许就是我曾不那么三俗，甚至有点文艺的原因。而现在现在我更想做点俗的事，踏实的事，傻不拉叽让人发笑的事。&lt;/p&gt;
&lt;p&gt;因为我领悟到，这才是适合我活着的方式。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>IPython Notebook: 交互计算新时代</title>
   <link href="http://mindonmind.github.io/2013/02/08/ipython-notebook-interactive-computing-new-era"/>
   <updated>2013-02-08T10:05:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2013/02/08/ipython-notebook-interactive-computing-new-era</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;style type=&quot;text/css&quot;&gt;
div.sourceCode { overflow-x: auto; }
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code &gt; span.kw { color: #007020; font-weight: bold; } /* Keyword */
code &gt; span.dt { color: #902000; } /* DataType */
code &gt; span.dv { color: #40a070; } /* DecVal */
code &gt; span.bn { color: #40a070; } /* BaseN */
code &gt; span.fl { color: #40a070; } /* Float */
code &gt; span.ch { color: #4070a0; } /* Char */
code &gt; span.st { color: #4070a0; } /* String */
code &gt; span.co { color: #60a0b0; font-style: italic; } /* Comment */
code &gt; span.ot { color: #007020; } /* Other */
code &gt; span.al { color: #ff0000; font-weight: bold; } /* Alert */
code &gt; span.fu { color: #06287e; } /* Function */
code &gt; span.er { color: #ff0000; font-weight: bold; } /* Error */
code &gt; span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
code &gt; span.cn { color: #880000; } /* Constant */
code &gt; span.sc { color: #4070a0; } /* SpecialChar */
code &gt; span.vs { color: #4070a0; } /* VerbatimString */
code &gt; span.ss { color: #bb6688; } /* SpecialString */
code &gt; span.im { } /* Import */
code &gt; span.va { color: #19177c; } /* Variable */
code &gt; span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
code &gt; span.op { color: #666666; } /* Operator */
code &gt; span.bu { } /* BuiltIn */
code &gt; span.ex { } /* Extension */
code &gt; span.pp { color: #bc7a00; } /* Preprocessor */
code &gt; span.at { color: #7d9029; } /* Attribute */
code &gt; span.do { color: #ba2121; font-style: italic; } /* Documentation */
code &gt; span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
code &gt; span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
code &gt; span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
  &lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;在使用 Python/IPython, R, Matlab 等工具进行探索性数据分析时，你是否经常会遇到以下情景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在命令行中输入了许多语句后，希望将其部分或全部保存至一个脚本文件中以便记录计算过程。&lt;/li&gt;
&lt;li&gt;脚本运行出错，需要对脚本进行局部修改后继续运行，但不想重新运行之前已执行完的语句。&lt;/li&gt;
&lt;li&gt;希望将详细计算过程及结果与他人共享，以便与他人讨论数据分析步骤或让他人重复你的结果。&lt;/li&gt;
&lt;li&gt;希望在本地的台式机或笔记本上对远程服务器中的数据进行分析，却不想将数据拷贝至本地。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传统的交互计算平台一般都以命令行的方式与数据分析者交互，即用户每输入一条语句，计算平台返回相应的结果。虽然它们在用户体验方面做了许多努力，诸如自动命令补全，弹出帮助文档，命令历史记录等，但在上文提到的这些情景下，它们就显得有些力不从心。 &lt;a href=&quot;http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html&quot;&gt;IPython Notebook&lt;/a&gt; 的出世，正弥补了传统计算平台的不足，为上述情景提供了快捷直观的解决方案。&lt;/p&gt;
&lt;p&gt;IPython Notebook 是一种新兴的交互式数据分析与记录工具，它定义了一种全新的计算文件格式，其中包含了代码，代码说明以及每一步的计算输出(数值或图片等)，也就是说这一个文件完整记录了计算过程中的所有相关信息。此外，该文件还可以嵌入网络视频，图片，&lt;span class=&quot;math inline&quot;&gt;\(LaTeX\)&lt;/span&gt; 公式等众多副文本格式，实为交互计算，记录思维，传播思想的好帮手。&lt;/p&gt;
&lt;div class=&quot;toc&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&quot;#简介&quot;&gt;简介&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#安装-notebook&quot;&gt;安装 Notebook&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#使用-notebook&quot;&gt;使用 Notebook&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&quot;#本地运行&quot;&gt;本地运行&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#远程运行&quot;&gt;远程运行&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#共享与应用&quot;&gt;共享与应用&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&quot;#用-ipython-notebook-写博客&quot;&gt;用 IPython Notebook 写博客&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#在教学科研中的应用&quot;&gt;在教学科研中的应用&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#总结&quot;&gt;总结&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;#相关链接&quot;&gt;相关链接&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;IPython Notebook 既是一个交互计算平台，又是一个记录计算过程的「笔记本」。它由服务端和客户端两部分组成，其中服务端负责代码的解释与计算，而客户端负责与用户进行交互。服务端可以运行在本机也可以运行在远程服务器，包含负责运算的 IPython kernel (与 &lt;a href=&quot;http://ipython.org/ipython-doc/dev/interactive/qtconsole.html&quot;&gt;QT Console&lt;/a&gt; 的 kernel 相同) 以及一个 HTTP/S 服务器 (&lt;a href=&quot;http://www.tornadoweb.org/&quot;&gt;Tornado&lt;/a&gt;)。而客户端则是一个指向服务端地址的浏览器页面，负责接受用户的输入并负责渲染输出。&lt;/p&gt;
&lt;p&gt;千万不要小看了这个页面，首先，它几乎涵括了 QT Console 具有的全部交互式功能，如代码高亮，自动补全，实时帮助，内嵌显示绘图结果等；其次，计算过程及结果可以方便地保存为多种格式，如默认的 JSON 格式，Python 脚本以及 PDF 等；此外，借助 &lt;a href=&quot;http://wowubuntu.com/markdown/basic.html&quot;&gt;Markdown&lt;/a&gt; 及 &lt;a href=&quot;http://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt;，用户可以在计算过程中插入详尽细致的描述，甚至以描述为主，计算为辅，从而将它当作科技类文章写作的工具。&lt;/p&gt;
&lt;p&gt;正是由于 IPython Notebook 的灵活易用，方便传播等特点，它现已被用于可重复数据分析，课程教学，博客写作等众多领域。当然它还可以应用在更多更广的现实场景中，那些就等着你来探索了。下文就将介绍如何安装及使用 IPyhton Notebook，并以实例来介绍它的强大特性。&lt;/p&gt;
&lt;h2 id=&quot;安装-notebook&quot;&gt;安装 Notebook&lt;/h2&gt;
&lt;p&gt;可以采取以下三种安装方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装某个 Python 发行套件。&lt;/li&gt;
&lt;li&gt;采用系统的包管理程序安装。&lt;/li&gt;
&lt;li&gt;从源代码编译安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐选用某个 Python 发行套件，比如 &lt;a href=&quot;https://www.enthought.com/&quot;&gt;Enthough Python Distribution (EPD)&lt;/a&gt; 或 &lt;a href=&quot;https://code.google.com/p/pythonxy/&quot;&gt;Python(x,y)&lt;/a&gt;。这些发行套件中都包含了常用的 Python 科学计算库，如 Numpy，Scipy，IPython，Matplotlib，Pandas 等，而且都是一键安装，非常方便快捷，省去了从源码安装的众多烦恼。下面介绍在 Linux 下安装 EPD。&lt;/p&gt;
&lt;p&gt;从 EPD &lt;a href=&quot;http://www.enthought.com/products/getepd.php&quot;&gt;网站&lt;/a&gt;下载免费版或学术版&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;，之后运行下载好的文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash ped-7.3.2-rh5-x86_64.sh -p /path/to/your/install_dir&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一路回车即可。&lt;/p&gt;
&lt;p&gt;安装完成后，须将 EPD 的 bin 目录添加至环境变量 PATH 中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PATH=/path/to/epd/bin:$PATH
export PATH&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果不想安装套件，可以用系统自带的管理程序单独安装 IPython，比如在 Arch 下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pacman -S ipython&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;除以上两种方法，还可以选择从源代码安装，但此方案比较复杂，需要考虑 IPython 的复杂依赖关系，如 Numpy，Scipy，Qt 等。这条方案需慎重选择，因为光是 Numpy，Scipy 的安装就会让人焦头烂额&lt;a href=&quot;#fn2&quot; class=&quot;footnoteRef&quot; id=&quot;fnref2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;使用-notebook&quot;&gt;使用 Notebook&lt;/h2&gt;
&lt;p&gt;根据 IPython Notebook 服务端所在位置，可分为本地运行和远程运行两种情景。&lt;/p&gt;
&lt;h3 id=&quot;本地运行&quot;&gt;本地运行&lt;/h3&gt;
&lt;p&gt;此种情形下，数据和计算资源均在本地机器上，需要首先在本地安装好 IPython，之后运行服务端：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ipython notebook&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或直接进入 pylab 模式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ipython notebook --pylab&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果想将 Matplotlib 生成的图片潜入网页内显示，则使用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ipython notebook --pylab inline&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上面的命令会在本机开启 IPython Notebook 服务端，并在系统默认浏览器内打开一个指向服务端的页面，该页面显示了所有保存的 Notebook。如需新建 Notebook，可以点击 &lt;code&gt;New Notebook&lt;/code&gt; 按钮，或着将本地的文件直接拖入空白处，其中该文件即可以是编写好的 Python 程序文件 (.py)，也可以是之前运行过的 Notebook 文件 (.ipynb)。&lt;/p&gt;
&lt;p&gt;在新打开的 Notebook 页面中，就可以进行各项交互式计算任务。Notebook 由一个个的执行单元组成，每个单元可以是一段 Python 代码，也可以是一段描述性文本，这些文本可以使用 Markdown 语法，也可以插入 &lt;span class=&quot;math inline&quot;&gt;\(LaTeX\)&lt;/span&gt; 表达式，或者直接使用 HTML。在单元上可以方便地进行删除，复制，粘贴，剪切，插入，分割，合并等操作。&lt;/p&gt;
&lt;p&gt;单元需要被运行才能产生实际的运算，其中代码单元内的语句被输入服务端内的 kernerl 进行运算，并从 kernel 内获得输出结果显示在单元内，文本单元则通过 Markdown 渲染器渲染成相应的网页格式展现 (如图1)。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;/assets/images/ipynb.png&quot; alt=&quot;图1: 一段 Notebook 的运行结果&quot; /&gt;&lt;figcaption&gt;图1: 一段 Notebook 的运行结果&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;在进行了一系列计算操作之后，会希望将当前的工作保存，这时可以选择 &lt;code&gt;Save&lt;/code&gt; 或者 &lt;code&gt;Download&lt;/code&gt;，它们都可以按 .ipynb 或 .py 格式保存 Notebook。其中 &lt;code&gt;Save&lt;/code&gt; 默认为 .ipynb 格式，如果希望将其改为 Python 可执行的 .py 格式, 可以在启动时加入 &lt;code&gt;--script&lt;/code&gt; 后缀：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ipython notebook --script&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Save&lt;/code&gt; 和 &lt;code&gt;Download&lt;/code&gt; 的不同在于 &lt;code&gt;Save&lt;/code&gt; 将文件存储在服务端所在的存储位置，而 &lt;code&gt;Download&lt;/code&gt; 则是存储在浏览器所在的存储位置。因此，当服务端运行在远程服务器上时，如果希望将 Notebook 存至本地，应使用 &lt;code&gt;Download&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;此外，还可以按网页或者 PDF 格式将当前的计算过程保存，缺陷是按这种方式进行保存下来的 Notebook 无法重新被载入运行。保存方法为点击 &lt;code&gt;Print View&lt;/code&gt;，这里会打开一个当前 Notebook 的纯网页版本，这时可以将其又键另存为网页保存，或者打印成 PDF 文件。&lt;/p&gt;
&lt;h3 id=&quot;远程运行&quot;&gt;远程运行&lt;/h3&gt;
&lt;p&gt;上文已提到多次可以将服务端放置远程服务器运行，这样有多个好处：一是可以不受物理空间的限制，在任何可以连接到服务器的场所办公，二是在客户端无需安装任何计算相关的软件，只需一个浏览器即可，三是可以利用服务器高效庞大的计算资源，实现高性能计算。&lt;/p&gt;
&lt;p&gt;IPython Notebook 可以方便地部署在似有服务器或流行的云计算平台 (如 &lt;a href=&quot;http://aws.amazon.com/ec2/&quot;&gt;Amazon EC2&lt;/a&gt;, &lt;a href=&quot;http://www.windowsazure.com/en-us/&quot;&gt;Windowns Azure&lt;/a&gt;) 上，下面以私有服务器为例，介绍如何与远程服务器实现交互计算。&lt;/p&gt;
&lt;p&gt;首先创建一个名为 &lt;code&gt;nbserver&lt;/code&gt; 的配置文件 &lt;a href=&quot;#fn3&quot; class=&quot;footnoteRef&quot; id=&quot;fnref3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ipython profile create nbserver&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置登陆密码：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;IN [&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]: &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; IPython.lib &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; passwd
IN [&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]: passwd()
Enter password:
Verify password:
Out[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]: &lt;span class=&quot;st&quot;&gt;&amp;#39;sha1:xxxxxxxxxxxxxxxxxxxxxxxxx&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建私人证书：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl req -x509 -nodes -days 10000 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进入 &lt;code&gt;nbserver&lt;/code&gt; 配置文件所在目录 &lt;a href=&quot;#fn4&quot; class=&quot;footnoteRef&quot; id=&quot;fnref4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; 并打开 &lt;code&gt;ipython_notebook_config.py&lt;/code&gt;，设置以下属性：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;c &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; get_config()

c.IPKernerlApp.pylab &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;inline&amp;#39;&lt;/span&gt;
c.NotebookApp.ip &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;
c.NotebookApp.open_browser &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;False&lt;/span&gt;
c.NotebookApp.password &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;u&amp;#39;sha1:xxxx your hashed password&amp;#39;&lt;/span&gt;
c.Notebook.App.port &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;9999&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;#可设为其他端口&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为使 Notebook 正常工作，需在防火墙中打开上面设置的端口。可以编辑 &lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt;，在最后一条 &lt;code&gt;REJECT&lt;/code&gt; 语句前加入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 9999 -j ACCEPT
-A OUTPUT -m state --state NEW -m tcp -p tcp --dport 9999 -j ACCEPT&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用下面这条命令运行服务端：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ipython notebook --profile=nbserver --certfile=/path/to/your/mycert.pem&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在本地计算机中打开浏览器，输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://ip/of/your/server:9999&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;即可打开客户端。&lt;/p&gt;
&lt;p&gt;关于如何在 Amazon EC2 上搭建 IPython Notebook，可利用 &lt;a href=&quot;http://star.mit.edu/cluster/docs/latest/index.html&quot;&gt;StarCluster&lt;/a&gt; 提供的插件，或者 &lt;a href=&quot;https://notebookcloud.appspot.com/&quot;&gt;NotebookCloud&lt;/a&gt;，详情请分别参考&lt;a href=&quot;#相关链接&quot;&gt;相关链接3和4&lt;/a&gt;。此外，Windows Azure 官方也提供了一个在 Azure 上搭建 Notebook 的教程，见&lt;a href=&quot;#相关链接&quot;&gt;相关链接5&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;共享与应用&quot;&gt;共享与应用&lt;/h2&gt;
&lt;p&gt;使用 IPython Notebook 自定义的 .ipynb 文件可以方便地将自己的计算过程与他人共享，但是必须要求对方也装有 IPython Notebook 才能查看。为了突破这一限制，IPython 官方建立了 &lt;a href=&quot;http://nbviewer.ipython.org&quot;&gt;IPython Notebook Viewer&lt;/a&gt; 网站，帮助在线渲染 .ipynb 文件。&lt;/p&gt;
&lt;h3 id=&quot;用-ipython-notebook-写博客&quot;&gt;用 IPython Notebook 写博客&lt;/h3&gt;
&lt;p&gt;借助于 Ipython Notebook Viewer 提供的服务，只需下面一行代码，即可在博客中嵌入显示 Notebook：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe src=&amp;quot;http://nbviewer.ipython.org/gist number/&amp;quot; width=&amp;quot;700&amp;quot; height=&amp;quot;400&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不足之处是需要手工设置宽度与高度以符合页面大小。下面是我编写的有关 Numpy 数组维度操作的一个 Notebook &lt;a href=&quot;#fn5&quot; class=&quot;footnoteRef&quot; id=&quot;fnref5&quot;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;iframe src=&quot;http://nbviewer.ipython.org/4640808/&quot; width=&quot;700&quot; height=&quot;400&quot;&gt;
&lt;/iframe&gt;
&lt;p&gt;如果对嵌入式的显示方法不满，可以利用 &lt;a href=&quot;https://github.com/ipython/nbconvert&quot;&gt;nbconvert&lt;/a&gt; 工具将 .ipynb 文件转换成 html 或 Markdown 格式，再放入网页中，详细过程请参考&lt;a href=&quot;#相关链接&quot;&gt;相关链接6&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;在教学科研中的应用&quot;&gt;在教学科研中的应用&lt;/h3&gt;
&lt;p&gt;由于 IPython Notebook 的友好易用，已有&lt;a href=&quot;http://software-carpentry.org/blog/2012/10/transitioning-to-the-ipython-notebook.html&quot;&gt;公司&lt;/a&gt;将其作为教授 Python 编程的新平台，更有&lt;a href=&quot;http://ivory.idyll.org&quot;&gt;教授&lt;/a&gt;将其作为数据分析课程的课程平台，用它分发，收取作业，取得了不错的效果 (见&lt;a href=&quot;#相关链接&quot;&gt;相关链接7&lt;/a&gt;)。&lt;/p&gt;
&lt;p&gt;此外，IPython Notebook 对长久以来困扰科研界的计算结果可重复问题也有所帮助，试想如果研究者被要求将其完整的计算过程以 Notebook 的方式公开出来，结果造假或操控数据的可能性必将大大减小。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;IPython Notebook 的出现，弥补了传统命令行式计算平台的诸多不足，增强了交互式数据分析的用户体验，为交互计算提供了一全新的实践模式。此外，它所定义的一套计算记录格式大大方便了计算过程的传播与共享，借助于新兴的网页技术更是可以展示多样化的副文本内容，成为连接数据分析与先进网页技术的重要桥梁。由于以上诸多优点，它已被应用与科研与教学等众多现实场景中，再加上背后活跃开发社区的支持，它必定会在新时代下的交互计算领域崭露一片头角。&lt;/p&gt;
&lt;h2 id=&quot;相关链接&quot;&gt;相关链接&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a href=&quot;http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html&quot;&gt;An HTML Notebook IPython&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.6.n6.nabble.com/IPython-User-Help-troubleshooting-notebook-as-public-server-td3289467.html&quot;&gt;[IPython-User] Help troubleshooting notebook as public server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://star.mit.edu/cluster/docs/latest/plugins/ipython.html#using-the-ipython-html-notebook&quot;&gt;IPython Cluster Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://notebookcloud.appspot.com/docs&quot;&gt;NotebookCloud Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.windowsazure.com/en-us/develop/python/tutorials/ipython-notebook/&quot;&gt;IPython Notebook on Windows Azure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.fperez.org/2012/09/blogging-with-ipython-notebook.html&quot;&gt;Blogging with the IPython notebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ivory.idyll.org/blog/teaching-with-ipynb-2.html&quot;&gt;Teaching with ipython notebooks – a progress report&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;学术版可通过以 .edu 为后缀的邮箱地址申请。&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn2&quot;&gt;&lt;p&gt;可参考我一年前写的文章:&lt;a href=&quot;http://www.douban.com/note/203828349/&quot;&gt;在 fedora 15 下从源代码安装 numpy 与 scipy&lt;/a&gt;。&lt;a href=&quot;#fnref2&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn3&quot;&gt;&lt;p&gt;除特殊说明，以下操作均在服务器端进行&lt;a href=&quot;#fnref3&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn4&quot;&gt;&lt;p&gt;~/.config/ipython/profile_nbserver 或 ~/.ipython/profile_nbserver&lt;a href=&quot;#fnref4&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn5&quot;&gt;&lt;p&gt;更多有关 Numpy 的技巧可参见我的&lt;a href=&quot;/notes/python.html&quot;&gt;技术笔记&lt;/a&gt;&lt;a href=&quot;#fnref5&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>你像杰基·肯尼迪一样走过</title>
   <link href="http://mindonmind.github.io/2012/12/21/you-walk-away-like-jackie-kennedy"/>
   <updated>2012-12-21T18:48:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2012/12/21/you-walk-away-like-jackie-kennedy</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;幸好我们&lt;br/&gt; 没有笑，&lt;br/&gt; 而是傲慢地&lt;br/&gt; 叉开视线&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;要多少次&lt;br/&gt; 走过灰色的墙，&lt;br/&gt; 才能等到别的&lt;br/&gt; 眼睛，一起&lt;br/&gt; 压住肩膀&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;我多想学你&lt;br/&gt; 把胳膊，头发&lt;br/&gt; 甩在身边&lt;br/&gt; 不远的地方&lt;br/&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>夜晚</title>
   <link href="http://mindonmind.github.io/2012/12/07/night"/>
   <updated>2012-12-07T10:42:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2012/12/07/night</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;你的笑值得八百条短信&lt;br/&gt; 你的泪值得一千颗星星&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;失眠的夜晚&lt;br/&gt; 我坐在其中的一颗&lt;br/&gt; 数剩下的九百九十九种心情&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;有时我也去其他星上坐坐&lt;br/&gt; 于是我走过了&lt;br/&gt; 孤独，冒犯，空虚，逃避&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;我面向东，把孤单的星星排成L&lt;br/&gt; 我面朝南，把愤懑的星星排成O&lt;br/&gt; 再转向西，把迷路的星星排成V&lt;br/&gt; 最难是北，把隐藏的星星排成E&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;我叹了口气&lt;br/&gt; 摘下一颗一颗蓝星星&lt;br/&gt; 放进嘴巴里&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;原来&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;孤独的原料是渴望&lt;br/&gt; 冒犯的夹心是着迷&lt;br/&gt; 空虚里能嚼出香草&lt;br/&gt; 逃避的终点是热情&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;没有星星的天空&lt;br/&gt; 一片漆黑&lt;br/&gt; 只有我的嘴巴是亮的&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;我弯下腰&lt;br/&gt; 用发光的嘴唇&lt;br/&gt; 吻吻了我坐着的这颗D星&lt;br/&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>说说话</title>
   <link href="http://mindonmind.github.io/2012/12/01/talk-talk-talk"/>
   <updated>2012-12-01T02:23:00-05:00</updated>
   <id>hhttp://mindonmind.github.io/2012/12/01/talk-talk-talk</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;我和小涵认识有两个月了。&lt;/p&gt;
&lt;p&gt;我还记得和她第一次说话时的情景。那晚我陪她走回宿舍，还没说上几句，她突然摇晃着上身，左一下、右一下往上提了提袖子，整套动作看上去活泼又羞涩。那次她的口音朴实干净，没有女孩的娇嗔，也听不出亲近或疏远，只是老老实实地传达主人的语义。当别人都忙着往自己的声音里惨入习语情绪还有个人标记时，她的声音显得平实原始，让我联想到北方的城镇。&lt;/p&gt;
&lt;p&gt;我告诉她，你的声音里有一种跳跃的东西。比如她在句尾使用的「噢」，就像一只被注视太久的灰喜鹊，在她使劲点头的暗号下突然蹬腿起飞。最近几天她看上去特别像个小孩子，想想其实那时她就露出了这些孩子的特征：乐呵呵的举动总藏不住内心的期待和紧张。但不知是因为我习惯了她的声线，还是她适应了和我对话，后来她声音里的粗糙渐渐消失了，跃动却一直留了下来。&lt;/p&gt;
&lt;p&gt;我们讲话最多的时候，是我们吵架的时候。初次吵架发生在一个月前的某个周一。之后一周的星期三，我们第二次吵架，几乎要就此终结。度过一个难得平安的礼拜后，我们在下个周一再次争吵。当前这周我们延续了优良传统，又痛快地闹了一次别扭，日子还是周一。让人欣慰的是，我们的每次不和，都没能跨过24小时这个难关，且越来越有下午吵架，晚上和好的趋势。&lt;/p&gt;
&lt;p&gt;我们讲话最少的时候，是我们无法说话的时候。《乱世佳人》里的一句台词曾让我惶恐了很久，它说：「你应该被吻，常常被吻，并且要被知道怎样接吻的人吻。」 这让我想起几年前观摩过的一段教育视频，以及它列出来的一条禁忌。我的脑袋大概已为这条规则训练出了一条反射弧，以至现在每当我闭上眼或动下舌，脑海里总会冒出一行醒目的大字：不要撞击对方的舌头根部。比这更有趣的事情发生在我和小涵之间。我们在一颗星星的启发下发明了一个游戏，并为它起了一个充满情色味道的名字，此外我无法再透露更多情节。&lt;/p&gt;
&lt;p&gt;今天很冷，我希望天还能再冷些，这样才有北京冬天的特点，那就是当你在室外，会特别惦记室内的温暖，而一旦来到室内，就真的暖活了。就像我和小涵，一旦面对面看着对方，就真的不会吵架了。&lt;/p&gt;
&lt;p&gt;不论说不说话，和小涵在一起，我很开心。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>你怎样走出困境</title>
   <link href="http://mindonmind.github.io/2012/10/31/how-you-get-unstuck"/>
   <updated>2012-10-31T22:31:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/10/31/how-you-get-unstuck</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;亲爱的 Sugar，&lt;/p&gt;
&lt;p&gt;大约十八个月前，我怀孕了。让我和我男友都吃惊的是，我们决定留住这个孩子。尽管我们并未打算怀孕，我们仍为将要成为父母而激动不已。我们非常热爱并渴望得到这个孩子。但当我怀孕六个半月后，我流产了。自从那时起，我便努力想从自己的床里走出来。&lt;/p&gt;
&lt;p&gt;没有哪一天我不在想她会是怎样的一个孩子。她是个女孩。她有自己的名字。每一天醒来，我想着「我的女儿会有六个月大了」或「我女儿今天能开始爬了。」 而有些时候，我只能一遍又一遍地想着「女儿」这个词。&lt;/p&gt;
&lt;p&gt;当然还有，仿佛我周围的每个人都在拥有一个孩子，我去任何一个地方满眼见到的也是小孩，所以我必须强迫自己为他们感到高兴，并吞下自己的空虚。事实上，我无法再感受其他的事情，每件事都会伤害到我。我生活中的大多数人都期望我能从现在起摆脱自己的悲痛。其中一位向我指出，「那只不过是一次流产。」 因此我又开始为自己如此受困，为一个不该出生的孩子而伤痛却无法自拔感到内疚。&lt;/p&gt;
&lt;p&gt;我不再过多地谈论此事。我假装它从未发生过。我去工作，出去闲逛，面带微笑并表现得好像每件事都很正常。我的男友一向很好并在支持着我。但我认为他并不能理解我现在过得有多么糟糕。他想我们结婚并再要一个小孩。他认为这样做能让我高兴。但这没有。这让我想要揍他的脑门，为他无体会我的感受。&lt;/p&gt;
&lt;p&gt;后来我知道了流产的原因。在医院里，医生说我流产一点都没有让他吃惊，因为我的怀孕一直处于危险状态，因为我体重超标。听到流产是我的错真不是一件容易接受的事情。部分的我认为医生是一个混蛋，但另一部分的我认为或许他是正确的。得知这些是我自己的错，全因为我自己才带来流产快要杀了我自己。有时我甚至无法呼吸，我感到如此愧疚。离开医院后，我找了一名私人教练，并开始控制饮食和减肥，但现在的我完全失去控制了。有时，我好几天都不进食，而有时我吞下能见到的任何食物再把它们全吐出来。我在健身房待上数个小时，在跑步机上走到自己再也无法抬起双腿。&lt;/p&gt;
&lt;p&gt;我的朋友和家人认为我一切正常，Sugar，但没有什么能比这更加远离事实。所有我能考虑的只有我是如何把事情搞杂。每件事都好像超出了我能应付的范围。我理性的那部分知道，如果我不把自己从中拉出来，我将重重地伤害我自己。我知道这些，但我就是不在乎。&lt;/p&gt;
&lt;p&gt;我想知道怎样重新在乎起来。我想知道怎样才能不感到如此内疚，怎样才能不再觉得是我害死了自己的孩子。&lt;/p&gt;
&lt;p&gt;我的女儿，她有一个名字。她被人爱着。我感觉自己是唯一在乎她的人。而哀悼着「这只不过是一次流产」近一年时间让我觉得糟糕透顶。我被困住了。&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;
最好的祝愿，&lt;br/&gt; Stuck
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;译自「Tiny Beautiful Things」19-20 页。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>Arch Linux 折腾后记：双屏显示器</title>
   <link href="http://mindonmind.github.io/2012/09/30/arch-notes-again"/>
   <updated>2012-09-30T22:30:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/09/30/arch-notes-again</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;style type=&quot;text/css&quot;&gt;
div.sourceCode { overflow-x: auto; }
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code &gt; span.kw { color: #007020; font-weight: bold; } /* Keyword */
code &gt; span.dt { color: #902000; } /* DataType */
code &gt; span.dv { color: #40a070; } /* DecVal */
code &gt; span.bn { color: #40a070; } /* BaseN */
code &gt; span.fl { color: #40a070; } /* Float */
code &gt; span.ch { color: #4070a0; } /* Char */
code &gt; span.st { color: #4070a0; } /* String */
code &gt; span.co { color: #60a0b0; font-style: italic; } /* Comment */
code &gt; span.ot { color: #007020; } /* Other */
code &gt; span.al { color: #ff0000; font-weight: bold; } /* Alert */
code &gt; span.fu { color: #06287e; } /* Function */
code &gt; span.er { color: #ff0000; font-weight: bold; } /* Error */
code &gt; span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
code &gt; span.cn { color: #880000; } /* Constant */
code &gt; span.sc { color: #4070a0; } /* SpecialChar */
code &gt; span.vs { color: #4070a0; } /* VerbatimString */
code &gt; span.ss { color: #bb6688; } /* SpecialString */
code &gt; span.im { } /* Import */
code &gt; span.va { color: #19177c; } /* Variable */
code &gt; span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
code &gt; span.op { color: #666666; } /* Operator */
code &gt; span.bu { } /* BuiltIn */
code &gt; span.ex { } /* Extension */
code &gt; span.pp { color: #bc7a00; } /* Preprocessor */
code &gt; span.at { color: #7d9029; } /* Attribute */
code &gt; span.do { color: #ba2121; font-style: italic; } /* Documentation */
code &gt; span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
code &gt; span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
code &gt; span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;几天前，实验室来了一批新显示器，这样，我的显示空间在原先的 593mm x 371mm 基础上又增加了 376mm x 301mm。按理说，这是一件好事，因为可以在新增的小号显示器上做一些隐秘的事情。只是 Linux 总会抓住一切可能的机会考验你一把，这种幸福的烦恼更是不容错过了。&lt;/p&gt;
&lt;p&gt;整个风波的始终如下：&lt;/p&gt;
&lt;p&gt;新机器的 ATI 显卡配置了两个输出端口，一个为 DisplayPort， 一个为 DVI。而现有的两台显示器，一个有 HDMI 输入口，另一个有 VGA 输入口。这样，利用一条 DisplayPort 转 HDMI 的转接线及一个 DVI 转 VGA 转接口，两台显示器便应该可以正常工作了。可实际情况是，接受 DisplayPort 输出的大屏显示器工作得很好，而 DVI 的那个却不停地闪屏。&lt;/p&gt;
&lt;p&gt;因为双屏在安装了 ATI 私有驱动 Catalyst 的 Windows 下可以正常工作，所以觉得在 Arch 下安好 Catalyst 驱动应该就能解决问题。根据官方的 &lt;a href=&quot;https://wiki.archlinux.org/index.php/ATI_Catalyst&quot;&gt;Wiki&lt;/a&gt; ，摸索出来的驱动过程安装如下。&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;添加非官方 Catalyst 源。将下面的几行添加至 &lt;code&gt;/etc/pacman.conf&lt;/code&gt; 里面位于 [core] 和 [extra] 之前。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;[&lt;span class=&quot;kw&quot;&gt;catalyst&lt;/span&gt;]
&lt;span class=&quot;kw&quot;&gt;Server&lt;/span&gt; = http://catalyst.apocalypsus.net/repo/catalyst/&lt;span class=&quot;ot&quot;&gt;$arch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot; type=&quot;1&quot;&gt;
&lt;li&gt;更新整个系统。这一步非常重要！不然后面编译驱动模块时会很麻烦。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;pacman&lt;/span&gt; -Syu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot; type=&quot;1&quot;&gt;
&lt;li&gt;安装 catalyst 相关软件包。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;pacman&lt;/span&gt; -S catalyst-generator catalyst-util lib32-catalyst-utils&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;4&quot; type=&quot;1&quot;&gt;
&lt;li&gt;编译内核模块。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;catalyst_build_module&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;5&quot; type=&quot;1&quot;&gt;
&lt;li&gt;这个时候千万不能重启系统，还需生成初 Xorg 的配置文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;aticonfig&lt;/span&gt; --initial or aticonfig --initial=dual-head&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;6&quot; type=&quot;1&quot;&gt;
&lt;li&gt;修改内核启动参数。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;/etc/default/grub&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;-----------------&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;GRUB_CMDLINE_LINUX=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;nomodeset&amp;quot;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;grub-mkconfig&lt;/span&gt; -o /boot/grub/grub.cfg&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;7&quot; type=&quot;1&quot;&gt;
&lt;li&gt;重启吧，剩下的交给 amdcccle 来处理。最后需要注意的就是 amdcccle 生成的 Xorg.conf 文件放在 /etc/X11 里，最好将其重命名为 20-monitor.conf 后放置 /etc/X11/Xorg.conf.d/ 中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;配置完后，双屏果然可以正常显示。就这样，我打开 xscreenvasor，痛痛快快地游泳去了。结果游了一小时回来后，就发现悲剧了。屏幕僵在了一个画面上，鼠标键盘全无反应，最后只好硬关机，重启，看着那台新 Optiplex 受此委屈，真让人心疼啊。&lt;/p&gt;
&lt;p&gt;上网查了查，发现是 Xorg 挂了，据传是 ATI Catalyst 固有的一个问题。试了一个解决方案，发现还是会死机。最后忍无可忍，下狠心删了 Catalyst 重新安装开源驱动，决定再难也要跨过 Xorg.conf 配置这一关。&lt;/p&gt;
&lt;p&gt;查了一些 Xorg 的设置资料，但不管是利用 Xorg.conf 还是 xrandr，都没法解决闪屏的问题。期间试了无数屏幕刷新率，均于事无补。实在没办法，另找一个显示器插上，发现还是会闪屏。之前一直觉得问题出在 Xorg 的配置，最后突然想到，会不会是两个接口出了问题。上网一搜，果然有人提到说 DisplayPort 接口加 DVI 转 VGA 接口会导致 VGA 显示器闪屏，而这个问题也没有什么好的解决方案。卸下转接头，直接用 DVI 接口接 DVI 显示器后，屏幕立刻就不闪了。之后只要在 .xinitrc 中加入以下命令就能顺利双屏啦：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xrandr --output DVI-0 --auto --pos 0x0 --output DisplayPort-0 --auto --right-of DVI-0&lt;/code&gt;&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>原谅世界，原谅自己</title>
   <link href="http://mindonmind.github.io/2012/09/23/forgive-this-world"/>
   <updated>2012-09-23T23:20:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/09/23/forgive-this-world</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;9月9号，纽约时报焦虑专栏发表了一篇名为「On Being Nothins」的散文。文中，作者 &lt;a href=&quot;http://www.brianjaystanley.com/aphorisms/&quot;&gt;Brian Jay Stanley&lt;/a&gt; 夹叙夹议，讲述了自己从渴望得到关注，到无法得到关注而导致压抑与痛苦，再到接受现实，成为这个世界的关注者的艰难历程。文章极具启发性，下面为其最后两段，也是个人认为最精彩的部分。&lt;/p&gt;
&lt;div class=&quot;floating-right&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://www.brianjaystanley.com/about/author-photo.jpg&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Society is adroid at disillusioning newcomers, and many self-assured children grow up to be bitter adults. But bitterness, instead of a form of disillusionment, is really the refusal to give up your childhood illusions of importance. Ignored instead of welcomed by the world, you fault the world as blind and evil in order not to fault yourself as naive. Bitterness is a child’s coddling narcissism within the context of an adult’s harsh life. Instead, I know that the world only tramples me as a street crowd does an earthworm - not out of malice or stupidity, but because no one sees it. Thus my pain is not to feel wrongly slighted, but to feel rightly slighted.&lt;/p&gt;
&lt;p&gt;There must be a Copernical revolution of the self. Instead of pointlessly cursing the sun to go around me, my chance of contentment is learning to orbit, being the world’s audience instead of demanding the world to be mine. If the world is a stage, then everyone’s an extra, acting minor roles in simutaneous scenes in which no one has the lead. With so much happening, society is poorly made to satisfy pride, but well made to stisfy intrest. If we will only let go of our vanity and join the swirl of activity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大概是好久没读到过这么喜欢的散文了，读完之后思绪万千，并写了一篇读后感如下，顺便充当了四天的写作作业 :-)&lt;/p&gt;
&lt;h2 id=&quot;forgive-this-world&quot;&gt;Forgive This World&lt;/h2&gt;
&lt;p&gt;At times, I’m confused by this world, by how it could be so cruel and relentless, apathetically watching me suffering from those overwhelming, unbearable negative emotions. Why couldn’t it listen to me a little bit, and take my sorrow and regret and shame carefully. No matter how I beg or curse, the course has never changed - I have to swallow all my pain and digest it even more painfully. The only good thing is that in the end, I’ll definitely recover and accidentally become stronger. So I think, pain itself may be not so bad.&lt;/p&gt;
&lt;p&gt;The author began this article with his habit which may be shared by many other people: checking mailbox with excitement. This habit is carried from his camp years, but its meaning has changed significantly. Mails used to be placebos that assured the author that he was not forgotten by this world, but now those mails only add to his depression.&lt;/p&gt;
&lt;p&gt;The cause behind this transition is that the aims of these mails have changed. There are no warm greetings any more, nor lovely concerns. But only requests for money, attention, and taxes, etc. This makes the author feel that he is nothing but “a pawn of others’ projects”. Nevertheless, the author didn’t blame other people for their demands upon him, for himself is just like others, selfish, desirous, and avid, of whom made up this cruel world.&lt;/p&gt;
&lt;p&gt;The author further analyzed people’s craving for other people’s notice and recognition. This desire seems to be attached to ourselves since we were born and won’t ever be detached unless we are dead.&lt;/p&gt;
&lt;p&gt;The popularity of contemporary social websites or applications is a perfect demonstration. No matter it’s that we find something interesting, or that we attain success, or that we screwed up, rises in our mind or heart a strong tendency to disclose ourselves to other people, along with the wispy hope that we could be applauded, understood, or just responded by them. It seems that we are partial feedback systems eager for other people’s response to make ourselves intact.&lt;/p&gt;
&lt;p&gt;But rationally speaking, this kind of desire actually makes little difference. After all, we are what we see, what we think, what we do, all by the hand of our own minds. Unless our minds are born to be inadequate, and outside forces helping confirm their existence are just like daily necessities.&lt;/p&gt;
&lt;p&gt;When we were young, these necessities were easy to obtain. We get them from our parents, teachers and peers. That made us feel that we were the center of this world, in which every action of ours were noticed by other people.&lt;/p&gt;
&lt;p&gt;But the good old days soon passed away. When we went to college, we were soon disappointed by the grim reality - that we lost our audience. No matter how many friends we made, how many parties we went, we couldn’t run away from the fact that we actually became more and more introvert. Be cared about by others seemed a impossible dream, not to say be truly understood. I remember walking along the cold lonely campus road, hoping someone willing to listen to me. But there were nobody but the trees, to which I whispered so many my thoughts and emotions. What hurt me was not there seemed no one could understand me, but they didn’t bother to. What I thought and felt was just not worthy to make a fuss of. I felt totally ignored by the world. To avoid admitting that I was insignificant, I began to blame the outside world for its coldness and cruelty.&lt;/p&gt;
&lt;p&gt;Unable to seek attention from the outside of the world, we often in turn to seek from the opposite direction. It’s not rare to see many people going through things related to themselves over and over again. We childishly think that by doing this we could fill in the vacancy of attention. Nevertheless, no matter where the attention comes from, the desire for more attention could hardly be satisfied.&lt;/p&gt;
&lt;p&gt;This world gives no more attention upon us than upon a leaf or cat. That doesn’t mean the world is evil, it’s our naiveness to take for granted that we should be more important than a leaf or cat. To live peacefully, we have to accept the fact that actually, we are nothing more than an ordinary element of the universe, just like every other living or lifeless substance. And to accept the fact, We have to overcome the coddling narcissism rooted in our mind since we were children. There’s no such thing as good or bad, everything just happens, evolves, comes to an end, and then happens again.&lt;/p&gt;
&lt;p&gt;This world may be cruel for people who are hard-wired to seek for attention, but it’s what it ought to be. To survive with contentment, the best we can do may be forgiving this world, for its parsimony of attention, and then, forgive ourselves, for born to crave this untouchable thing.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>Arch Linux 折腾记</title>
   <link href="http://mindonmind.github.io/2012/09/21/arch-notes"/>
   <updated>2012-09-21T00:02:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/09/21/arch-notes</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;style type=&quot;text/css&quot;&gt;
div.sourceCode { overflow-x: auto; }
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code &gt; span.kw { color: #007020; font-weight: bold; } /* Keyword */
code &gt; span.dt { color: #902000; } /* DataType */
code &gt; span.dv { color: #40a070; } /* DecVal */
code &gt; span.bn { color: #40a070; } /* BaseN */
code &gt; span.fl { color: #40a070; } /* Float */
code &gt; span.ch { color: #4070a0; } /* Char */
code &gt; span.st { color: #4070a0; } /* String */
code &gt; span.co { color: #60a0b0; font-style: italic; } /* Comment */
code &gt; span.ot { color: #007020; } /* Other */
code &gt; span.al { color: #ff0000; font-weight: bold; } /* Alert */
code &gt; span.fu { color: #06287e; } /* Function */
code &gt; span.er { color: #ff0000; font-weight: bold; } /* Error */
code &gt; span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
code &gt; span.cn { color: #880000; } /* Constant */
code &gt; span.sc { color: #4070a0; } /* SpecialChar */
code &gt; span.vs { color: #4070a0; } /* VerbatimString */
code &gt; span.ss { color: #bb6688; } /* SpecialString */
code &gt; span.im { } /* Import */
code &gt; span.va { color: #19177c; } /* Variable */
code &gt; span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
code &gt; span.op { color: #666666; } /* Operator */
code &gt; span.bu { } /* BuiltIn */
code &gt; span.ex { } /* Extension */
code &gt; span.pp { color: #bc7a00; } /* Preprocessor */
code &gt; span.at { color: #7d9029; } /* Attribute */
code &gt; span.do { color: #ba2121; font-style: italic; } /* Documentation */
code &gt; span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
code &gt; span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
code &gt; span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;还记得不久前看到一个博主说自己在某天「破天荒」地写了两篇日志，没想到这事这么快就临到了自己头上。&lt;/p&gt;
&lt;p&gt;时间宝贵，不容浪费，所以还是直接切入主题吧。&lt;/p&gt;
&lt;p&gt;趁着老板给大家升级机器的良机，本人终于尝了一口火到爆的 Arch 之滋味。其中真是有苦有甜有刺激，为了下次再尝时少走几步弯路，也为给那些怀揣 Arch 夙愿的 Linux 同仁做点心理准备，特将此次的折腾全过程记录如下。&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;p&gt;老老实实地按着 &lt;a href=&quot;https://wiki.archlinux.org/index.php/Beginners%27_Guide&quot;&gt;Beginner’s Guide&lt;/a&gt; 一步步配好基本系统&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装配置 Awesome 桌面管理器。直接利用 .xinitrc 脚本启动，此外设置自动登录&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;.bash_profile&lt;/span&gt;:
&lt;span class=&quot;kw&quot;&gt;--------------&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;vt=$(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;fgconsole&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;2&amp;gt;&lt;/span&gt;/dev/null&lt;span class=&quot;ot&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;((&lt;/span&gt; vt == 1 &lt;span class=&quot;kw&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;startx&lt;/span&gt; -- vt7 &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;gt;&lt;/span&gt; ~/.xlog
&lt;span class=&quot;kw&quot;&gt;unset&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;vt&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;/etc&lt;/span&gt;/inittab:
&lt;span class=&quot;kw&quot;&gt;-------------&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;:5:initdefault
&lt;span class=&quot;kw&quot;&gt;c1&lt;/span&gt;:2345:respawn:/sbin/agetty -a user -o &lt;span class=&quot;st&quot;&gt;&amp;quot;-- \u&amp;quot;&lt;/span&gt; -8 -s 38400 tty1 linux

&lt;span class=&quot;kw&quot;&gt;.xinitrc&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;--------&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# 关闭系统鸣叫&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;xset&lt;/span&gt; -b
&lt;span class=&quot;co&quot;&gt;# 运行 awesome&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;exec&lt;/span&gt; awesome&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot; type=&quot;1&quot;&gt;
&lt;li&gt;&lt;p&gt;安装 Firefox, 配置好账户同步，Vimpertor 与 Tab Utilities&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装字体：Dejavu, wqy_zenhei, wqy_microhei, bitstream vera. 之后利用文泉驿字体&lt;a href=&quot;http://wenq.org/cloud/fcdesigner.html&quot;&gt;设置工具&lt;/a&gt;配置 ~/.fonts.conf&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 pkgfile (提供包文件查询)，yaourt (方便安装AUR 内的包)，net-tools (提供 ifconfig 等网络设置命令)，wget&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;pacman&lt;/span&gt; -S pkgfile, net-tools, wget

&lt;span class=&quot;kw&quot;&gt;/etc/pacman.conf&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;---------------&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# 添加 yaourt 源&lt;/span&gt;
[&lt;span class=&quot;kw&quot;&gt;archlinuxfr&lt;/span&gt;]
&lt;span class=&quot;kw&quot;&gt;Server&lt;/span&gt; = http://repo.archlinux.fr/&lt;span class=&quot;ot&quot;&gt;$arch&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;pacman&lt;/span&gt; -S yaourt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中 pkgfile 的常用方法为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pkgfile -r &amp;#39;.*ifconfig.*&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;6&quot; type=&quot;1&quot;&gt;
&lt;li&gt;安装小企鹅输入法 fcitx&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;yaourt&lt;/span&gt; -S fcitx-git

&lt;span class=&quot;kw&quot;&gt;.xinitrc&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;--------&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;XMODIFIERS=&lt;/span&gt;@&lt;span class=&quot;ot&quot;&gt;im=&lt;/span&gt;fcitx
&lt;span class=&quot;kw&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;GTK_IM_MODULE=&lt;/span&gt;fcitx
&lt;span class=&quot;kw&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;QT_IM_MODULE=&lt;/span&gt;fcitx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里遇到一个恶心的问题，即当 yaourt 调用 wget 从 googlecode 上下载 fcitx 的 table 文件时，由于众所周知的原因始终没法正常下载，导致编译失败。解决方案在编译失败的间隙想办法手工下好 table 文件，并放入 /tmp 里对应当前 yaourt 的目录中，然后重新编译即可。&lt;/p&gt;
&lt;p&gt;之后将 dbus 添加至系统 Daemons 中&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;/etc/rc.conf&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;DAEMONS=(&lt;/span&gt;... dbus @network ...&lt;span class=&quot;ot&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;7&quot; type=&quot;1&quot;&gt;
&lt;li&gt;&lt;p&gt;安装配置 Urxvt, Vim, Vimperator&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加常用命令别名&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;.bashrc&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;-------&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;alias&lt;/span&gt; ls=&lt;span class=&quot;st&quot;&gt;&amp;#39;ls --color=auto&amp;#39;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;alias&lt;/span&gt; grep=&lt;span class=&quot;st&quot;&gt;&amp;#39;grep --color=auto&amp;#39;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;alias&lt;/span&gt; ll=&lt;span class=&quot;st&quot;&gt;&amp;#39;ls -l&amp;#39;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;alias&lt;/span&gt; vi=&lt;span class=&quot;st&quot;&gt;&amp;#39;vim&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;9&quot; type=&quot;1&quot;&gt;
&lt;li&gt;设置 ls 命令的输出颜色&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;.bashrc&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;-------&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;`dircolors`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;10&quot; type=&quot;1&quot;&gt;
&lt;li&gt;安装 openssh 与自动添加 ssh key&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;pacman&lt;/span&gt; -S openssh keychain

&lt;span class=&quot;kw&quot;&gt;.bashrc&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;-------&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;alias&lt;/span&gt; ssh=&lt;span class=&quot;st&quot;&gt;&amp;#39;eval $(/usr/bin/keychain --eval --agents ssh -Q --quiet ~/.ssh/id_rsa) &amp;amp;&amp;amp; ssh&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;11&quot; type=&quot;1&quot;&gt;
&lt;li&gt;为用户添加关机、重启权限&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;visudo&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;------&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;user&lt;/span&gt; hostname =NOPASSWD: /sbin/shutdown -h now,/sbin/halt,/sbin/poweroff,/sbin/reboot

&lt;span class=&quot;kw&quot;&gt;.bashrc&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;------&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;alias&lt;/span&gt; poweroff=&lt;span class=&quot;st&quot;&gt;&amp;#39;sudo poweroff&amp;#39;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;alias&lt;/span&gt; reboot=&lt;span class=&quot;st&quot;&gt;&amp;#39;sudo reboot&amp;#39;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;alias&lt;/span&gt; halt=&lt;span class=&quot;st&quot;&gt;&amp;#39;sudo halt&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;12&quot; type=&quot;1&quot;&gt;
&lt;li&gt;安装 ntfs-3g ，并设置 ntfs 设备的加载操作&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;pacman&lt;/span&gt; -S ntfs-3g

&lt;span class=&quot;kw&quot;&gt;/etc/fstab&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;----------&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# SATA 盘设置&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;/dev/sda2&lt;/span&gt;       /home/xxxx/ntfs     ntfs-3g     guid=users,uid=xxx,umask=0022   0 0

&lt;span class=&quot;co&quot;&gt;# 移动硬盘设置&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;/dev/disk/by-id/ata-Hitachi_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-part1&lt;/span&gt;  /media/Hitachi  ntfs-3g     noauto,gid=users,uid=xxxx,umask=0022,   0 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置好后，接入移动硬盘时直接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# mount /media/Hitachi&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;即可加载移动硬盘。此外，涉及用户信息时可通过 id 命令查看。&lt;/p&gt;
&lt;ol start=&quot;13&quot; type=&quot;1&quot;&gt;
&lt;li&gt;安装应用程序&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;pacman&lt;/span&gt; -S xscreensaver(锁屏) &lt;span class=&quot;kw&quot;&gt;scrot&lt;/span&gt;(截屏) &lt;span class=&quot;kw&quot;&gt;pidgin&lt;/span&gt;(即时通讯) &lt;span class=&quot;kw&quot;&gt;stardict&lt;/span&gt;(字典) &lt;span class=&quot;kw&quot;&gt;nautilus&lt;/span&gt;(文件管理) &lt;span class=&quot;kw&quot;&gt;flash&lt;/span&gt; libreoffice-writer(字处理) &lt;span class=&quot;kw&quot;&gt;libreoffice-calc&lt;/span&gt;(表格) &lt;span class=&quot;kw&quot;&gt;gwenview&lt;/span&gt;(图片浏览)
&lt;span class=&quot;kw&quot;&gt;yaourt&lt;/span&gt; -S dropbox dropbox-cli dropbox-nautilus&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;14&quot; type=&quot;1&quot;&gt;
&lt;li&gt;修正双系统&lt;a href=&quot;/notes/linux/arch_time.html&quot;&gt;时间问题&lt;/a&gt;与&lt;a href=&quot;/notes/linux/arch_sending_sigterm.html&quot;&gt;关机慢问题&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;下面是待折腾项目，估计近期不会去碰&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;安装配置 AMD Catalyst 显卡驱动&lt;/li&gt;
&lt;li&gt;选一个好看的 Gtk 与 Awesome 主题&lt;/li&gt;
&lt;li&gt;zsh&lt;/li&gt;
&lt;li&gt;mpd&lt;/li&gt;
&lt;/ol&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>他们的蓝色时期</title>
   <link href="http://mindonmind.github.io/2012/09/20/blue-era"/>
   <updated>2012-09-20T21:20:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/09/20/blue-era</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;最近在读赛林格的《九故事》，其中最喜欢的一篇叫《德·杜米埃-史密斯的蓝色时期》。故事讲述了一名青年画家在纽约及蒙特利尔遇到的一些无足轻重的小事，或许只会对那些内心敏感的年轻人才有些微吸引力。而其题目中的「蓝色时期」指毕加索于20岁至24岁期间所处的创作阶段。&lt;/p&gt;
&lt;p&gt;下面为这篇故事中的一些精彩段落：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;事情往往都是过后很久才能看清，不过，幸福与快乐之间唯一的不同就在于幸福是实在的固体而快乐则是一种流体。第二天早上，当靈云先生把两个新学生的邮件放在我桌子上时，我的快乐已开始从它的容器里往外渗漏。&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;我多年来一直深信，当那只老鼠从着了火的旋转轮盘上掉下，一瘸一拐地往家走时，它必定又有了杀死猫的无懈可击的新招。在我一读再读首席嬷嬷的来信并对着它愣了好长时间之后，我突然摆脱开它，给余下那四位学生写起信来，我劝他们别指望当什么艺术家了。我在信中一个一个地对他们说，他们绝对不具备值得发展的才能，他们绝对是在浪费自己的宝贵时间，也是在浪费学校的时间。四封信我都是用法语写的。写完后我立即上街把它们寄了。所带来的满足感是短暂的，但是没有消失时却让人感到非常非常的受用。&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;也就正在此时，我有了那种体验。突然（我说这一点，我相信，是完全具备应有的自我意识的），太阳升起，以每秒九千三百万英里的速度朝我的鼻梁飞来。我什么都看不见，而且惊慌失措——我只得将手按在玻璃上以保持身体平衡。这样的情况只持续了几秒钟。等我视觉恢复，那女子已离开橱窗，只留下一地闪闪发光的精致、显得格外圣洁的瓷漆假花。&lt;/p&gt;
&lt;p&gt;我倒退着离开了橱窗，绕着这个街区走了两圈，直到我双膝不再发软。然后，不敢再冒险往商店橱窗看上一眼了，我上楼进入自己的房间，躺倒在床上。几分钟，也许是几个小时之后，我用法语，在我的日记里记下了下面这短短的几行字：「我要给艾尔玛修女顺自己命运的轨迹而行的自由。全世界的人都是修女。」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>开学小记</title>
   <link href="http://mindonmind.github.io/2012/09/07/new-term-starts"/>
   <updated>2012-09-07T12:55:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/09/07/new-term-starts</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;这几天好忙，搬家，补作文，提取 ROI 信号还有开学的各项杂事，直到昨天为止总算忙得差不多了。仔细一想，这几天都没怎么有时间静下来读点书。而自己只要有一段时间不读书，内心就会躁动起来，没法冷静思考，从而迷失在这风风雨雨的凡尘之中。&lt;/p&gt;
&lt;div class=&quot;floating-left&quot;&gt;
&lt;p&gt;&lt;img class=&quot;span2&quot; src=&quot;http://img3.douban.com/pview/event_poster/raw/public/b00215a61b5240c.jpg&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;其实也没忙到没有一点私人时间，比如1号去看了兵马司五周年汇演，前天中午还溜去沙滩看了企鹅图书封面展。这两个活动都挺不错，它们各自象征了两个能给我带来愉悦的爱好：阅读和音乐。其中阅读能让我安静，音乐则给我激情。但如果偏向一方就会导致心理的营养不良，要么让人过于严肃，要么让人趋于聒噪。所以就需要努力从中找到一个平衡。&lt;/p&gt;
&lt;p&gt;再回想一下过去的这个暑假，&lt;a href=&quot;/2012/07/28/the-last-summer-holiday&quot;&gt;计划&lt;/a&gt;执行得还算完满。证据之一便是现在我用着 Awesome 面对灰色的 urxvt 码下这些絮絮叨叨的琐事。其实这一切全出于偶然。笔记本上的 Gnome 一直运行得不错，虽然偶尔需要重启一下，修改某些功能的配置也几乎是不可能的事，但毕竟满足了大多数桌面工作的需求。直到快开学的某天，我突然想换一个桌面背景，结果桌面连着顶部的面板就从此消失了。尝试了一些修复的措施，全都没能挽回 Gnome 对我的一丝怜悯，它照旧以一屏冷酷的蓝色将我拒绝在系统的大门之外。既然它对我如此不仁，我也只好出点忘恩负义的损招了。&lt;/p&gt;
&lt;p&gt;在网上翻了翻各种桌面管理器的介绍，最终选择了平铺式的 Awesome。首先是因为可以减少对鼠标的依赖；二是写作文每天都得一边放着浏览器，一边打开终端实在太麻烦；三是想到实验室那台24寸的大屏显示器，铺满了应用程序一定很拉风。于是就这样告别了 Gnome，投向 Awesome 的怀抱。&lt;/p&gt;
&lt;p&gt;想到这里，突然觉得来学校的这几天，效率反而没有在家高了。不仅没读什么书，连本职的工作也总是拖拉。就拿写作文来说吧，NYT上面的文章已经有点读腻了，再也不想每天水一篇技术摘要什么的，而观点类的文章又常常不感兴趣，艺术类的又太难，这样的后果便是迟迟找不到合适的文章，也总是没法开始敲下那第一个单词。不仅是作文，其他工作拖延的状况也比较严重。认真反思了一下，觉得应该是最近生活缺少计划与节制所致。&lt;/p&gt;
&lt;p&gt;原来的想法是趁着好年纪，过一种放纵的青春生活。现在我还是想尝试那样的生活，但已经知道那不会是生活的主线。我认为各种经历都是宝贵的，接触的世界越宽广，生命的内涵便越充实。如果安排得当，努力专攻一门学问同体验多彩的人生并不冲突。难点在于是否拥有足够强大的执行能力，在放纵与修行之间切换得游刃有余。&lt;/p&gt;
&lt;p&gt;在修成正果之前，还是老老实实得制定计划，写些列表，把想做的和该做的事情都记下来。再根据实际完成情况进行修改完善，这样从中对自己的实力有个把握，也算是不小的锻炼。所以现在我就不再唠叨，得制定新学期的计划去嘞。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>长大，或只是变老</title>
   <link href="http://mindonmind.github.io/2012/08/21/grow-old-or-up"/>
   <updated>2012-08-21T00:00:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/08/21/grow-old-or-up</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class=&quot;floating-right&quot;&gt;
&lt;p&gt;&lt;img class=&quot;span4&quot; src=&quot;http://mayaangelou.com/images/bio7.jpg&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;玛雅·安格鲁 (&lt;a href=&quot;http://www.mayaangelou.com&quot;&gt;Maya Angelou&lt;/a&gt;)，美国黑人传记作家，诗人。她曾当过皮条客，舞女，也当过记者，演员，制作人。1970年的《我知道囚禁的鸟儿为何歌唱》让她一举成名，她在其中用独特的风格讲述了自己17岁之前的生活经历。&lt;/p&gt;
&lt;p&gt;2008年，安格鲁出版了《给女儿的信》，献给自己从未出生的女儿。关于长大，她说&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am convinced that most people do not grow up. We find parking spaces and honor our credit cards. We marry and dare to have children and call that growing up. I think what we do is mostly grow old. We carry accumulation of years in our bodies and on our faces, but generally our real selves, the children inside, are still innocent and shy as magnolias.&lt;/p&gt;
&lt;p&gt;我确信大多数人并不会长大。我们寻找停车位，支付信用卡。我们结婚并敢于生育小孩，我们就称之为长大。我想我们做的最多的不过是变老。我们将年岁的痕迹累积在我们的身体里，积累在我们的面庞上，但通常来说，我们那真实的自我，那个内心里的孩子，依旧天真无邪，并像木兰花一般害羞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;摘自《给女儿的信》中第一篇《家》。&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>如何找到你生活的目的并做你之所爱</title>
   <link href="http://mindonmind.github.io/2012/08/09/purpose-and-love"/>
   <updated>2012-08-09T23:05:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/08/09/purpose-and-love</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;译自：&lt;a href=&quot;http://www.brainpickings.org/index.php/2012/02/27/purpose-work-love/&quot;&gt;How to Find Your Purpose and Do What You Love&lt;/a&gt;&lt;br /&gt;
作者：&lt;a href=&quot;http://www.brainpickings.org/index.php/author/mpopova/&quot;&gt;Maria Popova&lt;/a&gt;&lt;br /&gt;
译者：&lt;a href=&quot;http://mindonmind.github.io&quot;&gt;Prekop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;为什么名声是激情的敌人，又或如何在设定界限与结交朋友之间掌控平衡。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;『找一些比你自己更加重要的事情，』哲学家丹·丹尼特 (Dan Dennett)&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; 曾在讨论&lt;a href=&quot;http://www.brainpickings.org/index.php/2010/12/01/tedify-happiness/&quot;&gt;幸福的秘密&lt;/a&gt;时说，『并且将你的生活奉献给它。』 但我们到底要如何找到它？当然，不是靠运气。我自己对于&lt;a href=&quot;http://www.brainpickings.org/index.php/2011/08/01/networked-knowledge-combinatorial-creativity/#curiosity&quot;&gt;好奇与选择&lt;/a&gt;乃是达成愿望之引擎这一观点具有坚定不移的信念，但怎样精确地找到自己人生真正的召唤又像是一段复杂且高度个性化的发现之舞。尽管如此，有些因素——某些选择——可以让这个过程简单一些。这里搜集的，便是从七个对于如何实现你人生召唤这一艺术与科学进行了深入思考的思想家那里得到的洞见。&lt;/p&gt;
&lt;h2 id=&quot;保罗格雷厄姆论如何做你之所爱&quot;&gt;1. 保罗·格雷厄姆论如何做你之所爱&lt;/h2&gt;
&lt;p&gt;每隔几个月，我便会重新翻出 &lt;a href=&quot;http://ycombinator.com/&quot;&gt;Y-Combinator&lt;/a&gt; 公司创始人保罗·格雷厄姆 (Paul Graham)&lt;a href=&quot;#fn2&quot; class=&quot;footnoteRef&quot; id=&quot;fnref2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; 那篇2006年的精彩文章，&lt;a href=&quot;http://www.paulgraham.com/love.html&quot;&gt;《如何做你之所爱》&lt;/a&gt;，并再次将它精读。整篇文章才华横溢，但我觉得特别重要且紧迫的段落是那些作者对社会认可度和『名声』的错误价值判断的沉思：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我认为，你不应该做的，是担心任何一个不处在你朋友圈内的人的看法。你不应该担心自己的名声。名声是那个与你不相关的世界的观点。&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;p&gt;名声就像一个强有力的磁场，它甚至能够扭曲你关于自己享受何物的信念。它使你的工作不是为自己喜欢的事，而为那些你认为自己将会喜欢的事。&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;p&gt;名声只不过是灵感沉淀而得到的化石。任何一件事，如果你能将它做得足够好，你就可以让它出名。大量我们现在认为声名在外的事物，起初都只不过是一段碰撞到心灵的爵士乐曲——其实几乎所有既定的艺术形式都行。所以去做你喜欢做的事吧，让名声自己照顾好自己。&lt;/p&gt;
&lt;p&gt;名声对于雄心壮志来说尤其的危险。如果你想让有抱负的人将他们的时间浪费在各种事务上，那么你只需以名声作诱饵即可。这就是让人们作演讲，撰写前言，为委员会服务，成为部门总管等等等等的秘诀。一条看上去很不错的规则，便是直接避免任何有名望的任务。如果它不是那么令人讨厌，他们就不用想法设法地把它变得出名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更多格雷厄姆关于如何寻找意义及创造财富的观点可以在&lt;a href=&quot;https://www.amazon.com/dp/1449389554/ref=as_li_ss_til?tag=braipick-20&amp;amp;camp=0&amp;amp;creative=0&amp;amp;linkCode=as4&amp;amp;creativeASIN=1449389554&amp;amp;adid=1Z5NFS65EVYZWSYB4REF&amp;amp;&quot;&gt;《黑客与画家：计算机时代的大观点》&lt;/a&gt;&lt;a href=&quot;#fn3&quot; class=&quot;footnoteRef&quot; id=&quot;fnref3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;中找到。&lt;/p&gt;
&lt;h2 id=&quot;阿兰德波顿谈成功&quot;&gt;2. 阿兰·德波顿谈成功&lt;/h2&gt;
&lt;p&gt;阿兰·德波顿 (Alain de Botton)&lt;a href=&quot;#fn4&quot; class=&quot;footnoteRef&quot; id=&quot;fnref4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;，当代哲学家与&lt;a href=&quot;http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;amp;location=http%3A%2F%2Fwww.amazon.com%2Fs%3Fie%3DUTF8%26sort%3Drelevancerank%26search-alias%3Dbooks%26ref_%3Dntt_athr_dp_sr_1%26field-author%3DAlain%2520De%2520Botton%23&amp;amp;tag=braipick-20&amp;amp;linkCode=ur2&amp;amp;camp=1789&amp;amp;creative=390957&quot;&gt;『自助文学流派』&lt;/a&gt; 创始人，是我们文化观点中存在的种种矛盾与错觉的一个敏锐观察者。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;http://www.ted.com/talks/alain_de_botton_a_kinder_gentler_philosophy_of_success.html&quot;&gt;《工作的欢愉与伤痛》&lt;/a&gt;&lt;a href=&quot;#fn5&quot; class=&quot;footnoteRef&quot; id=&quot;fnref5&quot;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;中，他将他非凡的风趣与才智带到了现代工作场所以及关于『成功』的思维谬误中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.brainpickings.org/wp-content/uploads/2011/06/pleasuresandsorrowsofwork.jpg&quot; height=&quot;300&quot;/&gt;&lt;/p&gt;
&lt;p&gt;他2009年精彩的 &lt;a href=&quot;http://www.ted.com/talks/alain_de_botton_a_kinder_gentler_philosophy_of_success.html&quot;&gt;TED 演讲&lt;/a&gt; 就提供了这样一个品尝他思想的机会：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于成功的一个趣事是我们认为自己明白它的含义。很多时候，我们对于成功地活着意味着什么这一问题的看法，并不属于我们自己。它们是我们从别人那儿吸取过来的。同时，我们也从周身的一切事物中汲取信息，从电视到广告，再到市场营销，等等。这些及其强大的影响力为我们定义了我们想要什么以及我们如何看待自己。我想争论的并不是我们应该放弃我们关于成功的想法，而是我们应该确定这些想法是我们自己的。我们应该专注于我们的想法，并且确信我们拥有它们。因为不去争取你想得到的东西已经足够糟了，但更加糟糕的是拥有一个你渴望得到什么的想法，却在旅途终点发现事实上它从来都不是你想要的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;休麦克劳德论边界设定&quot;&gt;3. 休·麦克劳德论边界设定&lt;/h2&gt;
&lt;p&gt;卡通画家&lt;a href=&quot;http://gapingvoid.com/ie/&quot;&gt;休·麦克劳德&lt;/a&gt; (Hugh MacLeod)&lt;a href=&quot;#fn6&quot; class=&quot;footnoteRef&quot; id=&quot;fnref6&quot;&gt;&lt;sup&gt;6&lt;/sup&gt;&lt;/a&gt; 玩世不恭的涂鸦与他对创造力，文化及人生意义的执着沉思同样出名。在&lt;a href=&quot;https://www.amazon.com/dp/159184259X/ref=as_li_ss_til?tag=braipick-20&amp;amp;camp=0&amp;amp;creative=0&amp;amp;linkCode=as4&amp;amp;creativeASIN=159184259X&amp;amp;adid=09D4PYK2QK7EZFW10RDZ&amp;amp;&quot;&gt;《不鸟任何人：创造力的39个关键》&lt;/a&gt;&lt;a href=&quot;#fn7&quot; class=&quot;footnoteRef&quot; id=&quot;fnref7&quot;&gt;&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt;一书中，他收集了自己关于创意生活的最精明的建议。其中特别能与我自己对于选择的重要性的信念产生共鸣的，是以下关于设定界线的灼见：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.brainpickings.org/wp-content/uploads/2012/02/ignoreeverybody.jpg&quot; height=&quot;300&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&quot;16&quot; type=&quot;1&quot;&gt;
&lt;li&gt;一个有创造力的人能专业地学到的最重要的事情是在何处画一条红线，从而将你愿意做的事情和你不愿做的事情隔开。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当他人开始为之付款，艺术的苦难便开始了。你越需要钱，他人对你做什么的要求便越多。你需要吞下更多的废话。也将得到更少的快乐。请牢记这点并相应地制定计划。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后来，麦克劳德呼应了上文中格雷厄姆关于名声的观点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&quot;28&quot; type=&quot;1&quot;&gt;
&lt;li&gt;获得认可的最佳途径即不需要认可。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这在艺术与商业中同样重要。还有爱。还有性。还有所有其他值得拥有的东西。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;刘易斯海德论工作与劳动&quot;&gt;4. 刘易斯·海德论工作与劳动&lt;/h2&gt;
&lt;p&gt;在去年的&lt;a href=&quot;http://www.brainpickings.org/index.php/2011/09/12/fear-creativity/&quot;&gt;五本关于恐惧和创造过程的永恒图书&lt;/a&gt;精选合集推出后，许多读者适宜地推荐了另外一本书：刘易斯·海德 (Lewis Hyde)&lt;a href=&quot;#fn8&quot; class=&quot;footnoteRef&quot; id=&quot;fnref8&quot;&gt;&lt;sup&gt;8&lt;/sup&gt;&lt;/a&gt; 1979年的经典作品，&lt;a href=&quot;http://www.amazon.com/dp/0307279502/ref=as_li_ss_til?tag=braipick-20&amp;amp;camp=0&amp;amp;creative=0&amp;amp;linkCode=as4&amp;amp;creativeASIN=0307279502&amp;amp;adid=1D1AQPSFGFG96A84FVC7&quot;&gt;《礼物：当代世界中的创造力与艺术家》&lt;/a&gt;。对这本书大卫·福斯特·华莱士 (David Foster Wallace)&lt;a href=&quot;#fn9&quot; class=&quot;footnoteRef&quot; id=&quot;fnref9&quot;&gt;&lt;sup&gt;9&lt;/sup&gt;&lt;/a&gt;有条著名的评论，『没有哪个参与任何一种艺术形式的人能在读过《礼物》后不发生一点变化。』&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img3.douban.com/lpic/s4243628.jpg&quot; height=&quot;300&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下面这条摘录最初在一月份出现在&lt;a href=&quot;http://www.brainpickings.org/index.php/2012/01/24/lewis-hyde-the-gift-work-vs-labor/&quot;&gt;这里&lt;/a&gt;。其中，海德清晰地叙述了工作与创造性劳动的区别。对它的理解将带领我们向职业自我实现这一神圣的终极目标更近一些：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;工作是我们按小时计所做的事。它总要开始并且，如果可能的话，我们做它是为了金钱。在生产线上焊接汽车车身是工作；洗刷碗碟，计算税收，查看精神病房，采摘芦笋——这些都是工作。另一方面，劳动自己设定自己的脚步。我们也许会从中得到报酬，但它更加难以得到量化……写一首诗，照料一个孩子，研究一种新的算法，解决神经病症，任何形式的发明——这些属于劳动。&lt;/p&gt;
&lt;p&gt;工作是一项有预期的通过意志力来达成的活动。一种劳动可以有所预期，但只会到完成基础目标或者不做明显会阻碍此项劳动的事情这种程度。在此之外，劳动有它自己的计划表。&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;p&gt;没有科技或者时间节约装置可以改变创造性劳动的节律。因此，当劳动的价值通过交换价值来体现时，每次工作技术的进步都将导致创造力自动贬值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;心理学家米哈里·契克森米哈赖 (Mihaly Csikszentmihalyi)&lt;a href=&quot;#fn10&quot; class=&quot;footnoteRef&quot; id=&quot;fnref10&quot;&gt;&lt;sup&gt;10&lt;/sup&gt;&lt;/a&gt; 给把劳动与工作区分开的特质制定了一个术语：&lt;a href=&quot;https://www.amazon.com/dp/0061339202/ref=as_li_ss_til?tag=braipick-20&amp;amp;camp=0&amp;amp;creative=0&amp;amp;linkCode=as4&amp;amp;creativeASIN=0061339202&amp;amp;adid=0TG3J0565NPMS6KPR6YW&amp;amp;&quot;&gt;心流 (flow)&lt;/a&gt;&lt;a href=&quot;#fn11&quot; class=&quot;footnoteRef&quot; id=&quot;fnref11&quot;&gt;&lt;sup&gt;11&lt;/sup&gt;&lt;/a&gt;——一种高度集中并且清晰明快的感觉，在其中你忘记了自己，忘掉了时间的流逝，并且感觉自己像是某个更加广阔的物体的一部分。如果你曾经为了某个心爱的项目熬一整夜，或者甚至连续花20小时来书写一封情书，你便体验过心流，也知道什么叫创造性劳动。&lt;/p&gt;
&lt;h2 id=&quot;史蒂夫乔布斯谈不安于现状&quot;&gt;5. 史蒂夫·乔布斯谈不安于现状&lt;/h2&gt;
&lt;p&gt;他那现已成为传奇的&lt;a href=&quot;http://www.brainpickings.org/index.php/tag/documentary/&quot;&gt;2005年斯坦福大学毕业演说&lt;/a&gt;，整个看来绝对是一块珍宝，其中，史蒂夫·乔布斯举出了一个强有力的论据来说明在寻找你人生召唤的过程中不要安于现状——这个论据主要依赖于他对&lt;a href=&quot;http://www.brainpickings.org/index.php/2012/01/11/intuition-vs-rationality/&quot;&gt;直觉所具力量&lt;/a&gt;的坚持：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;http://www.brainpickings.org/wp-content/uploads/2012/02/stevejobs.jpg&quot; alt=&quot;&quot; /&gt;
&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;你们的工作将填满你们生活的很大一部分，所以获取真正满意的唯一途径是去做那些你相信它们很伟大的工作。而从事伟大工作的唯一途径是热爱你所从事的事业。如果你还没有找到它，请继续寻找。不要安于现状。由于它会牵动着你内心的每一处，当你找到它时，你会知道的。此外，就像所有伟大的关系一样，随着年华的滚动，它只会越变越好。所以定要不断寻找直到你找到了它。不要安于现状。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;罗伯特克鲁尔威奇谈友谊&quot;&gt;6. 罗伯特·克鲁尔威奇谈友谊&lt;/h2&gt;
&lt;p&gt;罗伯特·克鲁尔威奇 (&lt;a href=&quot;http://en.wikipedia.org/wiki/Robert_Krulwich&quot;&gt;Robert Krulwich&lt;/a&gt;)&lt;a href=&quot;#fn12&quot; class=&quot;footnoteRef&quot; id=&quot;fnref12&quot;&gt;&lt;sup&gt;12&lt;/sup&gt;&lt;/a&gt;，WNYC电台超棒的 &lt;a href=&quot;http://www.radiolab.org/&quot;&gt;Radiolab&lt;/a&gt;&lt;a href=&quot;#fn13&quot; class=&quot;footnoteRef&quot; id=&quot;fnref13&quot;&gt;&lt;sup&gt;13&lt;/sup&gt;&lt;/a&gt; 节目的联合制作人，向来具有启蒙性质的 &lt;a href=&quot;http://www.npr.org/blogs/krulwich/&quot;&gt;Krulwich Wonders&lt;/a&gt;博客作者，皮博迪优异广播奖 (&lt;a href=&quot;http://www.nypublicradio.org/press/radiolab-peabody/&quot;&gt;Peabody Award for broadcast excellence&lt;/a&gt;&lt;a href=&quot;#fn14&quot; class=&quot;footnoteRef&quot; id=&quot;fnref14&quot;&gt;&lt;sup&gt;14&lt;/sup&gt;&lt;/a&gt;) 获得者，同时也是当今最优秀的在职记者之一。在另一个&lt;a href=&quot;http://www.brainpickings.org/index.php/2011/06/10/best-commencement-graduation-speeches/#krulwich&quot;&gt;出色的毕业演说&lt;/a&gt;中，他清晰地阐述了热爱你的事业在社交方面的效用——即一种远比名声或同行评价等观念更有意义且真实的社会连通性。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;http://www.brainpickings.org/wp-content/uploads/2011/06/krulwich.jpg&quot; alt=&quot;&quot; /&gt;
&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;你将建造一个工作的主体，但你也将建造一个感情的主体，与那些你帮助过且他们又反过来帮助过你的人。这是一个&lt;em&gt;低地里有朋友&lt;/em&gt;&lt;a href=&quot;#fn15&quot; class=&quot;footnoteRef&quot; id=&quot;fnref15&quot;&gt;&lt;sup&gt;15&lt;/sup&gt;&lt;/a&gt;的时代。你现今遇到的那些人，他们会注意你，挑战你，与你一起工作，并且注视着你的后背。或许他们会成为你今后的力量。&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;p&gt;如果你能……坠入爱河，与你的工作，与一起工作的人，与你的梦想还有他们的梦想。不论是什么带你来到这所学校，不要让它溜走。相信你的朋友。相信那些你和你的朋友必须说出来的……以及你说出它的方式——是这个世界从未拥有过的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;霍尔斯蒂宣言&quot;&gt;7. 霍尔斯蒂宣言&lt;/h2&gt;
&lt;p&gt;或许你还记得霍尔斯蒂宣言 (&lt;a href=&quot;http://shop.holstee.com/&quot;&gt;The Holstee Manifesto&lt;/a&gt;)，它作为我们&lt;a href=&quot;http://www.brainpickings.org/index.php/2011/04/08/five-manifestos-for-life/&quot;&gt;关于创意生活最受喜爱的五个宣言&lt;/a&gt;之一，是一封向有目标的生活发出的雄辩而美丽的情书。(这封宣言在这里是如此地被热爱，以至于它已经在 &lt;em&gt;Brain Pickings&lt;/em&gt; 的侧边栏上获得了一块永久的场地，这是一个对我自己以及你们，亲爱的读者，的每日提醒，提醒我们什么才是最重要的东西。)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.shopify.com/s/files/1/0031/5352/files/The-Holstee-Manifesto.jpg?1285103640&quot; width=&quot;400&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是你的生活。做你之所爱，并要经常地去做。如果你不喜欢某些事情，改变它。如果你不喜欢你的工作，请退出。如果你没有足够的时间，不要继续观看电视。如果你在寻找生命中的真爱，请停下；他们会在你开始做你之所爱时为你而等待。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;霍尔斯蒂宣言现在已经作为一个漂亮的&lt;a href=&quot;http://shop.holstee.com/collections/all#.UCOvjqKiK1E&quot;&gt;印刷品&lt;/a&gt;出售，一张印制在由50%的大象便便与50%的回收纸手工制作纸张上的5×7&lt;a href=&quot;http://shop.holstee.com/products/holstee-greeting-card#.UCOvsaKiK1E&quot;&gt;贺卡&lt;/a&gt;，甚至一个婴儿围兜&lt;a href=&quot;#fn16&quot; class=&quot;footnoteRef&quot; id=&quot;fnref16&quot;&gt;&lt;sup&gt;16&lt;/sup&gt;&lt;/a&gt;——因为向他人倾注在激情之中生活所具有的价值，永远不会太早。&lt;/p&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;丹尼尔·丹尼特 (1942- )，美国哲学家，作家，认知科学家。坚定的无神论者，与理查德·道金斯，山姆·哈里斯及克里斯托弗·希钦斯共称『新无神论的四骑士』。著有《头脑风暴：关于心智与心理的哲学论文》，并与道格拉斯·霍夫施塔特合著《心我论》。&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn2&quot;&gt;&lt;p&gt;保罗·格雷厄姆 (1964- )，美国著名程序员，创业家，风险投资家，博客及技术作家。&lt;a href=&quot;#fnref2&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn3&quot;&gt;&lt;p&gt;本书&lt;a href=&quot;http://book.douban.com/subject/6021440/&quot;&gt;中译版&lt;/a&gt;已由人民邮电出版社出版。&lt;a href=&quot;#fnref3&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn4&quot;&gt;&lt;p&gt;阿兰·德波顿 (1969- )，瑞士作家，哲学家，电视制作人。现居伦敦，著有《关于爱情》、《旅行的艺术》、《快乐的构建》等。&lt;a href=&quot;#fnref4&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn5&quot;&gt;&lt;p&gt;本书&lt;a href=&quot;http://book.douban.com/subject/4191531/&quot;&gt;中译版&lt;/a&gt;已由上海译文出版社出版。&lt;a href=&quot;#fnref5&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn6&quot;&gt;&lt;p&gt;休·麦克劳德，美国卡通画家，作家，企业家，市场营销人。他基于在商业名片的背部制作卡通画创建了自己的生意，同时利用自己的博客 &lt;a href=&quot;www.gapingvoid.com/ie&quot;&gt;gapingvoid&lt;/a&gt; 摆脱了画廊、报纸等传统的艺术生存模式。&lt;a href=&quot;#fnref6&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn7&quot;&gt;&lt;p&gt;本书&lt;a href=&quot;http://book.douban.com/subject/4817987/&quot;&gt;繁体中译版&lt;/a&gt;已由木马文化事业公司出版。&lt;a href=&quot;#fnref7&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn8&quot;&gt;&lt;p&gt;刘易斯·海德 (1945- )，美国作家，诗人，评论家。著有《礼物》及《骗子制造了这个世界》。&lt;a href=&quot;#fnref8&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn9&quot;&gt;&lt;p&gt;大卫·福斯特·华莱士 (1962-2008)，美国作家，现代派小说的杰出代表。著有长篇小说《系统的笤帚》，《无尽的玩笑》，短篇小说集《头发奇特的女孩》等。于2008年12月12号在家中上吊自杀。&lt;a href=&quot;#fnref9&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn10&quot;&gt;&lt;p&gt;米哈里·契克森米哈赖 (1934- )，匈牙利裔美国心理学家，著名积极心理学研究者。著有畅销书《心流》，《创造力》，《寻找心流》等。&lt;a href=&quot;#fnref10&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn11&quot;&gt;&lt;p&gt;本书&lt;a href=&quot;http://book.douban.com/subject/6509801/&quot;&gt;中译版&lt;/a&gt;已由中信出版社出版。&lt;a href=&quot;#fnref11&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn12&quot;&gt;&lt;p&gt;罗伯特·克鲁尔威奇，美国著名电台与电视记者，擅长对复杂的主题用清晰，令人信服且有趣的方式进行解释。&lt;a href=&quot;#fnref12&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn13&quot;&gt;&lt;p&gt;美国一档公众电台节目，致力于推广传播科学与哲学思想，以其独特的制作风格与其话题易于被公众理解吸收而著名。&lt;a href=&quot;#fnref13&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn14&quot;&gt;&lt;p&gt;皮博迪奖，全称乔治·福斯特·皮博迪奖 (The George Foster Peabody Awards)，用以表彰广播，电视台，网络等媒体的优秀公众节目。&lt;a href=&quot;#fnref14&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn15&quot;&gt;&lt;p&gt;美国乡村乐歌手加思·布鲁克斯 (Garth Brooks) 的一首歌名 (Friends in Low Places)。这首歌收录在他1990年出版的专辑《No Fences》中，也是一首美国90年代乡村乐金曲，曾蝉联美国乡村单曲排行版首四周。&lt;a href=&quot;#fnref15&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn16&quot;&gt;&lt;p&gt;霍尔斯蒂已不再销售这类婴儿围兜。&lt;a href=&quot;#fnref16&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>最后一个暑假计划</title>
   <link href="http://mindonmind.github.io/2012/07/28/the-last-summer-holiday"/>
   <updated>2012-07-28T23:00:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/07/28/the-last-summer-holiday</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;因为家里发生了一些事情，我回家的日期突然从8月1号提前到7月29号，也就是明天。这会是自己最后一个真正意义上的暑假，或许应该过得难忘一些。记得从大二开始，我每年的暑假都会独自出远门旅行，前年是南京和上海，去年是海南。那种感觉非常棒。我喜欢步行在陌生城市的街道，那看到，听到和闻到的新鲜生活气息，总会将我淹没在无尽的满足中。古人云『读万卷书，行万里路』，实在是有道理。&lt;/p&gt;
&lt;p&gt;今年暑假可能没法出去远游了，因为要学车。但这无法阻碍我探索世界的脚步，咱不还有互联网么。不过在实验室待了一年后，时间对我显得越来越珍贵。面对这即将到来的大把自由时间，怎能不好好畅想一下？那么，下面就列举一下8月暑期计划，希望自己这最后一个暑假能过得开心一些 :-)&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;阅读&quot;&gt;阅读&lt;/h3&gt;
&lt;h4 id=&quot;文学类&quot;&gt;文学类&lt;/h4&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;色彩缤纷的鸟&lt;/li&gt;
&lt;li&gt;白雪公主&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;实用类&quot;&gt;实用类&lt;/h4&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;敏感的人&lt;/li&gt;
&lt;li&gt;内向者优势&lt;/li&gt;
&lt;li&gt;盔甲骑士&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;学术类&quot;&gt;学术类&lt;/h4&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Object Recognition Network Paper Mining&lt;/li&gt;
&lt;li&gt;Josh’s Mind Theory&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;在线资料&quot;&gt;在线资料&lt;/h4&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;New York Times&lt;/li&gt;
&lt;li&gt;Brain Pickings&lt;/li&gt;
&lt;li&gt;Paul Graham&lt;/li&gt;
&lt;li&gt;Larry Wasserman&lt;/li&gt;
&lt;li&gt;Bayesian Resources&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;技术&quot;&gt;技术&lt;/h3&gt;
&lt;h4 id=&quot;科学计算&quot;&gt;科学计算&lt;/h4&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;iPython (Notebook)&lt;/li&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;折腾&quot;&gt;折腾&lt;/h4&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;vim&lt;/li&gt;
&lt;li&gt;vimperator&lt;/li&gt;
&lt;li&gt;zsh&lt;/li&gt;
&lt;li&gt;urxvt，如果有余力的话&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;最后，还有一条及其重要，那就是向柳比歇夫同志学习！&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>加拿大之梦</title>
   <link href="http://mindonmind.github.io/2012/07/24/canada-dream"/>
   <updated>2012-07-24T22:13:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/07/24/canada-dream</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;偶然发现一个朋友在加拿大求学时写下的一些文字，读了后觉得有什么东西在胸腔里温暖地颤动，久久无法平静。仿佛自己正追随着作者的脚步，将那些美妙的经历逐一上演。&lt;/p&gt;
&lt;p&gt;多伦多初冬的夜晚，走在没有雨滴的街道上感受着这个城市的美丽。在魁北克向老天祈祷，期待着自己人生中的第一次天空滑行。当身体终于在12000英尺的云层穿过，才知道飞的感觉竟这样难忘。从惠斯勒耀眼的雪山一路滑向伊丽莎白公园，研究每条长椅上那些语句的故事。望着白石镇上一条或许从未有火车开过的铁轨，静静地躺在海边，等着人们在梦里把它唤醒。而脚踝上磨出的水泡，又见证了白色、灰色与彩色马路上踏过的每一小步。还有圣诞节飘起的雪，驾着驯鹿的老人悄悄走进那个终于实现了的梦里……&lt;/p&gt;
&lt;p&gt;或许是因为这些文字给我的共鸣过于强烈，最近总在凌晨4点的时候睁眼，然后脑袋发热一整天。我太想把自己的感动表达出来：那些冲击着我心脏的情绪，像温哥华汹涌的海浪，一波一波地，将我推向漩涡的中心。斑斓绚丽的幻想，不断从我的血脉里喷薄出来，争夺着每一条早已过载的神经中枢。而它们的每一次成功占领，都会引发我难以解释的怪异举动。然后，我只能像蒙特利尔赌场上最无可救药的赌徒，一边懊恼，一边妄想用下次的赌注挽回所有过错。直至自己终于身无分文，才突然发觉温哥华海水刺骨的温度。&lt;/p&gt;
&lt;p&gt;我已不记得这是第几次把事情搞砸，只记得自己好像从未成功过。一个人难过的时候，就回学校走走。路旁杨树那若无其事的老样子，总让我觉得，明天或许并不会有想象的那么糟。但明天又是那么远，远得好像多伦多的日出。&lt;/p&gt;
&lt;p&gt;至于那些难以消除的误解，只愿时间能将它们减轻一些。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>宇宙终极配色方案</title>
   <link href="http://mindonmind.github.io/2012/07/14/the-ultimate-colorscheme"/>
   <updated>2012-07-14T11:34:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/07/14/the-ultimate-colorscheme</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;img src=&quot;http://ethanschoonover.com/solarized/img/solarized-yinyang.png&quot; alt=&quot;Solarized&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果你是一个习惯用文本编辑器写东西（代码，文章）的人，你是否跟我一样为一套满意的配色方案(colorscheme)苦苦追寻了很久？就在昨天，我终于找到了令我折服的配色方案：&lt;a href=&quot;http://ethanschoonover.com/solarized&quot;&gt;Solarized&lt;/a&gt;。我称它为你需要的最后一个配色方案。&lt;/p&gt;
&lt;p&gt;这套配色由 &lt;a href=&quot;ethanschoonover.com&quot;&gt;Ethan Schoonover&lt;/a&gt; 精心挑选的十六种颜色组成，前八种为单色(monotones)，后八种为强调色(accent colors)。作者按照一定的亮度关系设计出来的这些颜色，使得文本不仅清晰易读，并且具有优异的对比度，就算长时间阅读眼睛也不觉得难受。&lt;/p&gt;
&lt;p&gt;作者最初将它设计为 Vim 的插件，但很快便被移植到了几乎任何可以设置调色板的地方，包括文本编辑器(Emacs, TextMate, Visual Studio)，终端模拟器，Mutt，以及 Photoshop, GIMP 等。我将它应用在了 Gnome-terminal 及 Vim 中，效果非常不错。配置方法可以参考我的笔记：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a href=&quot;/notes/linux/gnome_terminal_solarized.html&quot;&gt;Solarized Gnome-terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http:/notes/vim/vim_solarized.html#vim-solarized&quot;&gt;Solarized Vim&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;也可以参考&lt;a href=&quot;http://ethanschoonover.com/solarized&quot;&gt;官网&lt;/a&gt;的介绍后自己折腾。&lt;/p&gt;
&lt;p&gt;如果你也和设计者 Schoonover 一样喜欢在阳光明媚的日子坐在树荫下读书，那就赶快来尝试一下这套配色方案吧！&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>我的技术笔记上线啦!</title>
   <link href="http://mindonmind.github.io/2012/07/05/notes-online"/>
   <updated>2012-07-05T23:35:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/07/05/notes-online</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;经过几天的酝酿，我采用 &lt;a href=&quot;http://sphinx.pocoo.org&quot;&gt;Sphinx&lt;/a&gt; 搭建的 Wiki 式技术&lt;a href=&quot;http://mindonmind.github.io/notes&quot;&gt;笔记&lt;/a&gt;终于上线了 :-)&lt;/p&gt;
&lt;p&gt;很久之前就看到&lt;a href=&quot;http://wiki.ktmud.com/index.html&quot;&gt;迟丘&lt;/a&gt;用&lt;a href=&quot;http://code.google.com/p/vimwiki&quot;&gt;Vimwiki&lt;/a&gt;编写的页面十分漂亮，当时就开始琢磨着想自己哪天也建一个类似的 Wiki 平台。后来又从 &lt;a href=&quot;http://beiyuu.com&quot;&gt;BeiYuu&lt;/a&gt; 的一篇&lt;a href=&quot;http://beiyuu.com/why-blog&quot;&gt;文章&lt;/a&gt;中体会到 Wiki 与博客的差别。按那篇文章的观点，我写博客的初衷（记录自己在使用 linux 过程中遇到的问题和收获）或许采用 Wiki 的形式更加适合。&lt;/p&gt;
&lt;p&gt;当然，现在这个博客早不是一个技术笔记了，而且正与技术渐行渐远。但归根结底来说我还是要靠技术混饭吃的，而技术又需要点点滴滴的持久积累。因此该技术笔记便顺利成章地出现了。它将记录与 linux, python, scientific computing, vim 等技术相关的内容，主要涉及各种工具、技术的配置与使用方法。这些往往属于比较零散的知识点，而那些对相关技术的总结性文章则将继续发表在博客中。&lt;/p&gt;
&lt;p&gt;Wiki 其实有很多方便快捷的搭建方法，比如新兴的 &lt;a href=&quot;http://www.tryscribble.com&quot;&gt;Scribble&lt;/a&gt;，将建 Wiki 变得和用记事本一样简单直接，而且相当美观。但在衡量了易用性与自由性之后，我最终选择了 Sphinx 作为自己的 Wiki 引擎，这里要十分感谢 &lt;a href=&quot;http://deep.tw&quot;&gt;Daniel Lin&lt;/a&gt; 的启发！&lt;/p&gt;
&lt;p&gt;最后，祝此笔记开门大吉，成果多多！&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>在苏州糖里</title>
   <link href="http://mindonmind.github.io/2012/07/01/suzhou-sugar"/>
   <updated>2012-07-01T01:07:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/07/01/suzhou-sugar</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;a href=&quot;http://www.brautigan.net/index.html&quot;&gt;布劳蒂甘&lt;/a&gt;是个奇怪的人。他喜欢钓鳟鱼，不喜欢别人把他称作垮掉派。他还写了一部美丽的小说，由一个又一个的诗构成，它的名字叫&lt;a href=&quot;http://book.douban.com/subject/1012828/&quot;&gt;《在西瓜糖里》&lt;/a&gt;。里面我最喜欢的一篇叫『一次爱，一阵风』：&lt;/p&gt;
&lt;p&gt;我们久久地、缓缓地做爱。一阵风吹来，窗户轻轻颤动，糖在风中无力地裂开。&lt;/p&gt;
&lt;p&gt;我喜欢保琳的身体，她说她也喜欢我的，我们不知道该说什么。&lt;/p&gt;
&lt;p&gt;风突然停了，保琳说：『那是什么？』&lt;/p&gt;
&lt;p&gt;『是风。』&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;七天前的这个时候，我坐在苏州某个旅社的床上。&lt;/p&gt;
&lt;p&gt;十梓街早已安静下来，只有风还在吹。在风之前，是蚕丝般的雨在飘。&lt;/p&gt;
&lt;p&gt;桌上摆着牛奶。在牛奶之前，是便利店阿姨厌恶的脸色。&lt;/p&gt;
&lt;p&gt;昨天，我第二次来图书馆借书，又看到了那本&lt;a href=&quot;http://book.douban.com/subject/5423547/&quot;&gt;《青春的反证》&lt;/a&gt;，想到21岁真是好年纪。&lt;/p&gt;
&lt;p&gt;不知道我算不算已经完成了反证：那天我感到无比的真实，真实得就像她问『那是什么?』&lt;/p&gt;
&lt;p&gt;『是梦』。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>毕业的颜色</title>
   <link href="http://mindonmind.github.io/2012/06/10/graduate-colors"/>
   <updated>2012-06-10T09:45:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/06/10/graduate-colors</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;6号是我毕业答辩的日子，现在回想起来，仍觉得那一天是如此漫长。&lt;/p&gt;
&lt;p&gt;起因要追溯到去年的这个时候，我决定不以计算机继续作为自己毕业后的职业。这并不是一个莽撞作出的决定，因为从大二起我就尝试在计算机学院内寻找自己感兴趣的方向，但各实验室所作的工作与氛围均不能唤起我的任何激情。我不甘心把自己的青春年华花在沉闷的工程项目上，因此我开始寻求计算机以外的道路。&lt;/p&gt;
&lt;p&gt;一个偶然的机会，我突然意识到人类视觉的不寻常之处，并和子沛进行了讨论。后来他推荐我去读索尔索的那本&lt;a href=&quot;http://book.douban.com/subject/3171969/&quot;&gt;《认知心理学》&lt;/a&gt;，那是我第一次了解到原来心理学的研究对象是人类的心智。或许是冥冥之中的安排，在我急切的想找到一个人生出口的时候，『认知』这个既酷又神秘的词语打开了我的视野。后来我报名参加了北师大的认知神经科学暑期学校，并幸运地加入了 Liu Lab。从那时起，来自身边家人、朋友、同学的无休止疑问便开始了。&lt;/p&gt;
&lt;p&gt;我想我们每个人都有自己的思维空间，空间内是我们已了解接受的东西，而空间外则是从未被我们意识到的东西。对于那些从未接触过的事物，有些人的反应是质疑，如果无法质疑就会心生恐惧。还有一些人，他们对这个世界充满了好奇，渴望去接触自己从未考虑过的观念，希望经历那些之前未经历过的人生体验，这些使他们感到兴奋和满足。前一种人的心智是闭塞的，坚决地活在自己习惯的那个思维体系中；后一种人的心智是开放的，他们时刻准备着抛弃已有的思维体系，然后再将其重建。大多数工科生（尤其是工科女）属于前一种人，我却属于后一种。&lt;/p&gt;
&lt;p&gt;而我毕设答辩失败的根本原因，即在于这两种思维方式的冲突。或许对大多数计算机学院的老师或同学来说，研究大脑是件很&lt;a href=&quot;http://sealhuang.sinaapp.com/?p=191&quot;&gt;可笑&lt;/a&gt;的事情。当然失败并不是指没能通过（不然我就没心情写这篇文章了），而是说诸位老师将我的论文嘲讽了一番，并指出需要进行内容与格式上的较大修改才能符合计算机学院的要求。这时离论文终稿提交的截至时间还剩不到两天。万幸的是，另一位论文不符合『要求』的同学在回答提问时惹毛了诸位大佬，从而替我进了二辩，要不然估计我就真难顺利毕业了。&lt;/p&gt;
&lt;p&gt;答辩后的下午，我怀着失落与不安坐在实验室的座位上，虽然与实验室老师讨论了大致的修改方案，但还是无法安心地修改论文，就仿佛被人狠狠的揍了一拳，自己不仅没力气还手，还在时刻担心对方的下一记重击。除了对于不能毕业的恐惧，还有一个原因让我没法全心修改论文。那就是我始终认为本科论文没什么意义，根本不会有人真正在乎它的内容，花费如此之多的时间实在是有所不值。&lt;/p&gt;
&lt;p&gt;但生活总要继续，问题总要解决。吃过晚饭后，我像老板所说的那样『别管有没有意义』下决心跟论文死磕到底。有些事情就是这样，如果你决心达到目标，那你真的就会达到。我想这就是人类心智的强大之处，它不仅能让我们去追求那些美好的东西，也能让我们在枯燥无趣的工作中坚持下来。&lt;/p&gt;
&lt;p&gt;8号上午9点33分，我将打印好的论文终稿交给了学院的教务老师。我想，这是我对成为一名合格工科生的最后努力。此时校园里已到处飘起了象征着工科的金色绶带，四处可见庆祝毕业的兴奋面孔。我为自己没有放弃感到心满意足。&lt;/p&gt;
&lt;p&gt;9号，穿上学士服穿梭在校园里，大家情绪都很高涨。新主，音乐厅，绿园，图书馆，老教学区，怎么都拍不完的北航，到处载满了四年的记忆。雨过天晴的傍晚，清爽的风吹动着金黄绶带，仿佛置身在那片悬崖上的麦田。但误入麦田的孩子们都要离开了，因为他们已抬头看到了天空原来是那么广，那么蓝。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>用 Glossary 学习 Python : 名字空间及作用域</title>
   <link href="http://mindonmind.github.io/2012/05/13/glossary-python-1-namespace-scope"/>
   <updated>2012-05-13T15:32:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/05/13/glossary-python-1-namespace-scope</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;在《如何阅读一本书》中作者提到，分析型阅读的第一步应该是弄清楚书中每个术语或专业词汇的语义，如果作者提供了一个词汇表 (glossary)，那么就应该先好好将它读一读。我认为这条规则不仅对阅读理解书籍来说很有效，对读代码、文档等技术方面的材料来说也十分适用。因此我想到了最近自己一直在使用的 &lt;a href=&quot;http://www.python.org&quot;&gt;Python&lt;/a&gt; 语言，它的&lt;a href=&quot;http://docs.python.org&quot;&gt;官方文档&lt;/a&gt;中就有一个这样的&lt;a href=&quot;http://docs.python.org/glossary.html&quot;&gt;词汇表&lt;/a&gt;。在浏览了里面的条目后，我发现这个词汇表及其有用，对许多概念进行了精短的说明，且覆盖了 Python 语言的方方面面。因此我将其作为自己深入学习 Python 的一个入口，并打算写一系列的文章，每次从中挑选出与某一主题相关的词汇，对它们进行学习研究。&lt;/p&gt;
&lt;p&gt;最近对 Python 的名字空间与作用域机制很感兴趣，读了一些相关的文章，这里对其作一个小结。&lt;/p&gt;
&lt;p&gt;言归正传，在 Glossary 中与名字空间或作用域相关的词汇有:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;namespace&lt;/em&gt; : The place where a variable is stored. Namespces are implemented as dictionaries. There are local, global and built-in namespaces as well as nested namespaces in objectes (in methods). Namespaces support modularity by preventing naming conflicts…&lt;/p&gt;
&lt;p&gt;&lt;em&gt;nested scope&lt;/em&gt; : The ability to refer to a variable in encolsing definition. For instances, a function defined inside another function can refer to variables in the outer fucntion. Note that nested scopes work only for reference and not for assignment which will always write to the innermost scope. In contrast, local varibles both read and write in the innermost scope. Likewise. global variables read and write to the global namespace.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了理解 Python 的名字空间机制，首先需要明确的是 Python 中的变量 (variable) 与其他语言的不同。在 Python 中并不存在一般意义上的变量，它只有&lt;em&gt;名字&lt;/em&gt; (names) 和&lt;em&gt;对象&lt;/em&gt; (objects)。对象是数据实体，而名字是访问对象途径。名字通过&lt;em&gt;绑定&lt;/em&gt; (binding) 操作&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;被引入至程序中。此外绑定除了会使某个名字指代某个对象，还会给这个名字赋予一些额外的性质。下面这段话来自 &lt;a href=&quot;http://docs.python.org/reference/executionmodel.html#naming-and-binding&quot;&gt;Python 语言参考&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当我们在某个代码快内绑定一个名字时，它就是成为该代码块的局部变量 (local variable)。 而当我们在模块级别上绑定一个名字是，它就是一个全局变量 (global variable)。 由于模块也是一个代码快，因此这些变量即是全局的也是局部的。 如果在一个代码块中使用了一个未在该代码快内定义（绑定）的名字，它就被称为自由变量 (free variale)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在程序一旦写成之后，任何代码块中的任意变量都必定属于上述三种类型&lt;a href=&quot;#fn2&quot; class=&quot;footnoteRef&quot; id=&quot;fnref2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;之一，这是在生成字节码之前就确定下来的。因为这与虚拟机使用用哪种语句加载变量相关。比如下面这段代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;函数 &lt;code&gt;f&lt;/code&gt; 的字节码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2           0 LOAD_CONST               1 (2)
            3 STORE_FAST               0 (l)

3           6 LOAD_GLOBAL              0 (g)
            9 STORE_FAST               1 (ll)
           12 LOAD_CONST               0 (None)
           15 RETURN_VALUE        &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看出对于局部变量 &lt;code&gt;f&lt;/code&gt;，Python 使用的是 &lt;code&gt;LOAD_FAST/STORE_FAST&lt;/code&gt; 一类指令，而对于全局变量则使用 &lt;code&gt;LOAD_GLOBAL/STORE_GLOBAL&lt;/code&gt; 一类指令。&lt;/p&gt;
&lt;p&gt;绑定的作用之一就是确定变量的类型：不论一个变量在当前代码块中的哪里被绑定，它都被认为是局部的，因此该代码块内所有对其的使用都将指向它绑定的这个对象。这段话听起来十分坳口，我们用下面这个例子来说明：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;函数 &lt;code&gt;f&lt;/code&gt; 对应的字节码为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2           0 LOAD_FAST                0 (x)
            3 STORE_FAST               1 (t)

3           6 LOAD_CONST               1 (10)
            9 STORE_FAST               0 (x)
           12 LOAD_CONST               0 (None)
           15 RETURN_VALUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到，第一句加载变量 &lt;code&gt;x&lt;/code&gt; 时即使用的 &lt;code&gt;LOAD_FAST&lt;/code&gt; 指令，说明 Python 认为它是一个局部变量，而对 &lt;code&gt;x&lt;/code&gt; 的绑定却是在后面一条语句中才发生。这个例子说明了 Python 的变量类型机制 —— 变量类型被静态确定。虽然定义 &lt;code&gt;f&lt;/code&gt; 时不会报错，但在 &lt;code&gt;f&lt;/code&gt; 运行时会报出 &lt;code&gt;UnboundLocalError&lt;/code&gt; 的异常, 这个异常会在引用一个未绑定的局部变量时抛出。这似乎是个有点违反直觉的现象，按一般的理解，第一条语句中的 &lt;code&gt;x&lt;/code&gt; 应该是全局的，第二条语句不过是在本地重新生成了一个局部变量而已。但就像上文所说的，当定义好 &lt;code&gt;f&lt;/code&gt; 后，它里面的每个变量类型都已经确定了，尽管 &lt;code&gt;x&lt;/code&gt; 在第二条语句中才被绑定，但还是被认为是一个局部变量，既然是一个局部变量, 再运行时任何对这个名字的使用就会访问局部代码块中它所绑定的对象, 如果它还没被绑定，当然就应该报错。&lt;/p&gt;
&lt;p&gt;每个被引入的名字都被保存在某个名字空间里。而名字空间是和&lt;em&gt;代码块&lt;/em&gt; (block) 相互关联的。所谓代码块即指一段被当作一个单元执行的程序文本。诸如模块、函数体、类定义都是一个代码块。每个代码块都有一个属于自己的独立名字空间，且每个名字空间都有一个允许直接访问其内名字的的代码范围，在这个范围内这些名字都是可见的， 而在这个范围外，该名字空间的内的名字不能直接使用。这个代码范围即是该名字空间（中变量）的&lt;em&gt;作用域&lt;/em&gt; (scope)。&lt;/p&gt;
&lt;p&gt;现在让我们把注意力集中在代码块的局部变量&lt;a href=&quot;#fn3&quot; class=&quot;footnoteRef&quot; id=&quot;fnref3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;上, &lt;a href=&quot;http://docs.python.org/reference/executionmodel.html#naming-and-binding&quot;&gt;语言参考&lt;/a&gt;中说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在一个代码块中定义的局部变量的作用域为这个代码块本身。如果它定义在一个函数代码块中， 它的作用域将延伸至该代码块包含的所有内部代码块中，除非在子代码块里对其重新定义。 类代码块中定义的名字的作用域仅限于该代码块本身，它不会向类中的方法代码块扩展 —— 这包括生成器表达式，因为它们使用了函数作用域来实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有了这几条规则，我们可以静态地推出在任意一个代码块被哪些名字空间的作用域所覆盖&lt;a href=&quot;#fn4&quot; class=&quot;footnoteRef&quot; id=&quot;fnref4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;，有如下几种情况：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;代码块自身的局部名字空间，该空间包含了在本代码块中绑定的所有名字&lt;/li&gt;
&lt;li&gt;所有包含该代码块的函数代码块的名字空间，它们的作用域按代码块的分布层层嵌套&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;除了这两种可能的作用域之外，Python 还规定了以下两个所有代码块均可见的名字空间:&lt;/p&gt;
&lt;ol start=&quot;3&quot; type=&quot;1&quot;&gt;
&lt;li&gt;代码块所在模块的全局名字空间，它包含了模块中的所有全局变量&lt;/li&gt;
&lt;li&gt;内建名字空间，它其实是 &lt;code&gt;__builtin__&lt;/code&gt; 模块的名字空间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以把上面的这两个名字空间合称『全局名字空间』，它们的作用域为模块内任何代码块。&lt;/p&gt;
&lt;p&gt;当 Python 需要对一个变量解析其对应的对象时它会以上面列出的 1， 2， 3， 4 顺序 (即 &lt;code&gt;LEGB&lt;/code&gt;) 依次尝试，把在最里层名字空间内找到的名字绑定作为当前名字的引用。有一个例外是如果在代码块中用 &lt;code&gt;global&lt;/code&gt; 语句对一个变量进行了声明，那么在该代码块中所有对此名字进行解析时将跳过 1, 2 直接从 3 开始。比如下面这段代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;将会输出 10。函数 &lt;code&gt;f&lt;/code&gt; 的字节码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2           0 LOAD_CONST               1 (10)
            3 STORE_GLOBAL             0 (x)
...         ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;从中可以看到，&lt;code&gt;x&lt;/code&gt; 在赋值时即被当作是全局变量。这说明了两点：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;code&gt;global&lt;/code&gt; 语句可以覆盖一个名字在当前代码块中的其他绑定而将其强制设定为全局变量&lt;/li&gt;
&lt;li&gt;再次表明一个变量的类型是在运行前就被静态地确定&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;事实上，定义上面这个函数时 Python 编译器&lt;a href=&quot;#fn5&quot; class=&quot;footnoteRef&quot; id=&quot;fnref5&quot;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;会给出一个&lt;em&gt;语法警告&lt;/em&gt;，提醒你 &lt;code&gt;x&lt;/code&gt; 在全局声明前就被赋值。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;现在我们明白了 Python 中的名字、绑定、类型、代码块、名字空间、作用域等概念，再回顾一下最上面列出的那两个 Glossary 中的定义。如果你觉得已经完全理解了定义中说的每句话，每个词的含义，那就说明你理解 Python 的名字空间以及作用域了。&lt;/p&gt;
&lt;p&gt;对于那些想弄懂 CPython 是如何实现这些机制的人，请继续阅读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eli.thegreenplace.net/2011/05/15/understanding-unboundlocalerror-in-python/&quot;&gt;Understanding UnboundLocalError in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://eli.thegreenplace.net/2010/09/18/python-internals-symbol-tables-part-1/&quot;&gt;Python internals: Symbol tables, part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://eli.thegreenplace.net/2010/09/20/python-internals-symbol-tables-part-2/&quot;&gt;Python internals: Symbol tables, part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;常见的绑定操作包括函数定义，类定义，赋值语句等，一个特别的绑定操作是 &lt;code&gt;del&lt;/code&gt; 语句，出现在 &lt;code&gt;del&lt;/code&gt; 后面的变量讲被认为是局部变量。关于绑定操作更多的说明请参考: &lt;a href=&quot;http://docs.python.org/reference/executionmodel.html#naming-and-binding&quot;&gt;Naming and binding&lt;/a&gt;&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn2&quot;&gt;&lt;p&gt;这里所指的类型并不是变量值的类型 (&lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; 等)，而是指它是局部、自由还是全局变量。下同。&lt;a href=&quot;#fnref2&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn3&quot;&gt;&lt;p&gt;任何一个变量都必定是某个代码块的局部变量。&lt;a href=&quot;#fnref3&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn4&quot;&gt;&lt;p&gt;注意这里只是说确定被哪些名字空间覆盖，而没有说确定所有可以直接使用的变量，因为名字空间拥有的变量是动态地确定的。这也就是为什么 &lt;a href=&quot;http://docs.python.org/tutorial/classes.html#python-scopes-and-namespaces&quot;&gt;Tutorial&lt;/a&gt; 中说&lt;em&gt;作用域被静态地确定，动态地使用&lt;/em&gt;。&lt;a href=&quot;#fnref4&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn5&quot;&gt;&lt;p&gt;虽说 Python 不是一个编译语言，但还是有一个编译器前端的，它对源文件进行语法分析，生成句法树和符号表，并最终产生字节码供虚拟机执行。这些步骤属于 Python 的静态地带，变量的类型就是在其中确定的。深入的信息请参考&lt;a href=&quot;http://eli.thegreenplace.net&quot;&gt;Eli&lt;/a&gt; 的文章 &lt;a href=&quot;http://eli.thegreenplace.net/2009/11/28/python-internals-working-with-python-asts/&quot;&gt;Python internals: Working with Python ASTs&lt;/a&gt;&lt;a href=&quot;#fnref5&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>民谣与博客</title>
   <link href="http://mindonmind.github.io/2012/04/19/folk-blog"/>
   <updated>2012-04-19T21:09:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/04/19/folk-blog</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;昨晚在图书馆六层，借着不太明亮的灯光和偶尔闪过的雷光，终于读完了&lt;a href=&quot;http://book.douban.com/subject/3178741/&quot;&gt;《来自民间的叛逆》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;书中让我印象最深刻的不是那些美国民谣歌手们成功的曲折过程，也不是他们糜烂的个人生活，而是作者在前言中对本书写作过程的介绍。作者从95年开始撰写本书，直至01年底完成80万字的初稿，最后删去约20万字后于03年出版。按作者自己的说法，这本书花去了他七年间全部的业余时间。这样的恒心和毅力不得不让人肃然起敬。作者这般心血的最终成果，便是展现在我面前的这本由700多页密密麻麻小字讲述的美国20年代民谣史，另外作者得以从此以写字为生，成为文化工作者。&lt;/p&gt;
&lt;p&gt;这本书绝不仅仅只是一部民谣史，它更像是美国文化史，除了主要讲述的那些民谣歌手，还几乎介绍了美国20年代发生的所有重大政治、经济、文化事件。也只有在这样详细介绍的美国社会大背景下，那些由借音乐之名引发的其他故事才更生动精彩。书中我最喜欢的内容包括60年代的嬉皮运动；所有和毒品、迷幻剂相关的人物事迹；两位被人忽视的民谣歌手：&lt;a href=&quot;http://en.wikipedia.org/wiki/Tim_Buckley&quot;&gt;蒂姆·巴克利&lt;/a&gt;（Tim Buckley）和&lt;a href=&quot;http://music.douban.com/musician/102593/&quot;&gt;尼克·德雷克&lt;/a&gt;（Nick Drake）。其中在介绍德雷克那张『Five Leaves Left』专辑时与欧·亨利那篇『The Last Leaf』的类比让人叫绝，也更加反衬出德雷克的不幸的一生。&lt;/p&gt;
&lt;p&gt;回想自从上月5号在二层新书架上见到这本书至现在已过去一个半月，这期间我并不是只读了这本书。但有趣的是，这本书将最近读的另外两本书串联了起来，它们分别是&lt;a href=&quot;http://book.douban.com/subject/1223765/&quot;&gt;《请宰了我》&lt;/a&gt;和&lt;a href=&quot;http://book.douban.com/subject/2090728/&quot;&gt;《LSD：我的问题少年》&lt;/a&gt;，前一本同样是介绍美国音乐故事的，但主角换成了60年代末萌芽并在70年代风靡英美的朋克摇滚，后一本则是 LSD 的合成者艾伯特·霍夫曼（Albert Hofmann）亲自书写的 LSD 逸事。我向来着迷于那些不寻常的奇异人物与事件，这几本书充分地满足了我的好奇心。&lt;/p&gt;
&lt;p&gt;当然除了读书，这四十多天来自己还做了很多事，但大多数都希望自己没有做才好，就比如中期答辩这类事，只是会凭白增加青春之苦闷罢了。但有一件事却十分有价值，那便是开了这个博客。虽说大学四年多半过得浑浑噩噩，但偶尔还是会有提笔写点东西的冲动。可惜我这个人比较懒，对折腾网页这类东西更是讨厌，开博客几乎从未进入过我的日常计划中。我基本上每天食堂图书馆自习室，要是有些情绪实在憋不住了就在校内上扔个日志完事。后来注销校内，便转战豆瓣日记，还在上面写了生平第一个技术贴。这两样东西还挺符合我的要求，因为它们都够简单，不用涉及 HTML。用 HTML 标记写文章对我来说绝对不可忍受，那些 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 简直就像是散落在文字里的污渍，毫无美感可言。&lt;/p&gt;
&lt;p&gt;后来我遇到了 &lt;a href=&quot;http://wowubuntu.com/markdown/index.html&quot;&gt;Markdown&lt;/a&gt;、&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;、&lt;a href=&quot;http://pages.github.com&quot;&gt;Github Pages&lt;/a&gt;、&lt;a href=&quot;http://johnmacfarlane.net/pandoc&quot;&gt;Pandoc&lt;/a&gt;，再后来就有了这个博客。一开始我只是把它当作一个笔记本，作用不过就是充当 Linux 下的 &lt;a href=&quot;http://www.evernote.com&quot;&gt;Evernote&lt;/a&gt;。利用 &lt;a href=&quot;http://jekyllbootstrap.com&quot;&gt;Jekyll-Bootstrap&lt;/a&gt; 和一个已有&lt;a href=&quot;http://themes.jekyllbootstrap.com/preview/the-minimum&quot;&gt;主题&lt;/a&gt;迅速搭建出一个博客原型。在熬过了中期答辩的那几天后我急需一个东西来发泄体内堆积过多的荷尔蒙，正好当时这个主题有许多我不满意的地方，因此我好好地荒废了那几天工作日，全心全意扑在了折腾博客上。经过某个彻夜奋战，我完成了一个里程碑式的改动，觉得这个博客终于算是一个可以拿出去给人看的东西了。没想到昨晚到 Windows 下浏览的时候却发现字体完全混乱，而且样式也出了问题。无奈只好再花时间折腾，要是让实验室老师知道花了这么多时间没好好干活，估计会被骂得很惨吧。&lt;/p&gt;
&lt;p&gt;在调整字体的过程中，这个系列&lt;a href=&quot;http://www.cnblogs.com/ruxpinsp1/archive/2008/04/29/font-in-front-end-development-1.html&quot;&gt;博文&lt;/a&gt;给了我很大帮助，在这里谢谢原作者。此外有个浏览器插件叫 &lt;a href=&quot;http://chengyinliu.com/whatfont.html&quot;&gt;WhatFont&lt;/a&gt;，可以实时查看当前页面中的文字所使用的字体，是个不错的小工具。现在这个博客基本上已经比较符合我对它的期望，我也不想再花时间在其外观的设置上，毕竟方便快捷地记录下自己的思考过程和最终想法才是它最重要的功能。在此列出所有在原主题基础上作出的改动：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;将 Pandoc 设为 Jekyll 的 Markdown 渲染器。&lt;/li&gt;
&lt;li&gt;正文与标题的字体均优先选用 &lt;a href=&quot;http://www.google.com/webfonts&quot;&gt;Google Web Fonts&lt;/a&gt; 中的 &lt;a href=&quot;http://www.google.com/webfonts/specimen/Droid+Sans&quot;&gt;Droid Sans&lt;/a&gt;。中文方面 Linux 下首选&lt;a href=&quot;http://wenq.org/index.cgi?MicroHei&quot;&gt;文泉驿微米黑&lt;/a&gt;，Windows 下为微软雅黑，Mac 下则是冬青黑体。&lt;/li&gt;
&lt;li&gt;给每篇文章增加了发表时间。很多 Jekyll 的主题都默认不显示文章发表的具体时间，而是只到发布日期，这点感觉还是很奇怪的。&lt;/li&gt;
&lt;li&gt;增加代码高亮的方式。其实原本 Jekyll 即支持代码高亮，但借助 Pandoc 代码高亮可以用更&lt;a href=&quot;http://johnmacfarlane.net/pandoc/README.html&quot;&gt;简洁&lt;/a&gt;的 Markdown 语法实现。&lt;/li&gt;
&lt;li&gt;添加 &lt;a href=&quot;http://disqus.com&quot;&gt;Disqus&lt;/a&gt; 评论。&lt;/li&gt;
&lt;li&gt;添加 &lt;a href=&quot;http://feedburner.google.com&quot;&gt;FeedBurner&lt;/a&gt; 订阅。&lt;/li&gt;
&lt;li&gt;添加 &lt;a href=&quot;http://www.google.com/analytics&quot;&gt;GoogleAnalytics&lt;/a&gt; 页面分析。&lt;/li&gt;
&lt;li&gt;增加博客图标。待完成。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至于写作的完整过程，我是这样进行的：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;用 &lt;code&gt;rake post&lt;/code&gt; 新建一篇空白 Markdown 文件。&lt;/li&gt;
&lt;li&gt;用 &lt;a href=&quot;http://www.vim.org&quot;&gt;Vim&lt;/a&gt; 加 Pandoc 扩展&lt;a href=&quot;http://johnmacfarlane.net/pandoc/README.html&quot;&gt;语法&lt;/a&gt;写文章。&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;jekyll --safe&lt;/code&gt; 在本地生成所有内容。&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;git push&lt;/code&gt; 将内容送至 Github 远端&lt;a href=&quot;http://xxxx.github.com/xxxx&quot;&gt;库&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;配置好这个写作系统后，我可以将自己的注意力全部放在文章的内容上，而不被其他因素打扰，简直就跟以前在校内、豆瓣上写日志一样。后来我又推荐了好友&lt;a href=&quot;http://marcieinred.github.com&quot;&gt;萝卜&lt;/a&gt;以这种方式开博，虽然他一开始不怎么乐意，不过后来还是经受不住零成本博客的诱惑，跳进了这个大坑。此外他是个前端高人，喜欢直接写 HTML ，没有采用 Jekyll + Markdown。我想总有一天他会后悔的 :P。&lt;/p&gt;
&lt;p&gt;读完《叛逆》后本来是想写一篇基调压抑的文章来总结最近低靡的境况，可写着写着心情却变好了起来，这大概就是博客或者说是写作的魅力吧。对我来说它还有一个吸引我的地方，因为我一直比较支持&lt;a href=&quot;http://zh.wikipedia.org/zh/%E5%AD%98%E5%9C%A8%E4%B8%BB%E4%B9%89&quot;&gt;存在主义&lt;/a&gt;的观点，可近来却常常无法真切地感受到自己的存在，只有看着这个博客的时候，才能确信自己还有颗自主独立的心灵。&lt;/p&gt;
&lt;p&gt;如果说民谣是歌手们对于社会不公的抗议，那这个博客或许就是我对青春成长的叛逆。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>为 Jekyll 装上瑞士军刀 Pandoc</title>
   <link href="http://mindonmind.github.io/2012/04/15/jekyll-pandoc"/>
   <updated>2012-04-15T01:12:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/04/15/jekyll-pandoc</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;style type=&quot;text/css&quot;&gt;
div.sourceCode { overflow-x: auto; }
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code &gt; span.kw { color: #007020; font-weight: bold; } /* Keyword */
code &gt; span.dt { color: #902000; } /* DataType */
code &gt; span.dv { color: #40a070; } /* DecVal */
code &gt; span.bn { color: #40a070; } /* BaseN */
code &gt; span.fl { color: #40a070; } /* Float */
code &gt; span.ch { color: #4070a0; } /* Char */
code &gt; span.st { color: #4070a0; } /* String */
code &gt; span.co { color: #60a0b0; font-style: italic; } /* Comment */
code &gt; span.ot { color: #007020; } /* Other */
code &gt; span.al { color: #ff0000; font-weight: bold; } /* Alert */
code &gt; span.fu { color: #06287e; } /* Function */
code &gt; span.er { color: #ff0000; font-weight: bold; } /* Error */
code &gt; span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
code &gt; span.cn { color: #880000; } /* Constant */
code &gt; span.sc { color: #4070a0; } /* SpecialChar */
code &gt; span.vs { color: #4070a0; } /* VerbatimString */
code &gt; span.ss { color: #bb6688; } /* SpecialString */
code &gt; span.im { } /* Import */
code &gt; span.va { color: #19177c; } /* Variable */
code &gt; span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
code &gt; span.op { color: #666666; } /* Operator */
code &gt; span.bu { } /* BuiltIn */
code &gt; span.ex { } /* Extension */
code &gt; span.pp { color: #bc7a00; } /* Preprocessor */
code &gt; span.at { color: #7d9029; } /* Attribute */
code &gt; span.do { color: #ba2121; font-style: italic; } /* Documentation */
code &gt; span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
code &gt; span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
code &gt; span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
  &lt;/style&gt;
  &lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;em&gt;注意：&lt;/em&gt; 本文已过时，请用最新版 Jekyll&lt;/p&gt;
&lt;p&gt;Jekyll 原生支持 &lt;code&gt;maruku&lt;/code&gt;，&lt;code&gt;rdiscount&lt;/code&gt;，&lt;code&gt;kramdown&lt;/code&gt;，&lt;code&gt;redcarpet&lt;/code&gt; 等 markdwon 渲染器，它们各有利弊。个人认为 Maruku 虽然是 Jekyll 的默认选择，却是最不适合 中文博客的，因为它对中文列表的支持不好。Rdiscount 算是中归中举，但对于 &lt;a href=&quot;http://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt; 的用户来说却比较头疼，容易出诡异的问题。Github 在后台则选用了 Redcarpet 作为其文本渲染器，因为它安全性高且性能卓越，同时它在基本 Markdown 语法的基础上增加了一些自己的特性。Kramdown 是这几个当中对基础 Markdown 语法拓展最多，也是最方便使用的，但跟这篇文章的主角 &lt;a href=&quot;http://johnmacfarlane.net/pandoc&quot;&gt;Pandoc&lt;/a&gt; 来比，它就相形见绌了。&lt;/p&gt;
&lt;p&gt;首先介绍一下 &lt;a href=&quot;http://johnmacfarlane.net/pandoc&quot;&gt;Pandoc&lt;/a&gt;，它的功能是在多种常见的标记语言进行相互转换，其中包括 Markdown, reStructuredText, Textilte, HTML, &lt;span class=&quot;math inline&quot;&gt;\(\LaTeX\)&lt;/span&gt; 等。利用它，你可以用简单的 Markdown 语法生成与 &lt;span class=&quot;math inline&quot;&gt;\(\LaTeX\)&lt;/span&gt; 一致的文档，还可以写 Beamer 演示文稿。更强大的是，它还能将以上提到的这些语言所写文件转换成 &lt;em&gt;doc&lt;/em&gt; 文档，这对我们这些体制内码农很是实用。下面这张图展示了 Pandoc 让人吃惊 的功能集，不愧为文件转换中的瑞士军刀：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://johnmacfarlane.net/pandoc/diagram.png&quot; alt=&quot;pandoc is awsome!&quot; width=&quot;550&quot; height=&quot;500&quot;/&gt;&lt;/p&gt;
&lt;p&gt;对于用 Jekyll 写博客的人来说它还有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持在 Markdown 文档中直接使用 &lt;span class=&quot;math inline&quot;&gt;\(\LaTeX\)&lt;/span&gt; 公式，最终生成的网页更是可以选择以图片、MathJax、jsMath 等等方式显示公式&lt;/li&gt;
&lt;li&gt;支持代码高亮，并自带多种高亮方案可选。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然这两个功能都可以通过设置 Jekyll 实现，但由于我对 Pandoc 已经欲罢不能，其它的渲染器都再也看不上眼了。下面我就来介绍如何让 Jekyll 使用 Pandoc 作为 Markdown 渲染器。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;首先需要说明的是，由于 &lt;a href=&quot;http://pages.github.com&quot;&gt;Github Pages&lt;/a&gt; 并不支持 Pandoc，所以就不能将包含 Markdown 日志等文件的 Jekyll 目录直接放到 Github 库上指望 Github 帮我们渲染它们，而是需要在本地将站点完全生成好后再将它送到某一库里。有人可能觉得麻烦，但对我 来说却是一个优点，因为这样做会使 Github Pages 更新速度大大加快，不会出现今晚提交，明早才被更新好的情况。&lt;/p&gt;
&lt;p&gt;先要安装 Pandoc，具体过程请参考：&lt;a href=&quot;/2012/03/31/pandoc-cabal&quot;&gt;安装 GHC，Cabal/Cabal-install 及 Pandoc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果本机上已安装了 Jekyll 则需将其删除，因为下面要使用修改过的 Jekyll。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(sudo) gem uninstall jekyll&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果本机还未安装 Jekyll，大概你也没装 Ruby 了，那么请执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(sudo) yum install ruby ruby-devel rubygems
(sudo) gem install liquid classifier directory_watcher maruku kramdown albino &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载修改过的 Jekyll，它已被修改成 Pandoc 友好型 :)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:xxxxx/jekyll&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/dsanson/jekyll&quot;&gt;这里&lt;/a&gt; 有 &lt;a href=&quot;http://www.davidsanson.com/&quot;&gt;dsanson&lt;/a&gt; 的版本，作者称可以解决 Github Pages 不支持 Pandoc 的问题，不过我试了一晚愣是没搞定，所以自己写了一个。其实原理很简单，即修改&lt;code&gt;lib/jekyll/converters/markdown.rb&lt;/code&gt; 文件，在 &lt;code&gt;setup&lt;/code&gt; 和 &lt;code&gt;convert&lt;/code&gt; 中按照其它渲染器的格式增加一个 &lt;code&gt;pandoc&lt;/code&gt; 判断即可。)&lt;/p&gt;
&lt;p&gt;安装 Pandoc-ruby，一个 Pandoc 的 Ruby 接口：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(sudo) gem install pandoc-ruby&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装 Jekyll：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem build jekyll.gemspec
(sudo) gem install -l jekyll-0.11.2.gem&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改 Jekyll 配置文件 &lt;code&gt;_config.yml&lt;/code&gt; 如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;markdown: pandoc
pandoc:
    extensions: [mathjax, standalone]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上面的 &lt;code&gt;extensions&lt;/code&gt; 并不唯一，可以将任何 Pandoc 支持的选项加入其中。&lt;/p&gt;
&lt;p&gt;好了，现在我们博客中所有的 Markdown 文件已经是由 Pandoc 渲染的了！&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;下面是 Pandoc 演示环节&lt;/p&gt;
&lt;p&gt;从&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$e^x = \sum_{n=0}^\infty \frac{x^n}{n!} = \lim_{n\rightarrow\infty} (1+x/n)^n$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;到&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;\(e^x = \sum_{n=0}^\infty \frac{x^n}{n!} = \lim_{n\rightarrow\infty} (1+x/n)^n\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ {.python .numberLines}
class FSM(object):

&amp;quot;&amp;quot;&amp;quot;This is a Finite State Machine (FSM).
&amp;quot;&amp;quot;&amp;quot;

def __init__(self, initial_state, memory=None):

    &amp;quot;&amp;quot;&amp;quot;This creates the FSM. You set the initial state here. The &amp;quot;memory&amp;quot;
    attribute is any object that you want to pass along to the action
    functions. It is not used by the FSM. For parsing you would
    typically pass a list to be used as a stack. &amp;quot;&amp;quot;&amp;quot;
     
    # Map (input_symbol, current_state) --&amp;gt; (action, next_state).
    self.state_transitions = {}
    # Map (current_state) --&amp;gt; (action, next_state).
    self.state_transitions_any = {}
    self.default_transition = None
    ...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;到&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;&lt;table class=&quot;sourceCode python numberLines&quot;&gt;&lt;tr class=&quot;sourceCode&quot;&gt;&lt;td class=&quot;lineNumbers&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;sourceCode&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; FSM(&lt;span class=&quot;bu&quot;&gt;object&lt;/span&gt;):

&lt;span class=&quot;co&quot;&gt;&amp;quot;&amp;quot;&amp;quot;This is a Finite State Machine (FSM).&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;__init__&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;, initial_state, memory&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;None&lt;/span&gt;):

    &lt;span class=&quot;co&quot;&gt;&amp;quot;&amp;quot;&amp;quot;This creates the FSM. You set the initial state here. The &amp;quot;memory&amp;quot;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    attribute is any object that you want to pass along to the action&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    functions. It is not used by the FSM. For parsing you would&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    typically pass a list to be used as a stack. &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
     
    &lt;span class=&quot;co&quot;&gt;# Map (input_symbol, current_state) --&amp;gt; (action, next_state).&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.state_transitions &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; {}
    &lt;span class=&quot;co&quot;&gt;# Map (current_state) --&amp;gt; (action, next_state).&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.state_transitions_any &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; {}
    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.default_transition &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;None&lt;/span&gt;
    ...&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.davidsanson.com&quot;&gt;dsanson 的博客&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>安装 GHC, Cabal/Cabal-install 及 Pandoc</title>
   <link href="http://mindonmind.github.io/2012/03/31/pandoc-cabal"/>
   <updated>2012-03-31T00:00:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/03/31/pandoc-cabal</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;GHC 是 Glasgow Haskell Compiler 的简称，也是 Haskell Platform 的基础。最新的版本可以从&lt;a href=&quot;http://www.haskell.org/ghc/&quot;&gt;这里&lt;/a&gt;下载。&lt;/p&gt;
&lt;p&gt;进入最新版本的下载页面后有两个选择，一是二进制包，二是纯源码包。如果想从纯源码包下载，需要你本机上已装有某个版本的 ghc ，因为这个源码的大部分就事用 Haskell 写的。&lt;/p&gt;
&lt;p&gt;由于种种缘故我把之前 yum 安装的 ghc 给删了，所以这里我选择 ghc 的 linux_x86 平台二进制包。&lt;/p&gt;
&lt;p&gt;下好安装包后即是通用的 make 过程：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar xjvf ghc-7.x.x-i386-linux-unkown.tar.bz2
cd ghc-7.x.x
./configure
make install&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;现在可以开始安装 Cabal/Cabal-install了。&lt;/p&gt;
&lt;p&gt;Cabal 是 Haskell 的一个 package，提供了一个 Haskell 包安装框架，方便了 Haskell 包的管理。而 Cabal-install 则是另一个 Haskell 包安装库，它提供了 &lt;code&gt;cabal&lt;/code&gt; 命令行程序，该程序在安装新包时会自动解决包依赖关系，大大方便了 Haskell 包的安装。&lt;/p&gt;
&lt;p&gt;官方的建议是安装 Haskekll Platform，它整合了 GHC，Cabal，Cabal-install 等常用工具。由于我觉得 fedora repo 中的 HP 版本过老，编译 HP 又需要其他很多东西，所以就没有选取这个方案，而是自己安装 Cabal。&lt;/p&gt;
&lt;p&gt;其实 Cabal 和 Cabal-install 只要安装后者就可以了，因为安装 Cabal-install 时用的 &lt;code&gt;bootstrap&lt;/code&gt; 程序会自动下载 Cabal-install 所依赖的包，其中当然包括 Cabal。但如果你只安装前者那么后者还需要手动安装。&lt;/p&gt;
&lt;p&gt;虽说可以从 &lt;a href=&quot;http://hackage.haskell.org/package/cabal-install&quot;&gt;hackage&lt;/a&gt; 中下载 Cabal-install，但版本实在太老了。我选择从&lt;a href=&quot;http://darcs.haskell.org/cabal-branches/&quot;&gt;开发库&lt;/a&gt;中下载最新的稳定版本安装。这里有一个需要注意的是一定要保证你所用的 Cabal 版本与 Cabal-install 版本一致，也就是说从开发库中同一个版本文件夹中下载 Cabal 和 Cabal-install，否则安装时会出现麻烦。所以最好的办法就是不安装 Cabal 而直接安装 Cabal-install，这样永远不会出现冲突问题。&lt;/p&gt;
&lt;p&gt;我选择的是 &lt;a href=&quot;http://darcs.haskell.org/cabal-branches/cabal-1.14/&quot;&gt;Cabal-1.14&lt;/a&gt; 版本，把这个链接里所有的文件都用 &lt;code&gt;wget&lt;/code&gt; 下载到本地。命令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -r -np -p http://darc.haskell.org/cabal-branches/cabal-1.14/cabal-install&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进入Cabal-install目录后执行&lt;code&gt;sh bootstrap.sh&lt;/code&gt;，即可完成安装。如果在安装过程中出现问题，大多是因为系统缺少一些库，比如 &lt;code&gt;gmp-devel&lt;/code&gt;，&lt;code&gt;zlib-devel&lt;/code&gt; 等，需要自行用 &lt;code&gt;yum&lt;/code&gt; 搞定。&lt;/p&gt;
&lt;p&gt;安装完成Cabal-install 后，将cabal程序所在目录加入PATH中，再执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cabal update
cabal install pandoc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;好了，现在可以享受pandoc给我们带来的便利了！&lt;/p&gt;
&lt;p&gt;pandoc的使用请参考下面的&lt;em&gt;Links&lt;/em&gt;。&lt;/p&gt;
&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://johnmacfarlane.net/pandoc/demos.html&quot;&gt;Pandoc Demos&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://johnmacfarlane.net/pandoc/README.html&quot;&gt;Pandoc User’s Guide&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://chen.yanping.me/cn/blog/2012/03/13/pandoc/&quot;&gt;一份中文简介&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>Markdown 中文列表抽风</title>
   <link href="http://mindonmind.github.io/2012/03/28/markdown"/>
   <updated>2012-03-28T16:53:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/03/28/markdown</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;用 markdown 写带中文的列表时发现 jekyll 生成的网页中有的可以正常显示，有的则不行。折腾半天，发现如果列表项中含有英文字母等非中文字符，就可以正确显示，纯中文的那些打死也不行。&lt;/p&gt;
&lt;p&gt;上网查后得知原来是 jeklly 默认 markdown 引擎 maruku 的问题，将引擎改为 rdiscount 即可。做法是修改 &lt;code&gt;_config.yml&lt;/code&gt; 文件，在 &lt;code&gt;pygments: true&lt;/code&gt; 上面添加一行 &lt;code&gt;markdown: rdiscount&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.douban.com/note/147668553/&quot;&gt;markdown 渲染引擎折腾记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.v2ex.com/t/28800&quot;&gt;中文清单 lists 问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>Vim 拾遗</title>
   <link href="http://mindonmind.github.io/2012/03/27/vim"/>
   <updated>2012-03-27T13:04:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/03/27/vim</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h2 id=&quot;索引&quot;&gt;索引&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#vimim&quot;&gt;VimIm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#markdown&quot;&gt;markdown syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#vimfold&quot;&gt;vim fold&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;vimim&quot;&gt;
VimIm
&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;下载 &lt;a href=&quot;http://vim.sourceforge.net/scripts/download_script.php?src_id=17150/&quot;&gt;vimim.vim&lt;/a&gt; 至 &lt;code&gt;/usr/share/vim73/plugin&lt;/code&gt; 或 &lt;code&gt;/home/.vim/plugin&lt;/code&gt; 中&lt;/li&gt;
&lt;li&gt;下载 &lt;a href=&quot;http://vimim-data.googlecode.com/svn/trunk/data/vimim.pinyin.txt/&quot;&gt;vimim.pingyin.txt&lt;/a&gt;，&lt;a href=&quot;http://vimim.googlecode.com/svn/trunk/plugin/vimim.cjk.txt/&quot;&gt;vimim.cjk.txt&lt;/a&gt; 至相同目录&lt;/li&gt;
&lt;li&gt;两种工作模式：
&lt;ul&gt;
&lt;li&gt;在插入模式下输入拼音，按 CTRL-^ 直接将拼音转换为汉字。&lt;/li&gt;
&lt;li&gt;在任意模式下按 CTRL-_， 进入动态输入模式，此模式与普通输入法类似&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; vimim.cjk.txt 是一个数码字库，如果需要拼音输入或五笔输入法需配套相应的其他字库 &lt;a href=&quot;http://groups.google.com/forum/?fromgroups#!topic/vimim/zWdi6QqKdLk/&quot;&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;links&quot;&gt;Links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://vim.sourceforge.net/scripts/script.php?script_id=2506&quot;&gt;sourceforge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vimim.googlecode.com/svn/vimim/vimim.big5.html#cloud&quot;&gt;google code page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!topic/vimim/&quot;&gt;gogole groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/vimim-data/&quot;&gt;第三方词库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;markdown&quot;&gt;
markdown vim语法高亮
&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;下载 &lt;a href=&quot;http://plasticboy.com/dox/vim-markdown.zip&quot;&gt;mkd.vim.tar.gz&lt;/a&gt;，解压至 &lt;code&gt;.vim/&lt;/code&gt; 中&lt;/li&gt;
&lt;li&gt;里面包含两个文件夹：&lt;code&gt;ftdetect&lt;/code&gt; 和 &lt;code&gt;syntax&lt;/code&gt;，第一个用于设置 vim 的文件关联，第二个是真正的 syntax 文件&lt;/li&gt;
&lt;li&gt;如需将某种文件后缀关联为 markdown 类型，需要在 &lt;code&gt;ftdetect/mkd.vim&lt;/code&gt; 中添加后缀&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;links-1&quot;&gt;Links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://plasticboy.com/markdown-vim-mode/&quot;&gt;mkd blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/plasticboy/vim-markdown/&quot;&gt;mkd github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;vimfold&quot;&gt;
vim 折叠相关命令
&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;set foldenable/nofoldenable 
set foldmethod=syntax/indent...
set foldlevel=0/1/2...&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;links-2&quot;&gt;Links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://man.chinaunix.net/newsoft/vi/doc/fold.html&quot;&gt;chinaunix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux 小窍门札记</title>
   <link href="http://mindonmind.github.io/2012/03/22/linux-tricks"/>
   <updated>2012-03-22T20:33:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2012/03/22/linux-tricks</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;这里用来记录Linux使用过程中得到的一些零碎却非常实用的小技巧。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;yum&quot;&gt;yum&lt;/h2&gt;
&lt;p&gt;查找哪个包提供了&lt;code&gt;makeinfo&lt;/code&gt;程序：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum provides *bin/makeinfo&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;rpm&quot;&gt;rpm&lt;/h2&gt;
&lt;p&gt;查找某个包的相关文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rpm -qs libgfortran&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;zip&quot;&gt;zip&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;unzip xxx.zip -d destdir&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;tar&quot;&gt;tar&lt;/h2&gt;
&lt;p&gt;将foo1，foo2打包至目标target&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar czf dir/to/target.tar.gz foo1 foo2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将target.tar.gz内容抽取至foo目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir foo; tar xzf target.tar.gz --directory=foo&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;z&quot;&gt;7z&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;7z e xxx.7z -o{DIR}&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;screenshot&quot;&gt;screenshot&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;scrot -s&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;gnome-快捷键&quot;&gt;Gnome 快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Terminal缩放&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Crtl-_  || Crtl-+&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;插入系统剪切板的内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Shift-Ins&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;bash-快捷键&quot;&gt;Bash 快捷键&lt;/h2&gt;
&lt;h3 id=&quot;命令行编辑&quot;&gt;命令行编辑&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;移动至行首或行尾 &lt;code&gt;Crtl-a || Crtl-e&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;按单词前移或后移 &lt;code&gt;Alt-f || Alt-b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除至行首或行尾 &lt;code&gt;Ctrl-u || Ctrl-k&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;回删一个词 &lt;code&gt;Ctrl-w || Alt-Backspace || Esc-Backspace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;后删一个词 &lt;code&gt;Alt-d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;粘贴至光标后 &lt;code&gt;Ctrl-y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;命令行历史&quot;&gt;命令行历史&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;上一条命令 &lt;code&gt;!!&lt;/code&gt; | &lt;code&gt;!!:p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;上条以xx开头的命令 &lt;code&gt;!xx&lt;/code&gt; || &lt;code&gt;!xx:p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;参数: &lt;code&gt;!*&lt;/code&gt; || &lt;code&gt;!$&lt;/code&gt; || &lt;code&gt;!*:p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;替换参数 &lt;code&gt;^foo^fooo&lt;/code&gt; || &lt;code&gt;^foo^fooo^&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;wget&quot;&gt;wget&lt;/h2&gt;
&lt;p&gt;从&lt;URL&gt;下载整个文件夹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -c -r -np -k -L -p &amp;lt;URL&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;指定下载目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -P &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以30秒为间隔不断重新请求下载&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -t 0 -w 31 -c &amp;lt;URL&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 <entry>
   <title>追忆似豆年华</title>
   <link href="http://mindonmind.github.io/2011/04/09/pea-times"/>
   <updated>2011-04-09T05:04:00-04:00</updated>
   <id>hhttp://mindonmind.github.io/2011/04/09/pea-times</id>
   <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;&gt;
  &lt;title&gt;&lt;/title&gt;
  &lt;style type=&quot;text/css&quot;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;金豆男是我大一下学期的英语老师。他的原名我早已忘记，但他活泼滑稽的形象却久久驻留在我的记忆之中。&lt;/p&gt;
&lt;p&gt;“金豆男”这个称呼源于此君喜欢给上课回答问题的同学予以嘉奖，奖品是从他那张圆双嘴里蹦出的“金豆一粒！”，而金豆又可以在期末时折合成分数变为实惠。可惜我不仅没能争取到半粒金豆，还因为几次缺课被记录在案，给金豆男留下了态度不端正的印象。说到缺课，也不能全怪罪到我的头上。金豆男上课有一特色，即喜欢借语言之体讲西方之文化。往往课上了一大半，课文题目都还不知道，却把什么清教徒五月花，什么新英格兰，什么常青藤、什么CCIE轮番做了详细介绍。在课堂的最后十几分钟，金豆男会突然想起学校凭什么给他发工资，便迅猛的将课文带过，算是没在学校白吃白喝。我倒是挺喜欢这种风格，也乐于学习那些语言背后的故事，但我厌恶有人卖弄学识，而金豆男每次手舞足蹈的讲演，满面油光的神情，以及对友好同学的“金豆一粒”，都让我对他大为不快。再加上后来金豆男觉得课文讲得太少而过意不去，终于回归正统，次次搞新闻听写，致使我对他最后的一点好感也荡然无存。&lt;/p&gt;
&lt;p&gt;现在回想那些上过的英语课，教材里的内容早已忘记，金豆男的音容笑貌却越想越有趣。某日金豆男由当代青年的恋爱状况抒发感慨，激动地提起自己当年跑到女生楼下大叫“xxx你给我下来!”的英勇事迹，还谈到和心爱的女生一起吃大排档时的心满意足，再暗暗将婚后生活的妥协与失意一带而过，让我不禁对他敬重三分。接着，金豆男又说到青年男女身体接触的话题，结果是他一本正经地告诫班上的女同学，“你们一定要爱护自己的身体，啊，不要吃急性避孕药……” 这是我对金豆男记忆最深的一件趣事。&lt;/p&gt;
&lt;p&gt;另次课上，金豆男想给大家普及一下西方文学，问班上同学有没有人知道意识流。良久，子陪同学小心翼翼地说了“追忆逝去的时光”几个大字。我心想，这毛厮知道有这本书就罢了，还说这样一个难听俗气的译名，实在可鄙。金豆男却喜出望外，兴奋地把意识流大师及其作品给大家梳理了一遍。我想他是过于激动了，以至于谈到福老爷子的时候竟说，“你们要是想做个有品位的大学生，跟别人聊天的时候千万不要说读过xxx，要说读过xx与xx，啊，xxx是小儿科，是高中生读的，xx与xx才是真正的厉害！” 如今我总算读过了xx与xx，尽管没怎么读懂，却也能“深深地感受”到它的厉害——福爷在我脑海里的映像，大概就是美利坚的迅爷，不过更加大胆和先锋。以后要再有机会碰上金豆男，不知凭我的这点感悟能不能算得上“有品位”的大学生。&lt;/p&gt;
&lt;p&gt;在这样一个夜晚，我想起了金豆男，也想起了两年前那些同样难熬的时光。那时有过对杜小姐作品的痴迷，也有过与卡先生的地下对话，地点往往都是在新主B座，金豆男也正是宣讲于此，而这座名又似乎强烈暗示着学士之路上的痛苦与孤独。对我来说，每一年似乎都没什么变化，类似的经历总会在同一季节不停轮转，转成一粒粒金豆，镶在枕边，咯着枕骨让人无法入眠。下次当我再想起金豆男，我会对我身旁的人说：我爱护你的身体，所以不要吃急性避孕药。&lt;/p&gt;
&lt;p&gt;那一天，便是我似豆年华的终结。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 
 
</feed>